var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AddRequestButtonComponent.html",[0,0.05,1,0.581]],["body/components/AddRequestButtonComponent.html",[0,0.091,1,0.986,2,0.181,3,0.181,4,0.766,5,0.813,6,0.766,7,0.766,8,0.155,9,5.277,10,1.2,11,4.672,12,2.701,13,0.484,14,1.395,15,2.942,16,0.721,17,1.464,18,1.209,19,1.104,20,4.705,21,1.04,22,4.143,23,0.396,24,0.706,25,1.286,26,2.612,27,1.875,28,0.809,29,2.742,30,1.325,31,0.658,32,2.44,33,2.457,34,2.457,35,0.635,36,3.582,37,0.757,38,0.023,39,0.72,40,0.592,41,0.747,42,4.143,43,3.582,44,1.495,45,0.706,46,3.582,47,3.582,48,0.435,49,0.235,50,0.915,51,1.154,52,1.154,53,0.919,54,2.231,55,2.701,56,0.129,57,0.057,58,0.97,59,1.559,60,2.415,61,2.231,62,2.231,63,0.484,64,1.04,65,0.979,66,0.809,67,1.267,68,0.766,69,1.04,70,0.596,71,0.766,72,0.636,73,0.766,74,0.596,75,1.04,76,0.596,77,0.596,78,0.596,79,1.045,80,0.766,81,0.596,82,1.04,83,0.596,84,0.766,85,0.636,86,1.04,87,0.596,88,1.04,89,0.596,90,0.766,91,0.596,92,0.766,93,0.596,94,0.766,95,0.596,96,0.766,97,0.766,98,0.596,99,0.766,100,0.596,101,0.766,102,0.596,103,0.721,104,0.596,105,0.801,106,0.766,107,0.596,108,0.766,109,0.596,110,0.596,111,0.766,112,0.596,113,0.766,114,0.596,115,0.636,116,0.557,117,0.721,118,0.766,119,0.015,120,0.015]],["title/components/AppComponent.html",[0,0.05,70,0.581]],["body/components/AppComponent.html",[0,0.094,1,0.555,2,0.168,3,0.168,4,0.713,6,1.23,7,0.713,8,0.144,10,0.555,13,0.451,14,0.671,16,0.671,17,1.456,18,1.206,21,0.991,23,0.377,24,0.673,25,1.336,27,1.793,28,0.771,30,0.991,31,0.626,33,2.404,35,0.67,37,0.721,38,0.023,39,0.702,40,0.616,41,0.72,44,0.903,45,0.673,48,0.459,49,0.219,51,1.074,52,1.074,53,0.555,56,0.121,57,0.053,58,1.44,63,0.451,64,0.991,65,0.932,66,0.956,67,1.23,68,0.713,69,0.991,70,0.956,71,0.713,72,0.592,73,0.713,74,0.555,75,0.991,76,0.555,77,1.067,78,0.555,79,1.006,80,0.713,81,0.555,82,0.991,83,0.555,84,0.713,85,0.592,86,0.991,87,0.555,88,0.991,89,0.555,90,0.713,91,0.555,92,0.713,93,0.555,94,0.713,95,0.555,96,0.991,97,0.713,98,0.555,99,0.713,100,0.555,101,0.713,102,0.555,103,0.671,104,0.555,105,0.817,106,0.713,107,0.555,108,0.713,109,0.555,110,0.555,111,0.713,112,0.555,113,0.713,114,0.555,115,0.592,116,0.519,117,0.671,118,0.713,119,0.014,120,0.014,121,2.841,122,2.885,123,1.581,124,2.046,125,2.66,126,4.632,127,5.145,128,4.632,129,2.35,130,2.841,131,1.597,132,2.014,133,3.184,134,3.624,135,3.916,136,3.335,137,4.632,138,3.335,139,4.533,140,3.945,141,4.335,142,1.052,143,3.335,144,1.916,145,2.272,146,3.335,147,3.335,148,3.335,149,3.335,150,1.139,151,1.282,152,2.272,153,1.363,154,1.916,155,1.451,156,1.656,157,1.139,158,1.677,159,2.841,160,3.335,161,3.335,162,2.841,163,3.335,164,3.335,165,3.335,166,3.335,167,0.957,168,4.632,169,3.335,170,3.335,171,3.335,172,1.656,173,3.335,174,1.893,175,3.335,176,3.335,177,3.335,178,3.335,179,3.335]],["title/modules/AppModule.html",[180,1.001,181,2.377]],["body/modules/AppModule.html",[2,0.244,3,0.244,8,0.209,13,0.653,38,0.023,48,0.514,49,0.317,56,0.213,57,0.077,63,0.653,70,1.203,119,0.018,120,0.018,122,3.674,180,1.903,181,4.854,182,2.241,183,3.393,184,3.162,185,2.738,186,4.112,187,4.112,188,4.112,189,4.112,190,4.311,191,2.738,192,2.397,193,2.573,194,4.829,195,5.899,196,3.143,197,5.899,198,5.024,199,4.112,200,4.829,201,5.899,202,4.112,203,4.829,204,4.829,205,4.829]],["title/modules/AppRoutingModule.html",[180,1.001,206,2.173]],["body/modules/AppRoutingModule.html",[2,0.257,3,0.257,8,0.22,18,0.846,38,0.023,48,0.496,49,0.333,56,0.22,57,0.081,58,1.377,77,0.846,105,0.823,119,0.019,120,0.019,122,3.168,151,1.955,180,1.746,196,3.243,206,3.791,207,5.086,208,5.086,209,4.146,210,3.134,211,4.146,212,4.332,213,4.912,214,5.086,215,5.086,216,3.835,217,6.087,218,5.086,219,4.332,220,5.086,221,5.086,222,5.086,223,5.086]],["title/guards/AuthGuard.html",[211,2.377,224,2.631]],["body/guards/AuthGuard.html",[2,0.229,3,0.229,8,0.196,13,0.614,23,0.37,28,0.945,31,0.614,35,0.608,37,0.884,38,0.023,39,0.66,40,0.608,41,0.768,45,0.971,48,0.477,49,0.298,56,0.164,57,0.072,77,1.08,115,1.008,119,0.018,120,0.018,123,1.551,125,2.609,132,2.091,133,3.434,150,1.939,151,1.747,158,1.645,167,1.629,211,3.869,219,5.694,224,4.673,225,4.543,226,3.426,227,4.543,228,4.543,229,6.494,230,6.494,231,6.494,232,4.543,233,1.996,234,5.681,235,2.877,236,5.681,237,3.869,238,4.838,239,4.221,240,4.221,241,5.681,242,3.869,243,3.869,244,3.426,245,2.829,246,3.869,247,4.543,248,4.543]],["title/components/AuthIndexComponent.html",[0,0.05,74,0.581]],["body/components/AuthIndexComponent.html",[0,0.09,1,0.631,2,0.191,3,0.191,4,0.811,5,0.861,6,0.811,7,0.811,8,0.164,10,0.631,14,0.763,16,0.763,17,1.471,18,1.214,19,1.148,21,1.081,23,0.494,24,0.734,25,1.307,26,2.582,27,1.864,28,0.841,30,1.081,31,0.684,33,2.498,34,2.498,35,0.65,37,0.59,38,0.023,39,0.705,40,0.609,41,0.684,45,0.551,48,0.417,49,0.249,50,0.969,51,1.222,52,1.222,53,0.631,56,0.137,57,0.06,63,0.513,64,1.081,65,1.017,66,0.841,67,1.297,68,0.811,69,1.081,70,0.631,71,0.811,72,0.673,73,0.811,74,1.009,75,1.081,76,0.631,77,1.081,78,0.631,79,1.076,80,0.811,81,0.631,82,1.081,83,0.631,84,0.811,85,0.673,86,1.081,87,0.631,88,1.081,89,0.631,90,0.811,91,0.631,92,0.811,93,0.631,94,0.811,95,0.631,96,0.811,97,0.811,98,0.631,99,0.811,100,0.631,101,0.811,102,0.631,103,0.763,104,0.631,105,0.82,106,0.811,107,0.631,108,0.811,109,0.631,110,0.631,111,0.811,112,0.631,113,0.811,114,0.631,115,0.673,116,0.59,117,0.763,118,0.811,119,0.016,120,0.016,123,1.726,124,2.187,129,2.479,142,0.861,237,3.443,249,4.764,250,4.764,251,3.231,252,5.687,253,5.056,254,2.584,255,3.793,256,3.793,257,3.793,258,3.793,259,2.584,260,2.86,261,1.761,262,3.793,263,3.793,264,2.021,265,2.021,266,3.793]],["title/components/AuthLoginComponent.html",[0,0.05,76,0.581]],["body/components/AuthLoginComponent.html",[0,0.082,1,0.479,2,0.145,3,0.145,4,0.615,5,0.653,6,0.615,7,0.615,8,0.124,10,0.479,14,0.579,15,1.429,16,0.579,17,1.438,18,1.186,19,0.947,21,0.892,23,0.34,24,0.606,25,1.291,27,1.868,28,0.694,30,0.892,31,0.564,33,2.29,35,0.658,37,0.448,38,0.023,39,0.625,40,0.612,41,0.564,45,0.418,48,0.437,49,0.189,51,0.927,52,0.927,53,0.479,56,0.104,57,0.046,63,0.389,64,0.892,65,0.839,66,0.694,67,1.151,68,0.615,69,0.892,70,0.479,71,0.615,72,0.511,73,0.615,74,0.479,75,0.892,76,0.895,77,1.047,78,0.479,79,1.018,80,0.615,81,0.479,82,0.892,83,0.479,84,0.615,85,0.511,86,0.892,87,0.479,88,0.892,89,0.479,90,0.615,91,0.479,92,0.615,93,0.479,94,0.615,95,0.479,96,0.615,97,0.615,98,0.479,99,0.615,100,0.479,101,0.615,102,0.479,103,0.579,104,0.479,105,0.728,106,0.615,107,0.479,108,0.615,109,0.479,110,0.479,111,0.615,112,0.479,113,0.615,114,0.479,115,1.014,116,0.448,117,0.579,118,0.615,119,0.013,120,0.013,132,1.918,142,0.653,156,1.429,172,2.071,233,0.927,235,2.278,237,3.665,249,4.746,261,1.936,264,1.533,265,3.353,267,4.746,268,2.451,269,4.907,270,4.172,271,5.957,272,2.652,273,5.381,274,4.058,275,2.451,276,2.29,277,4.172,278,2.878,279,2.878,280,2.878,281,1.005,282,1.005,283,2.878,284,1.705,285,5.381,286,5.381,287,2.878,288,1.336,289,1.252,290,2.878,291,2.878,292,2.878,293,4.172,294,2.878,295,2.17,296,2.878,297,2.878,298,2.878,299,2.878,300,2.878,301,2.878,302,2.878,303,2.878,304,4.172,305,2.598,306,2.17,307,3.174,308,3.665,309,3.352,310,1.793,311,1.793,312,1.96,313,2.841,314,2.223,315,2.841,316,2.396,317,3.056,318,3.056,319,3.342,320,1.793,321,1.653,322,1.793,323,1.793,324,3.146,325,1.96,326,2.841,327,2.17,328,1.429,329,1.96,330,2.17,331,1.429,332,2.17,333,2.17,334,2.17,335,2.223,336,2.223,337,2.841,338,2.598,339,2.223,340,2.071,341,3.124,342,2.17,343,2.818,344,1.653,345,1.533,346,1.793,347,3.044,348,4.307,349,1.793,350,1.96,351,1.96,352,2.841,353,2.841,354,2.841,355,1.96,356,2.223,357,2.841,358,1.96,359,1.96,360,1.96,361,1.96,362,2.17,363,2.17]],["title/modules/AuthModule.html",[180,1.001,364,2.377]],["body/modules/AuthModule.html",[0,0.081,2,0.229,3,0.229,8,0.196,38,0.023,48,0.521,49,0.298,50,1.16,56,0.205,57,0.072,58,1.23,63,0.614,74,1.151,76,1.151,119,0.018,120,0.018,151,1.747,153,2.322,180,1.629,182,2.109,183,3.302,184,2.255,185,2.877,191,2.637,192,2.255,193,2.42,196,3.026,209,3.094,210,2.877,213,4.283,237,3.094,250,3.426,267,3.426,364,4.889,365,3.869,366,3.869,367,3.869,368,5.808,369,3.633,370,4.543,371,4.838,372,4.838,373,4.838,374,2.829,375,3.869,376,3.426,377,5.681,378,4.543,379,4.543,380,3.869,381,3.869,382,3.869]],["title/injectables/AuthService.html",[132,1.124,150,1.191]],["body/injectables/AuthService.html",[2,0.203,3,0.203,8,0.174,13,0.712,23,0.328,24,0.764,28,0.875,31,0.545,35,0.721,37,0.819,38,0.023,39,0.611,40,0.628,41,0.712,44,1.681,45,0.991,48,0.386,49,0.264,56,0.146,57,0.064,58,1.091,77,0.875,115,1.236,119,0.016,120,0.016,125,2.315,132,1.695,134,3.584,135,4.231,142,1.195,150,2.121,152,2.746,153,1.648,154,2.315,155,2.55,158,1.46,167,1.156,233,1.695,242,2.746,245,2.511,281,1.268,282,1.268,284,2.901,383,3.04,384,6.609,385,6.609,386,6.212,387,6.212,388,5.291,389,5.263,390,3.433,391,5.263,392,4.031,393,5.629,394,4.031,395,4.991,396,4.031,397,5.263,398,5.291,399,5.263,400,4.031,401,3.968,402,5.976,403,2.388,404,4.031,405,2.746,406,3.433,407,3.433,408,4.031,409,4.031,410,4.031,411,3.433,412,4.031,413,3.433,414,4.031,415,4.031,416,4.031]],["title/interceptors/BasicAuthInterceptor.html",[417,2.972,418,2.972]],["body/interceptors/BasicAuthInterceptor.html",[2,0.191,3,0.191,8,0.164,10,1.163,13,0.768,14,1.27,23,0.308,24,0.733,25,1.016,28,0.84,31,0.512,35,0.676,37,0.884,38,0.023,39,0.66,40,0.676,41,0.768,45,0.963,48,0.463,49,0.248,56,0.137,57,0.06,58,1.024,77,1.12,119,0.016,120,0.019,123,1.292,125,2.173,132,2.091,150,1.723,158,1.37,167,1.738,172,3.134,174,1.547,226,2.853,233,1.829,235,1.756,239,4.127,240,3.869,242,3.438,244,2.853,245,2.357,281,0.912,282,0.912,417,4.838,418,4.299,419,6.493,420,3.784,421,4.569,422,6.059,423,6.059,424,4.127,425,4.816,426,6.059,427,5.048,428,4.838,429,3.774,430,5.048,431,5.048,432,6.629,433,6.059,434,3.784,435,5.048,436,5.048,437,1.829,438,6.059,439,3.784,440,2.689,441,3.784,442,5.048,443,5.048,444,3.784,445,5.048,446,2.853,447,2.853,448,3.784,449,1.647,450,3.784,451,2.853,452,5.048,453,3.784,454,5.048,455,3.784,456,3.784,457,3.784,458,3.784,459,3.784,460,3.784]],["title/modules/CoreModule.html",[180,1.001,190,2.173]],["body/modules/CoreModule.html",[2,0.202,3,0.202,8,0.173,13,0.542,18,0.872,38,0.023,45,0.582,48,0.53,49,0.263,50,1.023,51,1.688,52,1.29,56,0.224,57,0.064,63,0.542,119,0.016,120,0.016,131,1.685,132,2.125,151,1.54,153,1.637,154,2.301,155,2.542,180,1.892,182,1.859,183,2.134,184,1.989,185,3.12,190,4.437,191,2.433,192,1.989,193,2.134,196,2.792,206,4.109,209,3.57,211,3.57,212,3.412,244,3.02,276,2.537,289,1.743,313,2.728,371,4.464,372,4.464,382,3.412,403,1.54,446,3.02,461,3.412,462,3.412,463,3.412,464,4.109,465,3.02,466,4.975,467,5.241,468,4.975,469,5.241,470,4.464,471,4.464,472,3.02,473,5.241,474,3.412,475,4.006,476,4.464,477,5.241,478,3.412,479,4.006,480,3.412,481,4.464,482,5.241,483,4.006,484,3.952,485,4.006,486,4.006,487,4.006,488,4.006,489,2.134,490,3.412,491,4.006,492,4.006,493,3.412,494,4.006,495,3.412,496,4.006,497,4.006,498,4.006,499,4.006,500,4.006,501,4.006,502,4.006,503,4.006,504,3.412,505,3.02,506,3.412]],["title/classes/EnvService.html",[57,0.055,429,2.173]],["body/classes/EnvService.html",[2,0.247,3,0.247,8,0.211,13,0.661,23,0.398,24,0.863,25,1.437,31,0.866,35,0.731,38,0.023,40,0.686,56,0.177,57,0.102,119,0.018,120,0.018,155,2.127,281,1.605,282,1.644,374,3.045,424,3.329,425,3.329,429,3.702,437,2.235,507,4.164,508,4.888,509,4.888,510,6.662,511,6.662,512,6.662,513,5.943,514,4.888,515,4.888,516,4.164,517,4.888,518,4.164,519,3.686]],["title/injectables/EventsService.html",[131,0.891,150,1.191]],["body/injectables/EventsService.html",[2,0.19,3,0.254,8,0.163,13,0.509,18,0.836,23,0.306,24,0.73,28,0.836,35,0.748,37,0.941,38,0.023,39,0.702,40,0.403,41,0.817,44,1.82,45,0.878,48,0.369,49,0.247,56,0.136,57,0.06,79,1.226,103,1.216,105,0.817,119,0.016,120,0.016,131,1.284,142,1.372,145,3.424,150,1.933,155,2.464,158,2.53,167,1.734,240,2.562,281,1.62,282,1.62,361,3.424,403,2.586,437,1.947,447,2.836,520,3.204,521,5.028,522,6.045,523,6.045,524,4.558,525,6.045,526,6.045,527,6.045,528,6.045,529,6.045,530,5.028,531,5.028,532,5.028,533,5.028,534,5.028,535,3.762,536,5.728,537,5.028,538,3.762,539,3.791,540,3.791,541,5.028,542,3.762,543,2.806,544,5.028,545,3.762,546,5.028,547,3.762,548,6.811,549,3.762,550,5.028,551,3.762,552,3.762,553,5.028,554,3.762,555,3.762,556,5.028,557,3.762,558,3.762,559,3.204,560,3.762,561,3.762,562,3.762,563,3.762,564,3.762]],["title/injectables/ExternalService.html",[150,1.191,464,2.173]],["body/injectables/ExternalService.html",[2,0.188,3,0.188,8,0.161,10,1.142,13,0.675,18,0.62,23,0.304,28,1.075,31,0.504,35,0.645,37,0.977,38,0.023,39,0.7,40,0.673,41,0.814,45,0.987,48,0.442,49,0.244,56,0.135,57,0.059,115,0.661,119,0.02,120,0.016,125,2.14,142,0.846,150,1.924,153,2.042,155,2.62,158,2.341,167,1.97,240,4.101,243,3.173,245,2.321,246,3.173,281,1.203,282,1.203,284,2.042,421,4.541,425,4.497,437,2.022,446,2.81,464,3.111,468,5.506,489,2.662,493,3.173,519,4.541,559,4.8,565,3.173,566,4.996,567,4.996,568,4.996,569,3.111,570,4.996,571,4.996,572,4.996,573,4.996,574,4.996,575,4.255,576,4.996,577,4.996,578,4.996,579,6.464,580,3.726,581,3.726,582,4.996,583,3.726,584,3.767,585,5.636,586,4.996,587,6.28,588,3.726,589,5.636,590,3.726,591,6.022,592,4.996,593,3.726,594,4.996,595,4.996,596,3.726,597,3.726,598,3.726,599,3.767,600,3.726,601,3.726,602,3.726,603,3.726,604,3.726,605,3.173,606,3.173,607,3.726,608,3.173,609,3.726,610,3.726,611,3.726,612,3.726,613,3.726,614,3.726,615,3.726,616,3.726,617,3.726,618,3.726,619,3.726,620,3.726,621,3.726,622,3.726,623,3.726,624,3.726]],["title/components/FilterModalComponent.html",[0,0.05,78,0.581]],["body/components/FilterModalComponent.html",[0,0.066,1,0.301,2,0.091,3,0.091,4,0.387,5,0.411,6,0.387,7,0.387,8,0.078,10,0.301,13,0.81,14,1.048,16,0.364,17,1.364,18,1.123,19,0.664,21,0.625,23,0.238,24,0.613,25,1.242,27,1.977,28,0.486,30,0.625,31,0.245,35,0.669,37,0.72,38,0.023,39,0.815,40,0.747,41,0.57,44,1.591,45,0.719,48,0.363,49,0.119,50,0.462,53,0.301,56,0.065,57,0.029,58,0.49,63,0.245,64,0.625,65,0.74,66,0.486,67,0.902,68,0.387,69,0.625,70,0.301,71,0.387,72,0.321,73,0.387,74,0.301,75,0.625,76,0.301,77,0.823,78,0.702,79,1.307,80,0.387,81,0.301,82,0.625,83,0.301,84,0.387,85,0.321,86,0.625,87,0.301,88,0.625,89,0.301,90,0.387,91,0.301,92,0.387,93,0.301,94,0.387,95,0.301,96,0.387,97,0.387,98,0.301,99,0.387,100,0.301,101,0.387,102,0.301,103,0.364,104,0.301,105,0.913,106,0.387,107,0.301,108,0.387,109,0.301,110,0.301,111,0.387,112,0.301,113,0.387,114,0.301,115,0.321,116,0.282,117,0.364,118,0.387,119,0.009,120,0.009,123,0.998,124,1.413,129,2.023,131,1.264,132,1.594,142,0.958,145,1.991,156,0.899,157,0.618,167,0.519,174,1.502,185,1.357,226,1.365,233,0.583,242,2.504,265,1.557,272,2.298,276,1.903,281,1.115,282,1.416,284,2.023,288,0.841,289,0.788,401,2.204,403,1.124,437,1.746,440,2.637,449,0.788,489,1.557,543,1.357,569,3.083,584,2.204,625,4.305,626,3.936,627,1.542,628,4.334,629,3.181,630,3.676,631,2.923,632,4.219,633,5.989,634,4.516,635,5.101,636,4.219,637,4.219,638,2.923,639,2.923,640,3.372,641,1.811,642,1.811,643,3.593,644,1.991,645,1.811,646,2.923,647,5.005,648,4.219,649,2.923,650,2.923,651,2.873,652,2.923,653,1.811,654,4.95,655,4.219,656,2.923,657,2.923,658,1.811,659,3.565,660,3.593,661,2.923,662,2.923,663,4.079,664,4.087,665,2.923,666,1.821,667,2.923,668,2.923,669,4.219,670,2.923,671,2.923,672,3.181,673,2.923,674,1.811,675,3.676,676,2.923,677,1.811,678,2.49,679,2.49,680,2.49,681,1.821,682,1.811,683,1.811,684,2.586,685,1.811,686,2.923,687,2.873,688,4.617,689,3.593,690,1.811,691,1.542,692,1.811,693,2.289,694,1.811,695,1.811,696,1.365,697,4.629,698,1.811,699,1.811,700,3.676,701,1.542,702,1.811,703,1.811,704,1.811,705,3.676,706,1.811,707,1.811,708,1.811,709,3.676,710,1.811,711,1.811,712,2.923,713,1.811,714,1.811,715,1.04,716,2.504,717,3.676,718,2.204,719,2.111,720,2.49,721,2.49,722,1.991,723,1.811,724,1.811,725,1.811,726,1.811,727,1.811,728,1.811,729,1.811,730,1.811,731,1.811,732,1.811,733,1.811,734,1.811,735,1.821,736,2.923,737,1.811,738,3.593,739,4.219,740,2.923,741,2.923,742,1.679,743,2.923,744,2.923,745,2.923]],["title/components/FilterOptionsComponent.html",[0,0.05,81,0.581]],["body/components/FilterOptionsComponent.html",[0,0.088,1,0.521,2,0.158,3,0.158,4,0.67,5,0.711,6,0.67,7,0.67,8,0.135,10,0.521,13,0.424,14,0.63,16,0.63,17,1.449,18,1.195,19,1.007,21,0.948,23,0.361,24,0.644,25,1.385,26,2.413,28,0.737,29,2.554,30,0.948,31,0.424,34,2.356,35,0.711,37,0.487,38,0.023,39,0.65,40,0.675,41,0.829,44,1.659,45,0.812,48,0.433,49,0.205,50,0.8,53,0.521,56,0.113,57,0.05,58,0.848,59,1.929,60,2.201,63,0.424,64,0.948,65,0.892,66,0.737,67,1.196,68,0.67,69,0.948,70,0.521,71,0.67,72,0.556,73,0.67,74,0.521,75,0.948,76,0.521,77,0.521,78,0.856,79,1.323,80,0.67,81,0.931,82,0.948,83,0.521,84,0.67,85,0.556,86,0.948,87,0.521,88,0.948,89,0.521,90,0.67,91,0.521,92,0.67,93,0.521,94,0.67,95,0.521,96,0.67,97,0.67,98,0.521,99,0.67,100,0.521,101,0.67,102,0.521,103,0.63,104,0.521,105,0.756,106,0.67,107,0.521,108,0.67,109,0.521,110,0.521,111,0.67,112,0.521,113,0.67,114,0.521,115,0.556,116,0.487,117,0.63,118,0.67,119,0.014,120,0.014,131,1.565,142,1.007,157,1.07,233,1.657,254,2.134,272,2.845,276,2.356,281,0.755,282,0.755,288,1.454,289,1.363,437,1.428,449,1.363,575,5.482,625,4.572,626,1.951,628,3.879,629,4.621,634,5.11,640,4.616,644,2.134,735,1.951,746,4.572,747,2.134,748,2.058,749,3.879,750,3.343,751,3.213,752,4.174,753,3.776,754,2.668,755,3.133,756,3.133,757,2.761,758,2.668,759,2.668,760,3.133,761,2.668,762,2.668,763,2.362,764,3.776,765,2.668,766,2.134,767,3.133,768,3.776,769,2.668,770,2.668,771,2.668,772,2.668,773,2.668,774,2.668]],["title/injectables/FilterService.html",[150,1.191,775,2.377]],["body/injectables/FilterService.html",[2,0.193,3,0.193,8,0.165,23,0.312,24,0.738,25,1.431,28,0.846,31,0.517,35,0.712,37,0.986,38,0.023,39,0.736,40,0.545,41,0.857,45,1.002,48,0.373,49,0.251,56,0.138,57,0.061,58,1.763,79,1.151,105,0.517,119,0.016,120,0.016,125,2.197,134,4.527,135,4.145,140,5.396,142,1.479,150,2.078,152,2.606,153,1.563,154,2.197,155,1.665,158,1.385,174,2.078,233,1.232,235,2.941,245,2.383,281,1.225,282,1.225,390,3.258,403,1.471,405,2.606,407,3.258,411,4.864,413,5.183,440,3.47,543,1.776,651,3.463,684,1.899,701,5.183,722,2.606,775,3.463,776,2.885,777,6.086,778,5.085,779,6.086,780,5.085,781,5.085,782,5.085,783,5.085,784,5.085,785,3.826,786,6.086,787,3.826,788,5.085,789,6.086,790,3.826,791,5.085,792,3.826,793,5.085,794,3.826,795,3.258,796,6.335,797,3.826,798,3.826,799,5.085,800,3.826,801,3.826,802,3.826,803,3.826,804,3.826,805,5.085]],["title/components/FiltersMenuComponent.html",[0,0.05,83,0.581]],["body/components/FiltersMenuComponent.html",[0,0.082,1,0.293,2,0.089,3,0.089,4,0.377,5,0.401,6,0.377,7,0.377,8,0.076,10,0.293,13,0.661,14,0.727,15,0.876,16,0.355,17,1.359,18,1.123,19,0.65,21,0.612,23,0.233,24,0.524,25,1.25,26,1.867,27,1.635,28,0.476,29,2.754,30,0.612,31,0.387,33,1.881,34,1.881,35,0.657,37,0.711,38,0.023,39,0.644,40,0.575,41,0.771,44,1.761,45,0.828,48,0.503,49,0.116,50,0.451,51,0.568,52,0.568,53,0.293,56,0.064,57,0.028,58,1.236,59,2.128,60,2.428,61,1.783,62,1.783,63,0.239,64,0.612,65,0.576,66,0.476,67,1.046,68,0.377,69,0.612,70,0.293,71,0.377,72,0.313,73,0.377,74,0.293,75,0.612,76,0.293,77,0.857,78,0.601,79,1.341,80,0.377,81,0.601,82,0.612,83,0.691,84,0.377,85,0.313,86,0.612,87,0.293,88,0.612,89,0.293,90,0.377,91,0.293,92,0.377,93,0.293,94,0.377,95,0.293,96,0.377,97,0.377,98,0.293,99,0.377,100,0.293,101,0.377,102,0.293,103,0.355,104,0.293,105,0.788,106,0.377,107,0.293,108,0.377,109,0.293,110,0.293,111,0.377,112,0.293,113,0.377,114,0.601,115,0.641,116,0.274,117,0.355,118,0.377,119,0.009,120,0.009,123,0.977,124,1.388,129,1.698,131,1.249,132,1.575,142,0.82,144,1.644,156,0.876,157,0.602,158,0.639,167,1.31,172,1.421,174,1.476,216,1.33,233,1.163,254,1.202,261,2.917,264,2.606,265,3.382,272,1.676,276,1.598,281,1.001,282,0.689,284,1.17,288,0.819,289,0.768,305,1.783,306,1.33,307,2.606,308,2.459,309,3.209,310,1.099,311,1.099,312,1.202,313,1.949,314,2.434,315,1.949,316,2.386,317,2.845,318,2.845,319,2.83,320,1.099,321,1.013,322,1.783,323,1.783,324,4.183,325,1.949,326,1.949,327,1.33,328,3.001,329,1.202,330,1.33,331,2.558,332,1.33,333,1.33,334,2.158,335,2.434,336,2.214,337,2.459,338,1.783,339,1.924,340,2.063,341,3.084,342,1.33,343,2.623,344,1.644,345,1.525,346,1.099,347,2.86,348,3.444,349,1.099,350,1.202,351,1.202,352,1.949,353,1.949,354,1.949,355,1.202,356,1.525,357,1.949,358,1.202,359,1.202,360,1.202,361,1.202,362,2.723,363,1.33,403,1.1,437,0.922,489,0.94,536,2.438,539,2.158,543,2.491,569,1.783,584,1.33,625,4.232,626,1.099,628,2.723,635,1.503,640,4.049,644,3.111,663,1.202,666,3.047,679,1.503,680,3.076,681,2.588,693,2.588,696,2.158,718,1.33,719,1.013,720,1.503,721,1.503,722,2.459,735,1.099,738,2.438,746,1.202,748,1.929,751,2.386,757,3.343,763,1.33,769,1.503,770,1.503,771,1.503,772,1.503,773,1.503,774,1.503,806,4.685,807,1.503,808,2.862,809,3.611,810,2.862,811,4.568,812,2.862,813,2.862,814,4.155,815,2.862,816,2.862,817,2.862,818,2.862,819,1.764,820,3.133,821,2.862,822,1.764,823,2.862,824,1.764,825,2.862,826,2.438,827,1.764,828,2.862,829,1.764,830,2.862,831,1.764,832,2.862,833,1.764,834,1.764,835,1.764,836,1.764,837,1.764,838,1.764,839,1.764,840,1.202,841,1.949,842,2.862,843,1.764,844,3.611,845,1.764,846,3.611,847,1.764,848,1.764,849,2.862,850,1.764,851,1.764,852,1.764,853,1.764,854,1.764,855,2.158,856,1.764,857,1.764,858,1.764,859,1.764,860,1.764,861,2.862,862,2.862,863,2.862,864,2.158,865,1.783,866,1.503,867,2.845,868,1.503,869,1.503,870,2.438,871,2.249,872,2.723,873,2.438,874,2.438,875,2.438,876,1.503,877,1.33,878,1.33,879,2.438,880,1.503,881,1.503,882,1.33,883,1.503,884,1.33,885,1.503,886,4.855,887,3.539,888,1.503,889,1.503,890,1.503,891,1.924,892,2.438,893,3.539,894,1.783,895,1.503,896,1.503,897,1.503,898,1.503,899,1.503]],["title/modules/FormModule.html",[180,1.001,900,2.173]],["body/modules/FormModule.html",[2,0.226,3,0.226,8,0.193,13,0.605,38,0.023,48,0.526,49,0.293,56,0.245,57,0.071,63,0.605,72,1.282,85,1.282,119,0.017,120,0.017,153,2.515,180,1.613,182,2.076,183,3.278,184,2.22,185,2.611,191,2.611,192,2.22,193,2.383,196,2.997,369,3.619,373,5.499,374,2.785,375,3.809,376,3.372,900,4.497,901,3.809,902,3.809,903,3.809,904,3.809,905,5.939,906,4.472,907,4.791,908,5.625,909,4.472,910,4.241,911,4.241,912,4.472,913,4.472,914,4.472]],["title/components/GridComponent.html",[0,0.05,87,0.581]],["body/components/GridComponent.html",[0,0.09,1,0.563,2,0.171,3,0.171,4,0.723,5,0.768,6,0.723,7,0.723,8,0.146,10,0.563,13,0.632,14,0.681,16,0.681,17,1.458,18,1.203,19,1.062,21,1,23,0.381,24,0.679,25,1.32,26,2.566,27,1.882,28,0.778,29,2.661,30,1.343,31,0.457,33,2.414,34,2.414,35,0.65,37,0.728,38,0.023,39,0.705,40,0.619,41,0.725,42,3.983,44,1.843,45,0.679,48,0.472,49,0.222,50,0.864,51,1.089,52,1.089,53,0.892,54,2.106,55,2.55,56,0.122,57,0.054,58,0.915,59,2.333,60,2.322,61,2.106,62,2.106,63,0.457,64,1,65,0.941,66,0.778,67,1.237,68,0.723,69,1,70,0.563,71,0.723,72,0.6,73,0.723,74,0.563,75,1,76,0.563,77,0.563,78,0.563,79,1.014,80,0.723,81,0.563,82,1,83,0.563,84,0.723,85,0.6,86,1,87,0.962,88,1,89,0.563,90,0.723,91,0.563,92,0.723,93,0.563,94,0.723,95,0.563,96,0.723,97,0.723,98,0.563,99,0.723,100,0.563,101,0.723,102,0.563,103,0.681,104,0.563,105,0.887,106,0.723,107,0.563,108,0.723,109,0.563,110,0.563,111,0.723,112,0.563,113,0.723,114,0.563,115,0.6,116,0.526,117,0.681,118,0.723,119,0.015,120,0.015,131,1.604,157,1.155,167,0.97,261,1.57,265,2.492,307,3.346,311,2.106,314,1.802,331,1.679,340,1.679,341,1.679,343,1.942,344,1.942,449,1.471,748,2.171,757,2.913,820,3.526,867,3.602,884,3.526,891,1.802,915,2.88,916,3.526,917,4.566,918,3.983,919,2.106,920,3.382,921,3.382,922,3.983,923,3.382,924,3.382,925,3.382,926,2.88,927,3.382,928,3.382,929,3.382,930,3.526,931,3.382,932,2.106,933,2.88,934,2.88,935,2.88]],["title/components/GridsterComponent.html",[0,0.05,89,0.581]],["body/components/GridsterComponent.html",[0,0.074,1,0.377,2,0.114,3,0.114,4,0.484,5,0.514,6,0.484,7,0.484,8,0.098,10,0.377,13,0.306,14,0.456,16,0.456,17,1.403,18,1.156,19,0.792,21,0.746,23,0.284,24,0.506,25,1.257,26,2.226,27,1.562,28,0.58,30,0.746,31,0.306,33,2.094,34,2.094,35,0.687,37,0.802,38,0.023,39,0.681,40,0.608,41,0.83,44,1.474,45,0.791,48,0.471,49,0.148,50,0.578,51,0.729,52,0.729,53,0.377,56,0.082,57,0.036,63,0.306,64,0.746,65,0.701,66,0.58,67,1.285,68,0.484,69,0.746,70,0.377,71,0.484,72,0.402,73,0.484,74,0.377,75,0.746,76,0.377,77,0.377,78,0.377,79,0.975,80,0.484,81,0.377,82,0.746,83,0.377,84,0.484,85,0.402,86,0.746,87,0.377,88,0.746,89,0.794,90,0.484,91,0.377,92,0.484,93,0.377,94,0.484,95,0.377,96,0.484,97,0.484,98,0.377,99,0.484,100,0.377,101,0.484,102,0.377,103,0.456,104,0.377,105,0.736,106,0.484,107,0.377,108,0.484,109,0.377,110,0.377,111,0.484,112,0.377,113,0.484,114,0.377,115,0.402,116,0.352,117,0.456,118,0.484,119,0.011,120,0.011,123,1.19,124,1.983,129,1.952,131,1.391,133,2.817,139,2.969,141,2.629,142,1.237,151,0.87,153,0.925,157,0.773,158,1.262,174,2.81,210,1.973,233,1.936,235,3.131,261,1.973,281,0.545,282,0.545,284,1.425,309,2.648,310,1.41,314,1.857,316,1.3,317,2.974,318,2.171,322,1.41,323,1.41,328,2.817,331,1.124,335,2.748,336,1.206,339,2.544,340,2.371,341,1.124,343,1.3,344,1.3,345,1.857,346,1.41,347,1.206,349,1.41,356,1.206,449,0.985,524,2.629,543,2.394,608,1.928,681,3.392,684,1.124,687,3.512,757,2.171,775,3.71,867,3.392,871,1.41,877,3.601,878,3.601,891,1.857,919,1.41,932,1.41,933,3.621,934,1.928,935,1.928,936,1.928,937,5.675,938,4.251,939,3.486,940,5.447,941,4.067,942,4.776,943,3.486,944,4.251,945,3.486,946,3.601,947,2.264,948,2.264,949,3.486,950,2.264,951,3.486,952,5.447,953,2.264,954,2.264,955,3.486,956,2.264,957,2.264,958,3.486,959,2.264,960,2.264,961,2.264,962,4.776,963,2.264,964,5.675,965,4.776,966,6.137,967,3.621,968,2.264,969,2.264,970,2.264,971,2.969,972,3.486,973,3.486,974,3.486,975,1.707,976,2.264,977,2.264,978,2.264,979,2.264,980,3.486,981,2.264,982,2.264,983,3.486,984,2.264,985,3.486,986,2.264,987,2.264,988,2.264,989,2.264,990,2.264,991,2.264,992,1.928,993,1.928,994,2.264,995,2.264,996,3.621,997,2.264,998,2.264,999,2.264,1000,2.264,1001,2.264,1002,2.264,1003,2.264,1004,2.264,1005,2.264,1006,2.264,1007,2.264,1008,2.264,1009,2.264,1010,2.264,1011,2.264,1012,2.264,1013,2.264,1014,2.264,1015,2.264,1016,2.264,1017,2.264,1018,2.264,1019,2.264,1020,2.264,1021,2.264,1022,2.264,1023,3.486,1024,2.264,1025,2.264,1026,2.264,1027,3.486,1028,2.264,1029,2.264,1030,2.264,1031,2.264,1032,2.264,1033,2.264,1034,2.264,1035,2.264,1036,2.264,1037,2.264,1038,2.264,1039,2.264,1040,2.264,1041,2.264,1042,2.264,1043,2.264,1044,2.264,1045,2.264,1046,4.067,1047,3.486,1048,2.264,1049,2.264,1050,2.264,1051,3.486,1052,2.264,1053,2.264,1054,3.486,1055,3.486,1056,2.264,1057,2.264,1058,2.264,1059,2.264,1060,4.067,1061,3.486,1062,2.264,1063,2.264,1064,4.251,1065,2.264,1066,1.928,1067,1.928,1068,1.928,1069,2.264,1070,3.486,1071,2.264,1072,2.264,1073,2.264,1074,2.264,1075,1.542,1076,2.264,1077,2.264,1078,2.264,1079,2.264,1080,2.264,1081,2.264]],["title/components/HeaderComponent.html",[0,0.05,91,0.581]],["body/components/HeaderComponent.html",[0,0.092,1,0.675,2,0.205,3,0.205,4,0.868,5,0.921,6,0.868,7,0.868,8,0.175,10,0.675,14,0.816,16,0.816,17,1.477,18,1.22,19,1.2,21,1.13,23,0.431,24,0.767,25,1.063,27,1.934,30,1.13,31,0.549,32,2.763,33,2.546,35,0.629,37,0.631,38,0.023,39,0.723,40,0.566,41,0.715,48,0.388,49,0.266,51,1.307,52,1.307,53,0.675,56,0.147,57,0.064,63,0.549,64,1.13,65,1.063,66,0.879,67,1.332,68,0.868,69,1.13,70,0.675,71,0.868,72,0.72,73,0.868,74,0.675,75,1.13,76,0.675,77,0.675,78,0.675,79,1.112,80,0.868,81,0.675,82,1.13,83,0.675,84,0.868,85,0.72,86,1.13,87,0.675,88,1.13,89,0.675,90,0.868,91,1.036,92,0.868,93,0.675,94,0.868,95,0.675,96,0.868,97,0.868,98,0.675,99,0.868,100,0.675,101,0.868,102,0.675,103,0.816,104,0.675,105,0.842,106,0.868,107,0.675,108,0.868,109,0.675,110,0.675,111,0.868,112,0.675,113,0.868,114,0.675,115,0.72,116,0.631,117,0.816,118,0.868,119,0.016,120,0.016,172,2.624,321,3.576,449,1.765,1082,3.456,1083,5.878,1084,5.285,1085,4.869,1086,5.285,1087,4.057]],["title/components/LanguageComponent.html",[0,0.05,93,0.581]],["body/components/LanguageComponent.html",[0,0.087,1,0.574,2,0.174,3,0.174,4,0.737,5,0.783,6,0.737,7,0.737,8,0.149,10,0.574,13,0.641,14,0.694,16,0.694,17,1.46,18,1.205,19,1.076,21,1.014,23,0.386,24,0.688,25,1.23,27,1.754,28,0.788,30,1.014,31,0.466,32,2.349,33,2.429,34,2.429,35,0.655,37,0.738,38,0.023,39,0.71,40,0.625,41,0.732,45,0.501,48,0.428,49,0.226,50,0.881,51,1.111,52,1.111,53,0.574,56,0.125,57,0.055,59,2.945,63,0.466,64,1.014,65,0.954,66,0.788,67,1.247,68,0.737,69,1.014,70,0.574,71,0.737,72,0.612,73,0.737,74,0.574,75,1.014,76,0.574,77,0.574,78,0.574,79,1.024,80,0.737,81,0.574,82,1.014,83,0.574,84,0.737,85,0.612,86,1.014,87,0.574,88,1.014,89,0.574,90,0.737,91,0.574,92,0.737,93,0.97,94,0.737,95,0.574,96,1.501,97,0.737,98,0.574,99,0.737,100,0.574,101,0.737,102,0.574,103,0.694,104,0.574,105,0.789,106,0.737,107,0.574,108,0.737,109,0.574,110,0.574,111,0.737,112,0.574,113,0.737,114,0.574,115,0.612,116,0.537,117,0.694,118,0.737,119,0.015,120,0.015,134,3.689,135,3.972,142,0.783,150,1.177,152,2.349,153,1.409,154,1.981,155,1.5,158,1.249,159,2.937,162,4.037,167,0.989,281,0.831,282,0.831,393,4.037,401,3.574,440,2.525,449,1.5,451,3.574,659,3.107,742,2.722,748,2.2,752,3.228,1088,2.937,1089,5.416,1090,4.74,1091,4.74,1092,3.449,1093,4.74,1094,3.449,1095,4.74,1096,6.471,1097,4.74,1098,4.74,1099,4.74,1100,3.449,1101,4.74,1102,3.449,1103,3.449,1104,3.449,1105,4.74]],["title/components/LanguageSwitchComponent.html",[0,0.05,95,0.581]],["body/components/LanguageSwitchComponent.html",[0,0.092,1,0.6,2,0.182,3,0.182,4,0.771,5,0.819,6,0.771,7,0.771,8,0.156,10,0.6,13,0.661,14,0.726,15,2.426,16,0.726,17,1.465,18,1.209,19,1.11,21,1.045,23,0.398,24,0.71,25,1.288,26,2.617,27,1.781,28,0.813,29,2.752,30,1.045,31,0.661,32,2.456,33,2.462,34,2.462,35,0.636,37,0.76,38,0.023,39,0.721,40,0.594,41,0.75,44,1.733,45,0.71,48,0.436,49,0.236,50,0.921,51,1.161,52,1.161,53,0.6,56,0.13,57,0.057,58,0.976,59,2.412,60,2.426,61,2.246,62,2.246,63,0.488,64,1.045,65,0.983,66,0.813,67,1.271,68,0.771,69,1.045,70,0.6,71,0.771,72,0.64,73,0.771,74,0.6,75,1.045,76,0.6,77,0.6,78,0.6,79,1.048,80,0.771,81,0.6,82,1.045,83,0.6,84,0.771,85,0.64,86,1.045,87,0.6,88,1.045,89,0.6,90,0.771,91,0.6,92,0.771,93,0.922,94,0.771,95,0.988,96,1.484,97,0.771,98,0.6,99,0.771,100,0.6,101,0.771,102,0.6,103,0.726,104,0.6,105,0.803,106,0.771,107,0.6,108,0.771,109,0.6,110,0.6,111,0.771,112,0.6,113,0.771,114,0.6,115,0.64,116,0.561,117,0.726,118,0.771,119,0.015,120,0.015,167,1.034,715,2.807,748,2.268,757,3.044,820,3.685,1106,5.289,1107,4.683,1108,3.072,1109,5.543,1110,4.887,1111,3.607,1112,4.887,1113,3.607,1114,4.887,1115,3.607,1116,3.607,1117,3.607,1118,4.887]],["title/components/NotificationsButtonComponent.html",[0,0.05,98,0.581]],["body/components/NotificationsButtonComponent.html",[0,0.094,1,0.703,2,0.213,3,0.213,4,0.904,5,0.959,6,0.904,7,0.904,8,0.183,10,0.703,12,3.187,14,0.85,15,2.694,16,0.85,17,1.481,18,1.223,19,1.232,20,5.105,21,1.16,22,4.621,23,0.344,30,1.16,31,0.81,35,0.453,38,0.022,39,0.696,41,0.571,48,0.31,49,0.277,53,0.703,56,0.153,57,0.067,63,0.571,64,1.16,65,1.092,66,0.903,67,1.352,68,0.904,69,1.16,70,0.703,71,0.904,72,0.75,73,0.904,74,0.703,75,1.16,76,0.703,77,0.703,78,0.703,79,1.134,80,0.904,81,0.703,82,1.16,83,0.703,84,0.904,85,0.75,86,1.16,87,0.703,88,1.16,89,0.703,90,0.904,91,0.703,92,0.904,93,0.703,94,0.904,95,0.703,96,0.904,97,0.904,98,1.052,99,1.474,100,0.703,101,0.904,102,0.703,103,0.85,104,0.703,105,0.855,106,0.904,107,0.703,108,0.904,109,0.703,110,0.703,111,0.904,112,0.703,113,0.904,114,0.703,115,0.75,116,0.658,117,0.85,118,0.904,119,0.017,120,0.017,1119,4.621,1120,4.091,1121,4.226,1122,5.426]],["title/directives/OnCreateDirective.html",[66,0.581,116,0.543]],["body/directives/OnCreateDirective.html",[2,0.249,3,0.249,8,0.213,13,0.667,16,0.993,17,1.203,23,0.402,28,0.994,31,0.869,35,0.689,38,0.023,40,0.528,44,1.853,45,0.717,48,0.362,49,0.323,56,0.178,57,0.078,65,1.203,66,1.07,116,1.065,117,1.203,119,0.019,120,0.019,123,2.041,124,2.632,129,2.731,142,1.12,398,5.692,402,5.692,403,1.897,1123,5.692,1124,4.203,1125,5.977,1126,6.683,1127,5.977,1128,4.934,1129,4.934]],["title/classes/ProcessDefinition.html",[57,0.055,1130,2.377]],["body/classes/ProcessDefinition.html",[2,0.268,3,0.268,8,0.229,23,0.432,24,0.907,35,0.71,38,0.022,39,0.795,40,0.71,56,0.192,57,0.099,119,0.019,120,0.019,437,2.33,659,3.648,751,3.932,1130,4.252,1131,4.521,1132,5.309,1133,5.309,1134,5.309]],["title/components/ProcessFormComponent.html",[0,0.05,100,0.581]],["body/components/ProcessFormComponent.html",[0,0.084,1,0.512,2,0.155,3,0.155,4,0.659,5,0.7,6,0.659,7,0.659,8,0.133,10,0.512,13,0.592,14,0.62,16,0.62,17,1.447,18,1.194,19,0.995,21,0.937,23,0.357,24,0.636,25,1.36,28,0.729,30,1.477,31,0.592,35,0.686,37,0.682,38,0.023,39,0.728,40,0.686,41,0.689,44,1.65,45,0.636,48,0.408,49,0.202,53,0.512,56,0.111,57,0.049,63,0.417,64,0.937,65,0.882,66,0.729,67,1.187,68,0.659,69,0.937,70,0.512,71,0.659,72,0.547,73,0.659,74,0.512,75,0.937,76,0.512,77,0.512,78,0.512,79,0.964,80,0.659,81,0.512,82,0.937,83,0.512,84,0.659,85,0.547,86,0.937,87,0.512,88,0.937,89,0.512,90,0.659,91,0.512,92,0.659,93,0.512,94,0.659,95,0.512,96,0.659,97,0.659,98,0.512,99,0.659,100,0.924,101,0.659,102,0.512,103,0.62,104,0.512,105,0.751,106,0.659,107,0.512,108,0.659,109,0.512,110,0.512,111,0.659,112,0.512,113,0.659,114,0.512,115,0.547,116,0.479,117,0.62,118,0.659,119,0.014,120,0.014,123,1.496,124,1.96,129,2.491,131,1.557,133,3.354,142,0.995,144,2.516,151,1.185,157,1.052,167,0.884,210,2.723,259,4.602,272,2.829,274,3.303,276,2.344,281,0.742,282,1.228,284,2.269,288,1.43,289,1.34,403,2.135,437,1.411,651,2.984,659,2.334,735,1.919,742,3.189,946,4.596,1135,4.917,1136,4.917,1137,2.624,1138,5.552,1139,5.191,1140,5.098,1141,4.381,1142,4.729,1143,3.731,1144,3.081,1145,4.381,1146,3.081,1147,3.731,1148,3.731,1149,3.731,1150,3.081,1151,3.731,1152,2.728,1153,3.731,1154,4.381,1155,4.729,1156,3.081,1157,3.081,1158,3.081,1159,3.081,1160,3.081,1161,3.081,1162,3.081,1163,4.381,1164,3.081,1165,3.081,1166,2.624,1167,3.081,1168,2.624,1169,2.624,1170,3.081,1171,3.081,1172,3.081]],["title/components/ProcessListComponent.html",[0,0.05,53,0.581]],["body/components/ProcessListComponent.html",[0,0.085,1,0.537,2,0.163,3,0.163,4,0.69,5,0.732,6,0.69,7,0.69,8,0.139,10,0.537,13,0.436,14,0.649,16,0.649,17,1.452,18,1.198,19,1.028,21,0.968,23,0.369,24,0.657,25,1.358,26,2.529,27,1.298,28,0.753,30,1.487,31,0.436,34,2.379,35,0.694,37,0.704,38,0.023,39,0.693,40,0.663,41,0.707,44,1.675,45,0.657,48,0.454,49,0.211,50,0.824,53,0.943,54,4.105,56,0.117,57,0.051,59,1.969,63,0.436,64,0.968,65,0.911,66,0.753,67,1.212,68,0.69,69,0.968,70,0.537,71,0.69,72,0.573,73,0.69,74,0.537,75,0.968,76,0.537,77,0.537,78,0.537,79,0.989,80,0.69,81,0.537,82,0.968,83,0.537,84,0.69,85,0.573,86,0.968,87,0.537,88,0.968,89,0.537,90,0.69,91,0.537,92,0.69,93,0.537,94,0.69,95,0.537,96,0.69,97,0.69,98,0.537,99,0.69,100,0.537,101,0.69,102,0.537,103,0.649,104,0.537,105,0.766,106,0.69,107,0.537,108,0.69,109,0.537,110,0.537,111,0.69,112,0.537,113,0.69,114,0.537,115,0.573,116,0.502,117,0.649,118,0.69,119,0.014,120,0.014,123,1.545,124,2.01,129,2.529,131,1.58,133,3.382,142,1.028,151,1.24,157,1.101,167,0.925,233,1.039,272,2.77,275,2.748,276,2.379,281,0.777,282,0.777,288,1.497,289,1.404,328,2.247,358,2.197,403,1.74,425,3.082,449,1.404,543,1.497,748,2.101,766,2.197,894,3.529,922,4.827,1130,4.489,1135,4.969,1148,3.854,1173,2.748,1174,5.228,1175,4.526,1176,4.526,1177,4.526,1178,3.226,1179,4.526,1180,3.226,1181,4.526,1182,3.226,1183,3.226,1184,3.226,1185,3.226,1186,3.226,1187,3.226,1188,3.226,1189,3.226,1190,3.226,1191,3.226,1192,4.526,1193,3.226,1194,3.226,1195,2.197,1196,2.748]],["title/modules/SharedModule.html",[180,1.001,369,1.859]],["body/modules/SharedModule.html",[0,0.077,2,0.211,3,0.211,8,0.181,13,0.565,38,0.023,48,0.524,49,0.274,50,1.068,51,1.346,52,1.346,56,0.241,57,0.066,63,0.565,91,1.181,93,1.191,95,1.181,98,1.181,114,1.191,119,0.017,120,0.017,180,1.914,182,1.941,183,3.473,184,2.076,185,1.941,191,2.501,192,2.076,193,2.228,196,2.871,369,3.872,476,5.079,478,5.079,840,2.848,841,2.848,1107,3.153,1120,3.153,1197,3.561,1198,3.561,1199,3.561,1200,4.181,1201,6.299,1202,4.59,1203,4.181,1204,5.963,1205,3.561,1206,4.181,1207,4.181,1208,4.181,1209,4.181,1210,4.181,1211,3.561,1212,5.389,1213,3.561]],["title/components/SortOptionsComponent.html",[0,0.05,102,0.581]],["body/components/SortOptionsComponent.html",[0,0.083,1,0.5,2,0.152,3,0.152,4,0.643,5,0.683,6,0.643,7,0.643,8,0.13,10,0.5,13,0.68,14,0.605,16,0.605,17,1.444,18,1.191,19,0.978,21,0.921,23,0.351,24,0.625,25,1.169,26,2.375,27,1.443,28,0.716,30,0.921,31,0.407,34,2.325,35,0.667,37,0.67,38,0.023,39,0.815,40,0.745,41,0.924,45,0.625,48,0.369,49,0.197,50,0.768,53,0.5,56,0.109,57,0.048,58,0.814,59,1.874,63,0.407,64,0.921,65,0.866,66,1.151,67,1.174,68,0.643,69,0.921,70,0.5,71,0.643,72,0.534,73,0.643,74,0.5,75,0.921,76,0.5,77,0.5,78,0.5,79,0.951,80,0.643,81,0.5,82,0.921,83,0.5,84,0.643,85,0.534,86,0.921,87,0.5,88,0.921,89,0.5,90,0.643,91,0.5,92,0.643,93,0.5,94,0.643,95,0.5,96,0.643,97,0.643,98,0.5,99,0.643,100,0.5,101,0.643,102,0.913,103,1.451,104,0.5,105,0.743,106,0.643,107,0.5,108,0.643,109,0.5,110,0.5,111,0.643,112,0.5,113,0.643,114,0.5,115,0.534,116,0.468,117,0.605,118,0.643,119,0.013,120,0.013,124,1.156,131,1.718,141,3.793,142,0.978,157,1.027,167,0.863,174,1.76,254,2.048,281,1.037,282,1.037,312,2.933,356,3.221,440,2.294,449,1.308,569,2.682,599,2.268,659,2.294,663,2.933,664,4.141,672,3.247,684,3.339,718,3.247,742,2.473,747,2.048,748,1.999,749,3.793,750,3.247,752,4.118,754,2.561,759,2.561,762,2.561,766,2.048,768,2.561,1214,5.424,1215,4.337,1216,4.306,1217,4.306,1218,3.007,1219,4.306,1220,3.007,1221,3.667,1222,4.677,1223,3.007,1224,2.561,1225,3.007,1226,4.306]],["title/classes/Task.html",[57,0.055,105,0.472]],["body/classes/Task.html",[2,0.268,3,0.268,8,0.229,23,0.432,24,0.907,35,0.71,38,0.022,39,0.795,40,0.71,56,0.192,57,0.099,105,0.844,119,0.019,120,0.019,437,2.33,659,3.648,751,3.932,1227,4.521,1228,5.309,1229,5.309,1230,5.309]],["title/components/TaskDetailsComponent.html",[0,0.05,104,0.581]],["body/components/TaskDetailsComponent.html",[0,0.084,1,0.508,2,0.154,3,0.154,4,0.653,5,0.693,6,0.653,7,0.653,8,0.132,10,0.508,13,0.413,14,0.615,15,1.516,16,0.615,17,1.446,18,1.193,19,0.988,21,0.931,23,0.355,24,0.632,25,1.223,28,0.724,30,0.931,31,0.589,35,0.67,37,0.475,38,0.023,39,0.642,40,0.543,41,0.589,44,1.731,45,0.632,48,0.372,49,0.2,53,0.508,56,0.11,57,0.048,63,0.413,64,0.931,65,0.876,66,0.724,67,1.183,68,0.653,69,0.931,70,0.508,71,0.653,72,0.542,73,0.653,74,0.508,75,0.931,76,0.508,77,0.508,78,0.508,79,0.959,80,0.653,81,0.508,82,0.931,83,0.508,84,0.653,85,0.542,86,0.931,87,0.508,88,0.931,89,0.508,90,0.653,91,0.508,92,0.653,93,0.508,94,0.653,95,0.508,96,0.653,97,0.653,98,0.508,99,0.931,100,0.508,101,0.653,102,0.508,103,0.615,104,0.92,105,0.951,106,0.653,107,0.508,108,0.653,109,0.508,110,0.508,111,0.653,112,0.508,113,0.653,114,0.508,115,0.542,116,0.475,117,0.615,118,0.653,119,0.014,120,0.014,123,1.486,124,1.951,129,2.484,131,1.552,133,3.349,142,0.988,144,2.5,151,1.174,157,1.043,172,2.161,174,1.779,191,1.418,233,1.402,235,1.418,239,2.08,259,3.766,260,2.303,261,2.021,264,1.627,305,3.16,307,1.627,320,1.902,321,3.176,328,3.23,331,1.516,335,1.627,336,1.627,339,2.946,340,1.516,341,2.519,345,1.627,347,1.627,495,3.708,524,3.283,539,3.283,540,2.303,599,2.303,606,2.601,666,2.711,684,2.161,687,2.08,715,2.5,865,3.16,871,1.902,891,1.627,919,1.902,930,2.303,932,1.902,941,4.979,967,4.71,971,3.708,992,2.601,993,2.601,996,2.601,1075,2.08,1085,2.303,1139,3.708,1142,3.708,1195,3.766,1231,3.982,1232,4.821,1233,2.601,1234,5.073,1235,4.354,1236,5.53,1237,4.354,1238,3.054,1239,3.054,1240,4.354,1241,4.354,1242,3.054,1243,4.354,1244,3.054,1245,3.054,1246,2.601,1247,3.054,1248,3.054,1249,3.054,1250,5.53,1251,3.054,1252,3.054,1253,3.054,1254,2.601,1255,2.303,1256,2.601,1257,2.601,1258,2.601,1259,3.054,1260,3.054,1261,2.601,1262,2.601,1263,2.303,1264,2.601,1265,3.054]],["title/components/TaskEditComponent.html",[0,0.05,107,0.581]],["body/components/TaskEditComponent.html",[0,0.08,1,0.367,2,0.111,3,0.111,4,0.471,5,0.5,6,0.471,7,0.471,8,0.095,10,0.367,13,0.565,14,0.443,16,0.443,17,1.399,18,1.152,19,0.775,21,0.73,23,0.278,24,0.496,25,1.267,27,1.545,28,0.568,29,2.675,30,0.73,31,0.462,33,2.072,35,0.691,37,0.65,38,0.023,39,0.675,40,0.639,41,0.637,44,1.614,45,0.866,48,0.413,49,0.144,50,0.563,51,0.71,52,0.71,53,0.367,56,0.08,57,0.035,58,1.379,60,2.075,63,0.298,64,0.73,65,0.687,66,0.568,67,1.007,68,0.471,69,0.73,70,0.367,71,0.471,72,0.391,73,0.471,74,0.367,75,0.73,76,0.367,77,0.783,78,0.367,79,0.791,80,0.471,81,0.367,82,0.73,83,0.367,84,0.471,85,0.391,86,0.73,87,0.367,88,0.73,89,0.367,90,0.471,91,0.367,92,0.471,93,0.367,94,0.471,95,0.367,96,0.471,97,0.471,98,0.367,99,0.471,100,0.367,101,0.471,102,0.367,103,0.443,104,0.367,105,0.934,106,0.471,107,0.783,108,0.471,109,0.367,110,0.367,111,0.471,112,0.367,113,0.471,114,0.367,115,0.391,116,0.343,117,0.443,118,0.471,119,0.013,120,0.011,122,2.127,123,1.166,124,1.607,129,2.202,131,1.376,132,1.516,133,3.127,142,0.949,144,2.704,151,0.847,156,1.094,157,0.752,158,1.514,167,0.979,174,1.395,210,2.501,233,1.346,235,2.185,259,4.149,272,1.94,274,2.575,276,1.81,281,1.007,282,1.134,284,1.924,288,1.023,289,0.959,295,1.662,339,2.508,374,2.127,437,0.71,440,1.819,629,2.575,643,2.908,651,2.325,684,1.695,693,2.127,715,1.266,716,1.501,719,1.266,742,1.961,826,1.877,855,2.575,864,3.152,919,1.372,946,4.063,1143,2.908,1147,4.01,1149,2.908,1151,4.01,1152,3.356,1153,4.589,1155,4.01,1166,1.877,1168,1.877,1169,2.908,1231,4.06,1255,2.575,1266,4.915,1267,1.877,1268,4.18,1269,3.414,1270,3.55,1271,4.708,1272,4.01,1273,3.414,1274,3.55,1275,4.238,1276,3.414,1277,2.204,1278,2.204,1279,3.414,1280,4.708,1281,4.708,1282,3.414,1283,2.204,1284,4.708,1285,3.414,1286,4.01,1287,2.204,1288,2.204,1289,2.204,1290,3.414,1291,3.414,1292,2.204,1293,2.204,1294,3.414,1295,2.204,1296,2.204,1297,2.204,1298,2.204,1299,2.204,1300,2.204,1301,2.204,1302,3.56,1303,1.877,1304,3.414,1305,3.414,1306,3.414,1307,4.18,1308,3.414,1309,3.414,1310,2.204,1311,4.18,1312,2.204,1313,2.204,1314,3.414,1315,1.877,1316,1.662,1317,1.877,1318,1.877,1319,1.877,1320,2.204,1321,4.18,1322,2.204,1323,3.414,1324,3.414,1325,3.414,1326,3.414,1327,4.18,1328,3.414,1329,2.204,1330,2.204,1331,2.204,1332,2.204,1333,2.204,1334,3.414,1335,2.204,1336,2.204,1337,3.56,1338,2.204,1339,2.204,1340,2.204,1341,2.204,1342,2.204,1343,2.204,1344,2.204,1345,2.204,1346,2.204,1347,2.204,1348,2.204,1349,2.204,1350,2.204,1351,2.204,1352,2.204,1353,2.204,1354,2.204,1355,2.204,1356,2.204,1357,2.204,1358,2.204,1359,2.204,1360,2.204,1361,2.204,1362,2.204,1363,2.204,1364,2.204,1365,2.204,1366,2.204,1367,2.204,1368,2.204,1369,2.204,1370,2.204,1371,3.414,1372,3.414]],["title/components/TaskGridComponent.html",[0,0.05,109,0.581]],["body/components/TaskGridComponent.html",[0,0.077,1,0.296,2,0.09,3,0.09,4,0.38,5,0.404,6,0.38,7,0.38,8,0.077,10,0.296,13,0.24,14,0.358,15,0.883,16,0.358,17,1.361,18,1.12,19,0.654,21,0.616,23,0.235,24,0.418,25,1.119,26,2.006,27,0.826,28,0.479,29,2.761,30,0.616,31,0.389,34,1.888,35,0.707,37,0.865,38,0.023,39,0.692,40,0.612,41,0.806,44,1.764,45,0.946,48,0.36,49,0.117,50,0.454,53,0.296,56,0.064,57,0.028,58,1.399,59,1.58,60,2.072,61,1.107,62,1.107,63,0.24,64,0.616,65,0.58,66,0.479,67,0.893,68,0.38,69,0.616,70,0.296,71,0.38,72,0.316,73,0.38,74,0.296,75,0.616,76,0.296,77,0.694,78,0.296,79,1.203,80,0.38,81,0.296,82,0.616,83,0.296,84,0.38,85,0.316,86,0.616,87,0.296,88,0.616,89,0.296,90,0.38,91,0.296,92,0.38,93,0.296,94,0.38,95,0.296,96,0.38,97,0.38,98,0.296,99,0.38,100,0.296,101,0.38,102,0.604,103,1.15,104,0.296,105,0.932,106,0.38,107,0.296,108,0.38,109,0.694,110,0.296,111,0.38,112,0.296,113,0.38,114,0.296,115,0.316,116,0.277,117,0.358,118,0.38,119,0.009,120,0.009,123,0.983,124,1.396,129,2.006,131,1.066,132,1.344,142,1.174,144,2.82,145,2.843,156,0.883,157,0.607,158,1.315,167,1.544,172,1.43,174,1.874,191,0.825,192,1.43,233,0.928,235,2.279,238,2.453,239,2.473,260,1.341,261,0.825,264,0.947,272,1.685,276,1.605,281,1.245,282,1.297,284,1.177,288,0.825,289,0.774,305,2.261,307,0.947,311,1.107,316,1.654,320,1.107,328,2.902,331,2.277,335,0.947,336,0.947,338,1.794,340,1.43,341,1.802,345,0.947,347,0.947,356,1.535,403,1.605,424,1.962,437,0.928,440,3.044,519,2.172,540,2.172,543,1.685,640,4.058,644,3.788,664,2.738,666,1.107,684,2.672,687,1.211,693,1.107,696,2.172,715,1.021,716,1.962,719,1.654,722,1.211,742,1.654,748,1.337,751,1.654,841,1.211,855,1.341,865,1.107,867,1.794,871,1.107,872,3.147,891,0.947,894,1.794,917,3.092,918,2.453,919,1.107,930,1.341,932,1.107,1075,1.211,1085,1.341,1195,2.843,1215,1.211,1222,1.514,1224,3.906,1231,4.134,1246,1.514,1254,1.514,1255,4.059,1256,1.514,1257,1.514,1258,1.514,1261,1.514,1262,3.092,1263,1.341,1264,1.514,1270,3.147,1272,3.555,1274,3.147,1275,4.493,1286,4.181,1315,1.514,1316,1.341,1317,1.514,1318,1.514,1319,2.453,1337,2.453,1373,5.004,1374,1.514,1375,5.714,1376,4.174,1377,4.174,1378,2.88,1379,2.88,1380,2.88,1381,2.88,1382,5.383,1383,2.88,1384,2.88,1385,2.88,1386,2.88,1387,2.88,1388,1.778,1389,2.88,1390,1.778,1391,2.88,1392,1.778,1393,2.88,1394,4.174,1395,2.88,1396,2.88,1397,1.778,1398,3.631,1399,1.778,1400,2.88,1401,1.778,1402,2.453,1403,2.88,1404,2.88,1405,1.778,1406,2.88,1407,1.778,1408,2.88,1409,1.778,1410,4.174,1411,2.88,1412,1.778,1413,2.88,1414,1.778,1415,2.88,1416,2.88,1417,1.778,1418,1.778,1419,1.514,1420,2.88,1421,2.88,1422,2.88,1423,2.88,1424,1.778,1425,1.778,1426,1.778,1427,2.172,1428,1.778,1429,1.778,1430,1.778,1431,1.778,1432,2.88,1433,1.514,1434,1.778,1435,1.778,1436,1.778,1437,1.778,1438,1.778,1439,1.778,1440,1.778,1441,1.778,1442,1.778,1443,1.778,1444,1.778,1445,1.778,1446,1.778,1447,3.631,1448,4.586,1449,3.631,1450,1.778,1451,3.631,1452,1.778,1453,2.88,1454,1.778,1455,1.778,1456,1.778,1457,1.778,1458,1.778,1459,2.88,1460,1.778,1461,2.88,1462,1.778,1463,5.169,1464,1.778,1465,2.88,1466,4.174,1467,2.88,1468,2.88,1469,1.778,1470,1.778,1471,2.453,1472,1.778,1473,1.778,1474,2.88,1475,1.778,1476,1.778,1477,1.778,1478,1.778,1479,1.778,1480,1.778,1481,1.778,1482,1.514,1483,1.778,1484,1.778,1485,1.778,1486,1.778,1487,1.778,1488,1.778]],["title/components/TaskItemComponent.html",[0,0.05,110,0.581]],["body/components/TaskItemComponent.html",[0,0.082,1,0.382,2,0.116,3,0.116,4,0.491,5,0.8,6,0.491,7,0.491,8,0.099,10,0.382,13,0.31,14,0.863,16,0.462,17,1.405,18,1.168,19,0.8,21,0.753,23,0.287,24,0.512,25,0.863,27,1.688,28,0.586,29,2.129,30,0.753,31,0.476,35,0.66,37,0.748,38,0.023,39,0.662,40,0.459,41,0.771,44,1.161,45,0.795,48,0.419,49,0.15,50,0.586,53,0.382,56,0.083,57,0.068,58,0.621,60,1.749,63,0.31,64,0.753,65,0.709,66,0.586,67,1.029,68,0.491,69,0.753,70,0.382,71,0.491,72,0.407,73,0.491,74,0.382,75,0.753,76,0.382,77,0.949,78,0.382,79,0.811,80,0.491,81,0.382,82,0.753,83,0.382,84,0.491,85,0.407,86,0.753,87,0.382,88,0.753,89,0.382,90,0.491,91,0.382,92,0.491,93,0.382,94,0.491,95,0.382,96,0.491,97,0.491,98,0.382,99,0.491,100,0.382,101,0.491,102,0.382,103,0.462,104,0.382,105,0.919,106,0.491,107,0.382,108,0.491,109,0.382,110,0.8,111,0.491,112,0.382,113,0.491,114,0.382,115,0.921,116,0.357,117,0.462,118,0.491,119,0.011,120,0.011,131,1.228,132,1.764,133,1.139,142,0.8,156,1.139,157,0.784,158,1.553,167,0.658,233,0.739,261,1.635,264,1.223,265,3.282,272,1.99,276,1.849,281,0.553,282,1.51,284,1.44,288,1.065,289,0.999,295,1.731,307,3.215,308,3.276,309,3.232,310,1.429,314,2.285,315,1.563,316,2.463,317,2.671,318,2.194,319,2.4,321,3.38,322,1.429,323,1.429,325,2.4,326,1.563,328,2.831,329,1.563,331,1.139,335,2.918,336,2.285,337,1.563,338,2.671,339,2.285,340,3.157,341,3.111,343,2.763,344,2.023,345,2.563,346,2.194,347,3.282,349,2.194,350,2.4,351,2.4,352,2.92,353,2.92,354,2.92,355,1.563,356,1.877,357,1.563,359,2.4,360,1.563,395,1.955,424,2.4,437,1.381,543,2.409,647,4.42,660,1.955,663,4.475,672,3.233,681,2.996,688,3.001,693,1.429,715,1.318,716,3.884,719,3.146,735,1.429,864,3.233,865,1.429,882,2.657,891,1.223,894,2.194,932,1.429,1046,3.652,1060,1.955,1066,3.001,1067,4.42,1068,3.652,1075,1.563,1195,1.563,1196,1.955,1231,3.903,1270,1.731,1274,3.627,1275,4.13,1302,4.097,1303,1.955,1316,1.731,1419,1.955,1433,1.955,1471,1.955,1482,1.955,1489,4.725,1490,1.955,1491,4.288,1492,3.523,1493,3.523,1494,3.523,1495,3.523,1496,4.81,1497,2.295,1498,3.523,1499,2.295,1500,3.523,1501,2.295,1502,3.523,1503,2.295,1504,2.295,1505,2.295,1506,2.295,1507,2.295,1508,2.295,1509,2.295,1510,3.523,1511,2.295,1512,2.295,1513,2.295,1514,2.295,1515,3.523,1516,4.288,1517,2.295,1518,3.001,1519,2.295,1520,3.523,1521,3.523,1522,2.295,1523,4.288,1524,3.523,1525,3.523,1526,3.523,1527,4.81,1528,3.523,1529,3.523,1530,3.523,1531,2.295,1532,2.295,1533,2.295,1534,2.295,1535,3.523,1536,2.295,1537,2.295,1538,2.295,1539,2.295,1540,2.295,1541,2.295,1542,2.295,1543,2.295,1544,2.295,1545,2.295,1546,2.295,1547,2.295,1548,2.295,1549,2.295,1550,2.295,1551,2.295,1552,2.295,1553,5.189,1554,2.295,1555,2.295,1556,3.523,1557,2.295,1558,2.295,1559,2.295]],["title/components/TasksComponent.html",[0,0.05,112,0.581]],["body/components/TasksComponent.html",[0,0.087,1,0.459,2,0.139,3,0.139,4,0.59,5,0.627,6,0.59,7,0.59,8,0.119,10,0.459,13,0.373,14,0.555,15,1.37,16,0.555,17,1.432,18,1.184,19,0.919,21,0.865,23,0.225,30,0.865,31,0.648,35,0.296,38,0.023,39,0.556,41,0.373,48,0.517,49,0.181,53,0.459,56,0.1,57,0.044,63,0.373,64,0.865,65,0.814,66,0.673,67,1.255,68,0.59,69,0.865,70,0.459,71,0.59,72,0.49,73,0.59,74,0.459,75,0.865,76,0.459,77,0.459,78,0.459,79,0.998,80,0.59,81,0.459,82,0.865,83,0.459,84,0.59,85,0.49,86,0.865,87,0.459,88,0.865,89,0.459,90,0.59,91,0.459,92,0.59,93,0.459,94,0.59,95,0.459,96,0.59,97,0.59,98,0.459,99,0.59,100,0.459,101,0.59,102,0.459,103,0.555,104,0.459,105,0.858,106,0.59,107,0.459,108,0.59,109,0.459,110,0.459,111,0.59,112,0.878,113,0.59,114,0.459,115,0.49,116,0.429,117,0.555,118,0.59,119,0.013,120,0.013,122,2.52,172,2.009,216,2.081,261,3.171,264,3.127,265,3.661,305,2.52,306,2.081,307,3.127,308,3.262,309,3.778,310,1.719,311,1.719,312,1.88,313,2.756,314,2.993,315,2.756,316,3.03,317,3.498,318,3.498,319,3.593,320,1.719,321,1.585,322,2.52,323,2.52,324,4.786,325,2.756,326,2.756,327,2.081,328,3.317,329,1.88,330,2.081,331,3.011,332,2.081,333,2.081,334,3.051,335,2.993,336,2.811,337,3.262,338,2.52,339,2.552,340,2.619,341,3.37,342,2.081,343,3.226,344,2.324,345,2.156,346,1.719,347,3.314,348,4.235,349,1.719,350,1.88,351,1.88,352,2.756,353,2.756,354,2.756,355,1.88,356,2.156,357,2.756,358,1.88,359,1.88,360,1.88,361,1.88,362,3.612,363,2.081,543,1.281,666,3.656,681,2.983,719,1.585,865,2.52,866,2.35,867,3.498,868,2.35,869,2.35,870,3.446,871,2.983,872,3.612,873,3.446,874,3.446,875,3.446,876,2.35,877,2.081,878,2.081,879,3.446,880,2.35,881,2.35,882,2.081,883,2.35,884,2.081,885,2.35,886,5.495,887,4.493,888,2.35,889,2.35,890,2.35,891,2.552,892,3.446,893,4.493,894,2.52,895,2.35,896,2.35,897,2.35,898,2.35,899,2.35,916,3.051,1560,2.35,1561,4.79,1562,4.046,1563,2.76]],["title/modules/TasksModule.html",[180,1.001,1564,2.377]],["body/modules/TasksModule.html",[0,0.078,1,1.055,2,0.176,3,0.176,8,0.151,10,0.795,11,2.632,38,0.023,48,0.529,49,0.229,53,1.1,54,2.174,55,2.632,56,0.173,57,0.055,58,0.945,63,0.472,78,1.1,81,1.1,83,1.055,87,1.055,89,1.055,100,1.08,102,1.1,104,1.055,105,0.472,107,1.08,109,1.055,110,1.055,112,1.08,116,0.987,119,0.015,120,0.015,151,1.342,153,1.427,180,1.563,182,1.62,183,2.904,184,1.733,185,1.62,191,2.219,192,1.733,193,1.86,196,2.547,209,2.377,210,2.53,213,4.11,369,3.378,376,2.632,380,2.973,381,2.973,470,4.071,471,4.071,472,2.632,626,2.174,746,2.377,763,2.632,806,2.632,841,3.255,900,3.949,916,2.632,926,4.071,975,2.632,1136,2.632,1202,4.071,1211,2.973,1215,2.377,1232,2.632,1266,2.632,1373,2.632,1489,2.632,1564,5.007,1565,2.973,1566,2.973,1567,3.491,1568,3.491,1569,4.78,1570,4.78,1571,4.78,1572,3.491,1573,3.491,1574,3.491,1575,5.451,1576,3.491,1577,3.491,1578,3.491,1579,3.491,1580,3.491,1581,5.862,1582,3.491,1583,3.491,1584,3.491,1585,3.491,1586,3.491,1587,3.491,1588,3.491,1589,3.491]],["title/components/UserOptionsComponent.html",[0,0.05,114,0.581]],["body/components/UserOptionsComponent.html",[0,0.086,1,0.544,2,0.165,3,0.165,4,0.699,5,0.742,6,0.699,7,0.699,8,0.141,10,0.544,13,0.442,14,0.658,16,0.658,17,1.454,18,1.2,19,1.037,21,0.977,23,0.372,24,0.663,25,1.394,26,2.539,27,1.92,28,0.76,30,0.977,31,0.442,33,2.389,34,2.389,35,0.708,37,0.509,38,0.023,39,0.662,40,0.683,41,0.84,45,0.663,48,0.44,49,0.214,50,0.835,51,1.053,52,1.053,53,0.544,56,0.118,57,0.052,59,2.48,63,0.442,64,0.977,65,0.919,66,0.76,67,1.219,68,0.699,69,0.977,70,0.544,71,0.699,72,0.58,73,0.699,74,0.544,75,0.977,76,0.544,77,1.061,78,0.544,79,0.996,80,0.699,81,0.544,82,0.977,83,0.544,84,0.699,85,0.58,86,0.977,87,0.544,88,0.977,89,0.544,90,0.699,91,0.544,92,0.699,93,0.544,94,0.699,95,0.544,96,0.699,97,0.699,98,0.544,99,0.699,100,0.544,101,0.699,102,0.544,103,0.658,104,0.544,105,0.771,106,0.699,107,0.544,108,0.699,109,0.544,110,0.544,111,0.699,112,0.544,113,0.699,114,0.948,115,1.212,116,0.509,117,0.658,118,0.699,119,0.014,120,0.014,127,5.108,130,2.785,131,1.587,132,2.001,142,1.037,156,1.623,157,1.116,281,0.788,282,0.788,388,5.542,437,1.471,449,1.423,634,5.149,747,2.227,748,2.12,749,3.97,750,3.445,751,3.274,752,4.232,753,3.891,758,4.485,761,3.891,764,2.785,765,2.785,766,3.111,840,4.56,1221,2.785,1590,5.703,1591,3.27,1592,3.27,1593,4.568]],["title/coverage.html",[1594,4.07]],["body/coverage.html",[0,0.104,1,0.613,8,0.159,9,3.136,10,0.824,11,2.777,12,3.737,38,0.023,40,0.394,53,0.613,54,2.294,57,0.089,66,0.613,70,0.613,72,0.654,74,0.613,76,0.613,78,0.613,81,0.613,83,0.613,85,0.654,87,0.613,89,0.613,91,0.613,93,0.613,95,0.613,98,0.613,100,0.613,102,0.613,104,0.613,105,0.498,107,0.613,109,0.613,110,0.613,112,0.613,114,0.613,116,0.573,119,0.015,120,0.015,121,3.136,131,0.94,132,1.186,150,2.135,174,2.893,249,3.737,250,2.777,251,3.136,267,2.777,268,3.136,276,1.416,314,2.985,383,3.737,403,1.416,405,3.376,429,2.294,464,2.294,465,2.777,484,2.777,489,1.962,505,2.777,507,3.136,520,3.136,565,3.136,625,3.816,626,2.294,627,3.136,746,2.508,747,3.816,775,2.508,776,3.737,806,2.777,807,3.136,840,2.508,910,2.777,911,2.777,915,3.136,936,3.136,1082,3.136,1088,3.136,1106,3.136,1107,2.777,1108,3.136,1119,3.136,1120,2.777,1123,3.136,1124,3.136,1130,2.508,1131,3.136,1135,3.737,1136,2.777,1137,3.136,1152,4.268,1173,3.136,1214,3.136,1215,2.508,1227,3.136,1231,3.733,1232,2.777,1233,3.136,1263,4.224,1266,2.777,1267,3.136,1373,2.777,1374,3.136,1427,2.777,1489,2.777,1490,3.136,1518,4.772,1560,3.136,1590,3.136,1594,3.136,1595,3.682,1596,3.682,1597,3.682,1598,3.682,1599,3.682,1600,3.682,1601,4.956,1602,6.693,1603,3.682,1604,5.603,1605,4.956,1606,4.956,1607,3.682,1608,3.682,1609,3.682,1610,3.682,1611,5.487,1612,3.136,1613,5.603,1614,3.136,1615,3.136,1616,4.956,1617,3.682,1618,3.682,1619,3.682,1620,3.682,1621,3.682,1622,4.956,1623,3.682,1624,3.682,1625,3.682,1626,3.682,1627,3.682,1628,3.682,1629,3.682,1630,3.682,1631,3.682,1632,3.682,1633,3.682,1634,4.956,1635,4.956,1636,3.682,1637,3.682,1638,5.603,1639,3.682,1640,3.682,1641,4.956,1642,3.682,1643,3.682,1644,3.682,1645,3.682,1646,3.682,1647,3.682,1648,3.136,1649,4.221,1650,3.136,1651,3.682,1652,3.682]],["title/dependencies.html",[182,1.95,1653,2.906]],["body/dependencies.html",[38,0.023,44,1.251,49,0.303,50,1.181,51,1.849,52,1.489,56,0.167,119,0.018,120,0.018,151,1.777,153,2.67,154,2.655,155,2.011,182,2.146,184,2.295,198,5.321,199,3.937,202,3.937,374,3.577,447,4.33,466,3.937,472,4.33,474,4.891,480,3.937,481,3.937,691,4.891,975,3.486,1205,3.937,1213,3.937,1654,4.623,1655,4.623,1656,4.623,1657,6.247,1658,6.944,1659,4.623,1660,4.623,1661,4.33,1662,4.623,1663,4.623,1664,6.247,1665,6.247,1666,4.623,1667,4.623,1668,4.623,1669,4.623,1670,4.623,1671,4.623,1672,5.743,1673,4.623,1674,4.623,1675,4.623,1676,4.623,1677,4.623,1678,4.623,1679,5.743,1680,4.623,1681,4.623,1682,4.623,1683,4.623,1684,4.623,1685,4.623,1686,4.623,1687,4.623,1688,4.623,1689,4.623,1690,4.623,1691,4.623,1692,5.743,1693,4.623,1694,4.623,1695,4.623,1696,4.623,1697,4.623,1698,4.623,1699,4.623]],["title/miscellaneous/functions.html",[489,2.238,1700,1.98]],["body/miscellaneous/functions.html",[23,0.459,37,0.876,38,0.021,39,0.654,41,0.761,119,0.02,120,0.02,421,4.246,465,4.246,489,3,490,4.796,505,4.872,1700,3.835,1701,5.631]],["title/index.html",[23,0.284,1702,2.972]],["body/index.html",[0,0.052,1,0.928,38,0.023,53,0.928,56,0.132,57,0.058,63,0.493,66,0.607,70,1.092,72,1.166,74,0.928,76,0.928,78,0.928,81,0.928,83,0.928,85,1.166,87,0.928,89,0.928,91,1.092,93,1.092,95,1.092,98,1.092,100,0.928,102,0.928,104,0.928,107,0.928,109,0.928,110,0.928,112,0.928,114,1.092,116,0.868,119,0.015,120,0.015,131,1.424,132,1.796,150,1.246,180,1.413,181,4.473,182,1.693,183,1.944,184,1.811,185,1.693,186,3.107,187,3.107,188,3.107,189,3.107,190,4.359,191,2.286,192,1.811,193,1.944,206,3.473,210,1.693,224,2.751,276,2.144,364,4.659,365,3.107,366,3.107,367,3.107,368,4.749,369,3.831,461,3.107,462,3.107,463,3.107,464,3.473,684,2.445,689,3.107,900,4.359,901,3.107,902,3.107,903,3.107,904,3.107,905,4.749,1197,3.107,1198,3.107,1199,3.107,1427,3.714,1564,5.011,1565,3.107,1566,3.107,1702,3.107,1703,3.648,1704,3.648]],["title/modules.html",[180,1.371]],["body/modules.html",[38,0.02,119,0.02,120,0.02,180,1.554,181,3.69,190,3.375,206,3.375,364,3.69,369,2.887,451,4.086,900,3.375,1564,3.69,1661,5.358,1705,7.106,1706,7.106,1707,7.17,1708,5.418]],["title/routes.html",[210,2.218]],["body/routes.html",[38,0.02,119,0.02,120,0.02,210,2.671]],["title/miscellaneous/variables.html",[1152,2.617,1700,1.98]],["body/miscellaneous/variables.html",[23,0.28,24,0.917,38,0.023,40,0.693,45,0.786,58,1.864,119,0.015,120,0.015,123,1.847,155,1.497,185,2.511,233,1.108,235,1.597,281,1.671,282,1.629,284,2.765,383,2.595,403,2.08,405,4.3,406,2.931,428,5.819,429,3.932,437,1.876,484,4.079,504,4.608,506,4.608,516,4.608,518,4.608,569,3.369,605,4.608,659,2.882,678,4.608,776,2.595,795,2.931,907,4.608,910,4.079,911,4.079,1152,4.213,1402,4.608,1611,2.931,1612,4.963,1614,5.203,1615,5.203,1648,2.931,1649,5.867,1650,2.931,1661,4.76,1700,2.344,1709,3.441,1710,3.441,1711,6.313,1712,3.441,1713,3.441,1714,4.733,1715,6.313,1716,6.888,1717,5.41,1718,6.313,1719,5.41,1720,6.313,1721,6.313,1722,5.41,1723,6.313,1724,3.441,1725,3.441,1726,5.41,1727,3.441,1728,5.41,1729,4.733,1730,5.41,1731,3.441,1732,3.441,1733,4.733,1734,5.41,1735,3.441,1736,3.441]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"coverage.html":{}}}],["0.0.2",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1069,"title":{},"body":{"components/GridsterComponent.html":{}}}],["0.14",{"_index":1065,"title":{},"body":{"components/GridsterComponent.html":{}}}],["0.2",{"_index":1067,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["0.3",{"_index":1257,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["0.3.0",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":1533,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.5",{"_index":871,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["0.50",{"_index":1538,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.8",{"_index":1196,"title":{},"body":{"components/ProcessListComponent.html":{},"components/TaskItemComponent.html":{}}}],["0.8.26",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["0.8em",{"_index":881,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["0/1",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":340,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["1",{"_index":684,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"index.html":{}}}],["1.0.0",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":1540,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.2",{"_index":1553,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1/1",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1003,"title":{},"body":{"components/GridsterComponent.html":{}}}],["10.0.2",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":314,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["100px",{"_index":930,"title":{},"body":{"components/GridComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["100vh",{"_index":875,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":308,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["11",{"_index":1122,"title":{},"body":{"components/NotificationsButtonComponent.html":{}}}],["11/52",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["1140px",{"_index":885,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["120px",{"_index":874,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["12px",{"_index":337,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["13/49",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":333,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["14px",{"_index":1063,"title":{},"body":{"components/GridsterComponent.html":{}}}],["15/23",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1058,"title":{},"body":{"components/GridsterComponent.html":{}}}],["16px",{"_index":1261,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["17px",{"_index":1544,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["18px",{"_index":342,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["1px",{"_index":317,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["1s",{"_index":348,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["2",{"_index":687,"title":{},"body":{"components/FilterModalComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["2.22.2",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1263,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"coverage.html":{}}}],["2000",{"_index":979,"title":{},"body":{"components/GridsterComponent.html":{}}}],["20px",{"_index":311,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["21",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":1265,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["23px",{"_index":1260,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["24",{"_index":1703,"title":{},"body":{"index.html":{}}}],["25",{"_index":1520,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["2500",{"_index":1020,"title":{},"body":{"components/GridsterComponent.html":{}}}],["26",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["262626",{"_index":1059,"title":{},"body":{"components/GridsterComponent.html":{}}}],["2px",{"_index":1060,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["3",{"_index":689,"title":{},"body":{"components/FilterModalComponent.html":{},"index.html":{}}}],["3.0.0",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["3.9.4",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":883,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["300px",{"_index":360,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["31/36",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":1552,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["36",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":1066,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["4",{"_index":966,"title":{},"body":{"components/GridsterComponent.html":{}}}],["4.0.0",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["4/15",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1484,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["400px",{"_index":887,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["401",{"_index":292,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["40px",{"_index":929,"title":{},"body":{"components/GridComponent.html":{}}}],["42",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["49px",{"_index":893,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["4px",{"_index":868,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["5",{"_index":1704,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["5/13",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1518,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["500px",{"_index":262,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["50px",{"_index":1264,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["53px",{"_index":1259,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["550px",{"_index":1534,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["55px",{"_index":1078,"title":{},"body":{"components/GridsterComponent.html":{}}}],["56",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":1068,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["6",{"_index":1013,"title":{},"body":{"components/GridsterComponent.html":{}}}],["6.0.5",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":935,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["62",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1427,"title":{},"body":{"components/TaskGridComponent.html":{},"coverage.html":{},"index.html":{}}}],["7/15",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["740",{"_index":1011,"title":{},"body":{"components/GridsterComponent.html":{}}}],["75",{"_index":1515,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["80px",{"_index":931,"title":{},"body":{"components/GridComponent.html":{}}}],["86",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["9/16",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["_moment",{"_index":690,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["_moment(element.value).format('yyyi",{"_index":726,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["a[sorting.name].tolowercas",{"_index":1460,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["account",{"_index":1593,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["action",{"_index":361,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["activ",{"_index":660,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["activatedrout",{"_index":946,"title":{},"body":{"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":118,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["adapt",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":14,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["addrequestbuttoncompon",{"_index":1,"title":{"components/AddRequestButtonComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["aim",{"_index":741,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["alert('thi",{"_index":1370,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["align",{"_index":1546,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["allcriteria",{"_index":632,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["angular",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"modules/FormModule.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1205,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":446,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["angular/cor",{"_index":49,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1213,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":472,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":474,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["anim",{"_index":772,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["announc",{"_index":536,"title":{},"body":{"injectables/EventsService.html":{},"components/FiltersMenuComponent.html":{}}}],["announcefilt",{"_index":530,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefilter(filt",{"_index":534,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefiltersrefresh",{"_index":531,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefiltersrefresh(data",{"_index":537,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceitem",{"_index":532,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceitem(item",{"_index":541,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcesort",{"_index":533,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcesorting(sort",{"_index":544,"title":{},"body":{"injectables/EventsService.html":{}}}],["antialias",{"_index":1053,"title":{},"body":{"components/GridsterComponent.html":{}}}],["api",{"_index":519,"title":{},"body":{"classes/EnvService.html":{},"injectables/ExternalService.html":{},"components/TaskGridComponent.html":{}}}],["apical",{"_index":577,"title":{},"body":{"injectables/ExternalService.html":{}}}],["apicall(method",{"_index":582,"title":{},"body":{"injectables/ExternalService.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["app.compon",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["appconfig",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig.hasownproperty(key",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig[key",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appformiocompon",{"_index":72,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["appmodul",{"_index":181,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apponcr",{"_index":117,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["approutingmodul",{"_index":206,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["ar",{"_index":1098,"title":{},"body":{"components/LanguageComponent.html":{}}}],["array",{"_index":440,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["array.prototype.map.call(this.auth.getuser().group",{"_index":721,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["arrow",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["assets/i18n",{"_index":492,"title":{},"body":{"modules/CoreModule.html":{}}}],["assign",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigne",{"_index":718,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{}}}],["async",{"_index":29,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["attr(data",{"_index":1548,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["attribut",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["auth",{"_index":77,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["auth.getuser()?.profile.firstnam",{"_index":861,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["auth.getuser()?.profile.lastnam",{"_index":862,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["auth.interceptor.t",{"_index":420,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:13",{"_index":430,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:14",{"_index":441,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:21",{"_index":434,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:41",{"_index":439,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth/auth.module#authmodul",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authconfig",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authconfig.hasownproperty(key",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authconfig[key",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":211,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{}}}],["authindexcompon",{"_index":74,"title":{"components/AuthIndexComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["authlogincompon",{"_index":76,"title":{"components/AuthLoginComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["authmodul",{"_index":364,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authobj.statu",{"_index":291,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["author",{"_index":423,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["authserivc",{"_index":271,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["authservic",{"_index":132,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["auto",{"_index":264,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["avail",{"_index":451,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"components/LanguageComponent.html":{},"modules.html":{}}}],["await",{"_index":60,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["b",{"_index":1448,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["b[sorting.name].tolowercas",{"_index":1462,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["back",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["backbuttonicon",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{}}}],["backbuttontext",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{}}}],["backdropdismiss",{"_index":771,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["background",{"_index":1046,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["badg",{"_index":329,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["bar",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["base",{"_index":1054,"title":{},"body":{"components/GridsterComponent.html":{}}}],["basic",{"_index":422,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["basicauthinterceptor",{"_index":418,"title":{"interceptors/BasicAuthInterceptor.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["befor",{"_index":669,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["behaviorsubject",{"_index":548,"title":{},"body":{"injectables/EventsService.html":{}}}],["beta.12",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["beta.14",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":606,"title":{},"body":{"injectables/ExternalService.html":{},"components/TaskDetailsComponent.html":{}}}],["bg",{"_index":1516,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["block",{"_index":932,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["bodi",{"_index":585,"title":{},"body":{"injectables/ExternalService.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{}}}],["bootsrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootswatch",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":309,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["bottom",{"_index":326,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["box",{"_index":322,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["break",{"_index":719,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["brows",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1661,"title":{},"body":{"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/anim",{"_index":475,"title":{},"body":{"modules/CoreModule.html":{}}}],["browserwindow",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindow['__env",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv.hasownproperty(key",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btoa(object.usernam",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":15,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["button'},{'nam",{"_index":69,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["button.compon",{"_index":1211,"title":{},"body":{"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["button.component.html",{"_index":22,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{}}}],["button.component.scss",{"_index":20,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{}}}],["button.component.t",{"_index":12,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:14",{"_index":36,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:16",{"_index":47,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:17",{"_index":46,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:21",{"_index":43,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:8",{"_index":1121,"title":{},"body":{"components/NotificationsButtonComponent.html":{}}}],["button/add",{"_index":11,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["button/notif",{"_index":1120,"title":{},"body":{"components/NotificationsButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["calc(100",{"_index":891,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["calc(100vh",{"_index":873,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["call",{"_index":571,"title":{},"body":{"injectables/ExternalService.html":{}}}],["callback",{"_index":1286,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["camunda",{"_index":424,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["camundarestservic",{"_index":276,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["camundaservic",{"_index":272,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["canactiv",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":745,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["candidategroup",{"_index":720,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["card.card",{"_index":1531,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card:focu",{"_index":1556,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card:hov",{"_index":1555,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["case",{"_index":716,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["catch",{"_index":1310,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["chang",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/TaskGridComponent.html":{}}}],["changedopt",{"_index":942,"title":{},"body":{"components/GridsterComponent.html":{}}}],["check",{"_index":1240,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["child",{"_index":1423,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["child:not(.ful",{"_index":890,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["children",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["choic",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["choices[i].setattribute('dir",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["choos",{"_index":1372,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["chooseitem",{"_index":1493,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["chooseitem(item",{"_index":1500,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["choosen",{"_index":1095,"title":{},"body":{"components/LanguageComponent.html":{}}}],["chosen",{"_index":1410,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["claim",{"_index":1529,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["class",{"_index":57,"title":{"classes/EnvService.html":{},"classes/ProcessDefinition.html":{},"classes/Task.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["clear",{"_index":1389,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["clearsearch",{"_index":1378,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["clearsearch(ev",{"_index":1387,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["click",{"_index":820,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["close",{"_index":752,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/LanguageComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["cluster_appmodul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_import",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodul",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_declar",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_import",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_coremodul",{"_index":461,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_import",{"_index":462,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_provid",{"_index":463,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_formmodul",{"_index":901,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_declar",{"_index":902,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_export",{"_index":904,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_import",{"_index":903,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_sharedmodul",{"_index":1197,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declar",{"_index":1198,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_export",{"_index":1199,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_tasksmodul",{"_index":1565,"title":{},"body":{"modules/TasksModule.html":{},"index.html":{}}}],["cluster_tasksmodule_declar",{"_index":1566,"title":{},"body":{"modules/TasksModule.html":{},"index.html":{}}}],["cluster_tasksmodule_import",{"_index":1567,"title":{},"body":{"modules/TasksModule.html":{}}}],["code",{"_index":1097,"title":{},"body":{"components/LanguageComponent.html":{}}}],["col",{"_index":964,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col.collaps",{"_index":899,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["col.fullscreen",{"_index":1071,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col:focu",{"_index":1074,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col:hov",{"_index":1073,"title":{},"body":{"components/GridsterComponent.html":{}}}],["collaps",{"_index":892,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["collect",{"_index":654,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["color",{"_index":681,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["column",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":560,"title":{},"body":{"injectables/EventsService.html":{}}}],["commonmodul",{"_index":1204,"title":{},"body":{"modules/SharedModule.html":{}}}],["compacttyp",{"_index":972,"title":{},"body":{"components/GridsterComponent.html":{}}}],["compacttype.compactupandleft",{"_index":1002,"title":{},"body":{"components/GridsterComponent.html":{}}}],["compat",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":864,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":68,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["componentprop",{"_index":773,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["components/add",{"_index":1574,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/auth",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/filt",{"_index":1575,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/form/form.compon",{"_index":913,"title":{},"body":{"modules/FormModule.html":{}}}],["components/formio/formio.compon",{"_index":914,"title":{},"body":{"modules/FormModule.html":{}}}],["components/grid/grid.compon",{"_index":1577,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/gridster/gridster.compon",{"_index":1578,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/header/header.compon",{"_index":1206,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/languag",{"_index":1207,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/language/language.compon",{"_index":1209,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/notif",{"_index":1210,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/process",{"_index":926,"title":{},"body":{"components/GridComponent.html":{},"modules/TasksModule.html":{}}}],["components/sort",{"_index":1580,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/task",{"_index":1581,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/us",{"_index":1203,"title":{},"body":{"modules/SharedModule.html":{}}}],["config",{"_index":509,"title":{},"body":{"classes/EnvService.html":{}}}],["consol",{"_index":604,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.error(error",{"_index":603,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.log(data",{"_index":1474,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["console.log(err",{"_index":1312,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["console.log(messag",{"_index":624,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.log(resourc",{"_index":1368,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["console.log(submiss",{"_index":1160,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["console.log(taskdefinition[0].$['camunda:formkey",{"_index":1352,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["console.log(this.filt",{"_index":731,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["console.log(this.form",{"_index":1338,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["console.log(this.form.resourcenam",{"_index":1369,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["const",{"_index":58,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["constructor(@inject(local_storag",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{}}}],["constructor(auth",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{}}}],["constructor(camundaservic",{"_index":275,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/ProcessListComponent.html":{}}}],["constructor(ev",{"_index":919,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["constructor(eventservic",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/UserOptionsComponent.html":{}}}],["constructor(http",{"_index":580,"title":{},"body":{"injectables/ExternalService.html":{}}}],["constructor(loadingcontrol",{"_index":1497,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["constructor(popoverctrl",{"_index":254,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{}}}],["constructor(priv",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ExternalService.html":{}}}],["constructor(publ",{"_index":449,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["constructor(rout",{"_index":1144,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["constructor(storag",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{}}}],["constructor(transl",{"_index":32,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["consumpt",{"_index":609,"title":{},"body":{"injectables/ExternalService.html":{}}}],["contain",{"_index":260,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["content",{"_index":865,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["contenteditable=true]:empty:not(:focus):befor",{"_index":1547,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["contrast",{"_index":1055,"title":{},"body":{"components/GridsterComponent.html":{}}}],["core",{"_index":466,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/core.modul",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["core/directives/on",{"_index":1572,"title":{},"body":{"modules/TasksModule.html":{}}}],["core/schemas/processdefinit",{"_index":1186,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["core/services/auth.servic",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["core/services/camunda",{"_index":288,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["core/services/env.service.provid",{"_index":912,"title":{},"body":{"modules/FormModule.html":{}}}],["core/services/events.servic",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["core/services/filter.servic",{"_index":976,"title":{},"body":{"components/GridsterComponent.html":{}}}],["coremodul",{"_index":190,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["correct",{"_index":646,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["count",{"_index":823,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["coverag",{"_index":1594,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":569,"title":{},"body":{"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["create.direct",{"_index":1573,"title":{},"body":{"modules/TasksModule.html":{}}}],["create.directive.t",{"_index":1124,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["create.directive.ts:14",{"_index":1127,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["create.directive.ts:19",{"_index":1128,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["createdaft",{"_index":670,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["createdbefor",{"_index":668,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["createtranslateload",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":490,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["credenti",{"_index":450,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["criteria",{"_index":633,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["criterion",{"_index":739,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["criterion.nam",{"_index":744,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["critic",{"_index":1522,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["current",{"_index":678,"title":{},"body":{"components/FilterModalComponent.html":{},"miscellaneous/variables.html":{}}}],["currentfilterlist",{"_index":796,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.push(griditem",{"_index":798,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.splice(currentfilterlist.indexof(temp",{"_index":801,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.tasks.filt",{"_index":802,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.tasks.filters.filter(funct",{"_index":803,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentus",{"_index":452,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["currentuser.token",{"_index":454,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["cursor",{"_index":1193,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["customev",{"_index":1284,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["danger",{"_index":1517,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dark",{"_index":869,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["dashlet",{"_index":916,"title":{},"body":{"components/GridComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["data",{"_index":540,"title":{},"body":{"injectables/EventsService.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["data.complet",{"_index":1478,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["data.count",{"_index":845,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["data.item",{"_index":1486,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["data.taskid",{"_index":1480,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["date",{"_index":647,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["date(a[sorting.nam",{"_index":1450,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["date(b[sorting.nam",{"_index":1452,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["datea",{"_index":1449,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["dateb",{"_index":1451,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["datetim",{"_index":1222,"title":{},"body":{"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{}}}],["dcdcdc",{"_index":1532,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ddthh:mm:ss.ssszz",{"_index":728,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["declar",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["decor",{"_index":1419,"title":{},"body":{"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["deep",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":281,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":35,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["definit",{"_index":922,"title":{},"body":{"components/GridComponent.html":{},"components/ProcessListComponent.html":{}}}],["delet",{"_index":575,"title":{},"body":{"injectables/ExternalService.html":{},"components/FilterOptionsComponent.html":{}}}],["deletefromlocalstorag",{"_index":778,"title":{},"body":{"injectables/FilterService.html":{}}}],["deletefromlocalstorage(griditem",{"_index":784,"title":{},"body":{"injectables/FilterService.html":{}}}],["dep",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":182,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["descript",{"_index":13,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["descriptionlik",{"_index":662,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["detail",{"_index":339,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["details'},{'nam",{"_index":106,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["details.compon",{"_index":1582,"title":{},"body":{"modules/TasksModule.html":{}}}],["details.component.html",{"_index":1235,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.scss",{"_index":1234,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.t",{"_index":1233,"title":{},"body":{"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:14",{"_index":1238,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1237,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1244,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1245,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1242,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1239,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details/task",{"_index":1232,"title":{},"body":{"components/TaskDetailsComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["dir",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{}}}],["direct",{"_index":66,"title":{"directives/OnCreateDirective.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["disablepushondrag",{"_index":1039,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablepushonres",{"_index":1040,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablewarn",{"_index":1044,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablewindowres",{"_index":1043,"title":{},"body":{"components/GridsterComponent.html":{}}}],["dismissload",{"_index":1272,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["display",{"_index":331,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["displaygrid",{"_index":973,"title":{},"body":{"components/GridsterComponent.html":{}}}],["displaygrid.non",{"_index":1042,"title":{},"body":{"components/GridsterComponent.html":{}}}],["distribut",{"_index":521,"title":{},"body":{"injectables/EventsService.html":{}}}],["div",{"_index":363,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["document",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["document.getelementsbyclassname('choic",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementsbyclassname('formio",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementsbyclassname('head",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["doinfinit",{"_index":1379,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["doinfinite(infinitescrol",{"_index":1391,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["draggabl",{"_index":1022,"title":{},"body":{"components/GridsterComponent.html":{}}}],["draghandleclass",{"_index":1025,"title":{},"body":{"components/GridsterComponent.html":{}}}],["dropdown",{"_index":655,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["due",{"_index":672,"title":{},"body":{"components/FilterModalComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskItemComponent.html":{}}}],["dueafter",{"_index":673,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["duebefor",{"_index":671,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["dynam",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1030,"title":{},"body":{"components/GridsterComponent.html":{}}}],["e2e2e2",{"_index":1070,"title":{},"body":{"components/GridsterComponent.html":{}}}],["edit",{"_index":629,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/TaskEditComponent.html":{}}}],["edit'},{'nam",{"_index":108,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["edit.compon",{"_index":1583,"title":{},"body":{"modules/TasksModule.html":{}}}],["edit.component.html",{"_index":1269,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.scss",{"_index":1268,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.t",{"_index":1267,"title":{},"body":{"components/TaskEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:106",{"_index":1278,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:20",{"_index":1297,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:21",{"_index":1293,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:22",{"_index":1292,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:29",{"_index":1276,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:31",{"_index":1289,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:32",{"_index":1295,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:33",{"_index":1296,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:37",{"_index":1298,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:48",{"_index":1283,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:85",{"_index":1287,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:91",{"_index":1288,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:95",{"_index":1277,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit/:taskid",{"_index":1588,"title":{},"body":{"modules/TasksModule.html":{}}}],["edit/task",{"_index":1266,"title":{},"body":{"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["eee",{"_index":319,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["eg:complet",{"_index":1285,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["element.key.length",{"_index":724,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["element.typ",{"_index":725,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["element.valu",{"_index":729,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["ellipsi",{"_index":357,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["emit",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"directives/OnCreateDirective.html":{}}}],["empti",{"_index":615,"title":{},"body":{"injectables/ExternalService.html":{}}}],["en",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageComponent.html":{}}}],["enabl",{"_index":1023,"title":{},"body":{"components/GridsterComponent.html":{}}}],["engin",{"_index":435,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["engineapiurl",{"_index":510,"title":{},"body":{"classes/EnvService.html":{}}}],["engineresturl",{"_index":511,"title":{},"body":{"classes/EnvService.html":{}}}],["english",{"_index":1099,"title":{},"body":{"components/LanguageComponent.html":{}}}],["eniro",{"_index":508,"title":{},"body":{"classes/EnvService.html":{}}}],["entrycompon",{"_index":1202,"title":{},"body":{"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["enum",{"_index":686,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["env",{"_index":428,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["env.j",{"_index":518,"title":{},"body":{"classes/EnvService.html":{},"miscellaneous/variables.html":{}}}],["env[key",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviro",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":1649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envservic",{"_index":429,"title":{"classes/EnvService.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envservicefactori",{"_index":1612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envserviceprovid",{"_index":484,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1311,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["error",{"_index":591,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.hasownproperty('messag",{"_index":618,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.messag",{"_index":620,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.typ",{"_index":622,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.messag",{"_index":612,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.statu",{"_index":617,"title":{},"body":{"injectables/ExternalService.html":{}}}],["essenti",{"_index":467,"title":{},"body":{"modules/CoreModule.html":{}}}],["etc",{"_index":576,"title":{},"body":{"injectables/ExternalService.html":{}}}],["even",{"_index":832,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["event",{"_index":44,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"dependencies.html":{}}}],["event.detail.valu",{"_index":709,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["event.hasownproperty('typ",{"_index":1300,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["event.stoppropag",{"_index":842,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["event.typ",{"_index":1301,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["event.url.includes('new",{"_index":1253,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["eventemitt",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"directives/OnCreateDirective.html":{}}}],["eventservic",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/UserOptionsComponent.html":{}}}],["eventsservic",{"_index":131,"title":{"injectables/EventsService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["execut",{"_index":1151,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["executionidin",{"_index":1357,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["executionvariables.filter((vari",{"_index":1364,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["executionvariables.foreach((vari",{"_index":1360,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["executionvariables[key].valu",{"_index":1333,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["executionvariables[this.form.resourcenam",{"_index":1335,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["executionvariables[this.form.resourcename].valu",{"_index":1336,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["exist",{"_index":826,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["extern",{"_index":566,"title":{},"body":{"injectables/ExternalService.html":{}}}],["externalservic",{"_index":464,"title":{"injectables/ExternalService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{},"coverage.html":{},"index.html":{}}}],["extra",{"_index":332,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["f8f8f8",{"_index":1542,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["factori",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":611,"title":{},"body":{"injectables/ExternalService.html":{}}}],["fals",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/FilterService.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":1061,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fetch",{"_index":1394,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["fetchtask",{"_index":1380,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["fetchtasks(isnew",{"_index":1396,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["fff",{"_index":1047,"title":{},"body":{"components/GridsterComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["fill",{"_index":643,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskEditComponent.html":{}}}],["filter",{"_index":79,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["filter.count",{"_index":844,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filter.id",{"_index":804,"title":{},"body":{"injectables/FilterService.html":{}}}],["filter.nam",{"_index":738,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["filterannounc",{"_index":522,"title":{},"body":{"injectables/EventsService.html":{}}}],["filterid",{"_index":644,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{}}}],["filtermodalcompon",{"_index":78,"title":{"components/FilterModalComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filteropt",{"_index":812,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filteroptions(ev",{"_index":818,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filteroptionscompon",{"_index":81,"title":{"components/FilterOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters.length",{"_index":859,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filterservic",{"_index":775,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FilterService.html":{},"components/GridsterComponent.html":{},"coverage.html":{}}}],["filterslist",{"_index":777,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtersmenucompon",{"_index":83,"title":{"components/FiltersMenuComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtersourc",{"_index":523,"title":{},"body":{"injectables/EventsService.html":{}}}],["filterstorag",{"_index":940,"title":{},"body":{"components/GridsterComponent.html":{}}}],["find",{"_index":1251,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["finish",{"_index":1469,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["firstresult",{"_index":1465,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["fit",{"_index":649,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["fix",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/GridsterComponent.html":{}}}],["fixdom",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["fixdom(dir",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["fixpanelsdirect",{"_index":943,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fixpanelsdirection(dir",{"_index":949,"title":{},"body":{"components/GridsterComponent.html":{}}}],["float",{"_index":315,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["font",{"_index":335,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["forecast_contain",{"_index":876,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["form",{"_index":259,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{}}}],["form'},{'nam",{"_index":86,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["form.compon",{"_index":1579,"title":{},"body":{"modules/TasksModule.html":{}}}],["form.component.html",{"_index":1141,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.scss",{"_index":1140,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.t",{"_index":1137,"title":{},"body":{"components/ProcessFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":1145,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:20",{"_index":1158,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:21",{"_index":1159,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:22",{"_index":1156,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:23",{"_index":1157,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:35",{"_index":1150,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:52",{"_index":1146,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form/form.modul",{"_index":1587,"title":{},"body":{"modules/TasksModule.html":{}}}],["form/process",{"_index":1136,"title":{},"body":{"components/ProcessFormComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["format",{"_index":648,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["formcompon",{"_index":85,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["formio",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{},"classes/EnvService.html":{},"modules/FormModule.html":{},"components/TaskEditComponent.html":{},"dependencies.html":{}}}],["formio'},{'nam",{"_index":73,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["formio/auth",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{}}}],["formio/resourc",{"_index":909,"title":{},"body":{"modules/FormModule.html":{}}}],["formioappconfig",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formioappconfigfactori",{"_index":1614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioappconfigprovid",{"_index":910,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioappurl",{"_index":512,"title":{},"body":{"classes/EnvService.html":{}}}],["formioauth",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["formioauthconfig",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formioauthconfigfactori",{"_index":1615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioauthconfigprovid",{"_index":911,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioauthservic",{"_index":908,"title":{},"body":{"modules/FormModule.html":{}}}],["formioj",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["formiomodul",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{}}}],["formioresourc",{"_index":905,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["formkey",{"_index":1280,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["formmodul",{"_index":900,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["formsmodul",{"_index":1212,"title":{},"body":{"modules/SharedModule.html":{}}}],["full",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["fullscreen",{"_index":967,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["function",{"_index":489,"title":{"miscellaneous/functions.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gener",{"_index":570,"title":{},"body":{"injectables/ExternalService.html":{}}}],["getfiltercount",{"_index":813,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["getfiltercount(filt",{"_index":821,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["getfromlocalstorag",{"_index":779,"title":{},"body":{"injectables/FilterService.html":{}}}],["getprior",{"_index":1494,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getpriority(prior",{"_index":1502,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getstatu",{"_index":1495,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getstatus(prior",{"_index":1504,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getus",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvariableinstancebyexecutionid",{"_index":1356,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["girdster",{"_index":957,"title":{},"body":{"components/GridsterComponent.html":{}}}],["girdster.options.api.res",{"_index":978,"title":{},"body":{"components/GridsterComponent.html":{}}}],["graph",{"_index":1708,"title":{},"body":{"modules.html":{}}}],["grayscal",{"_index":1052,"title":{},"body":{"components/GridsterComponent.html":{}}}],["grey",{"_index":1550,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["grid",{"_index":867,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["grid'},{'nam",{"_index":88,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["grid.compon",{"_index":1584,"title":{},"body":{"modules/TasksModule.html":{}}}],["grid.component.html",{"_index":918,"title":{},"body":{"components/GridComponent.html":{},"components/TaskGridComponent.html":{}}}],["grid.component.scss",{"_index":917,"title":{},"body":{"components/GridComponent.html":{},"components/TaskGridComponent.html":{}}}],["grid.component.t",{"_index":1374,"title":{},"body":{"components/TaskGridComponent.html":{},"coverage.html":{}}}],["grid.component.ts:110",{"_index":1412,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:148",{"_index":1409,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:158",{"_index":1397,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:196",{"_index":1392,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:20",{"_index":1430,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:209",{"_index":1399,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:25",{"_index":1417,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:32",{"_index":1431,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:34",{"_index":1424,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:38",{"_index":1418,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:39",{"_index":1428,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:43",{"_index":1386,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:49",{"_index":1429,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:50",{"_index":1426,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:52",{"_index":1425,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:60",{"_index":1407,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:68",{"_index":1414,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:76",{"_index":1405,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:80",{"_index":1390,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:88",{"_index":1388,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid.component.ts:97",{"_index":1401,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["grid/task",{"_index":1373,"title":{},"body":{"components/TaskGridComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["gridcompon",{"_index":87,"title":{"components/GridComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["griditem",{"_index":786,"title":{},"body":{"injectables/FilterService.html":{}}}],["gridster",{"_index":937,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster'},{'nam",{"_index":90,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["gridster.component.html",{"_index":939,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster.component.scss",{"_index":938,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster.mobil",{"_index":1076,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster2",{"_index":975,"title":{},"body":{"components/GridsterComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["gridstercompon",{"_index":89,"title":{"components/GridsterComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["gridsterconfig",{"_index":962,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridstermodul",{"_index":1571,"title":{},"body":{"modules/TasksModule.html":{}}}],["gridtyp",{"_index":974,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridtype.fit",{"_index":1001,"title":{},"body":{"components/GridsterComponent.html":{}}}],["group",{"_index":688,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["group.nam",{"_index":863,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["guard",{"_index":224,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["guards/auth.guard",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["h2",{"_index":1539,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["h3",{"_index":327,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["handl",{"_index":1027,"title":{},"body":{"components/GridsterComponent.html":{}}}],["handleerror",{"_index":578,"title":{},"body":{"injectables/ExternalService.html":{}}}],["handleerror(oper",{"_index":586,"title":{},"body":{"injectables/ExternalService.html":{}}}],["header",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FiltersMenuComponent.html":{},"components/HeaderComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["header'},{'nam",{"_index":92,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["header.component.html",{"_index":1084,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1083,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":91,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["height",{"_index":341,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["height:100vh",{"_index":866,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["height:45px",{"_index":1258,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["here",{"_index":516,"title":{},"body":{"classes/EnvService.html":{},"miscellaneous/variables.html":{}}}],["heroservic",{"_index":594,"title":{},"body":{"injectables/ExternalService.html":{}}}],["hidden",{"_index":344,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["histori",{"_index":855,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["host:hover,:host:focu",{"_index":1256,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["http",{"_index":421,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":468,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["httpclientmodul",{"_index":469,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":444,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httphandler",{"_index":433,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httpinterceptor",{"_index":445,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httprequest",{"_index":432,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["icon",{"_index":1543,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["id",{"_index":751,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"classes/ProcessDefinition.html":{},"classes/Task.html":{},"components/TaskGridComponent.html":{},"components/UserOptionsComponent.html":{}}}],["identifi",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["identity.group",{"_index":299,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["ignorecont",{"_index":1024,"title":{},"body":{"components/GridsterComponent.html":{}}}],["implement",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{}}}],["incorrect",{"_index":304,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.compon",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{}}}],["index.component.html",{"_index":253,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.scss",{"_index":252,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.t",{"_index":251,"title":{},"body":{"components/AuthIndexComponent.html":{},"coverage.html":{}}}],["index.component.ts:10",{"_index":255,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:13",{"_index":257,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:14",{"_index":258,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:17",{"_index":256,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index/auth",{"_index":250,"title":{},"body":{"components/AuthIndexComponent.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["infin",{"_index":1421,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["infinit",{"_index":1393,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["infinitescrol",{"_index":1375,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["infinitescroll.target.complet",{"_index":1475,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{}}}],["infrastructur",{"_index":602,"title":{},"body":{"injectables/ExternalService.html":{}}}],["inherit",{"_index":1062,"title":{},"body":{"components/GridsterComponent.html":{}}}],["init",{"_index":1279,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["initcallback",{"_index":997,"title":{},"body":{"components/GridsterComponent.html":{}}}],["initi",{"_index":359,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["initilaz",{"_index":1125,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["inject",{"_index":150,"title":{"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"coverage.html":{},"index.html":{}}}],["inject(local_storag",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageComponent.html":{}}}],["inner",{"_index":362,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["input",{"_index":321,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/HeaderComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["insert",{"_index":799,"title":{},"body":{"injectables/FilterService.html":{}}}],["instanc",{"_index":1138,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["instanceof",{"_index":993,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["instead",{"_index":605,"title":{},"body":{"injectables/ExternalService.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":567,"title":{},"body":{"injectables/ExternalService.html":{}}}],["intercept",{"_index":426,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["intercept(request",{"_index":431,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["interceptor",{"_index":417,"title":{"interceptors/BasicAuthInterceptor.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["io",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["ion",{"_index":328,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["ionchang",{"_index":656,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["ionic",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":50,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"dependencies.html":{}}}],["ionic/ng",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["ionic/schemat",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["ionicmodul",{"_index":476,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["ionicmodule.forroot",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{}}}],["ionicroutestrategi",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["isfilteropen",{"_index":780,"title":{},"body":{"injectables/FilterService.html":{}}}],["isfilteropen(filt",{"_index":788,"title":{},"body":{"injectables/FilterService.html":{}}}],["isloggednin",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnew",{"_index":1398,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["ital",{"_index":1551,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item",{"_index":543,"title":{},"body":{"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["item'},{'nam",{"_index":111,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["item.$.id",{"_index":1350,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["item.complet",{"_index":1481,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item.compon",{"_index":1585,"title":{},"body":{"modules/TasksModule.html":{}}}],["item.component.html",{"_index":1492,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.scss",{"_index":1491,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.t",{"_index":1490,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:20",{"_index":1499,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:22",{"_index":1511,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:24",{"_index":1498,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:28",{"_index":1509,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:32",{"_index":1508,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:37",{"_index":1507,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:53",{"_index":1501,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:61",{"_index":1503,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:86",{"_index":1505,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.id",{"_index":722,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{}}}],["item.key",{"_index":708,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item.typ",{"_index":713,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item/task",{"_index":1489,"title":{},"body":{"components/TaskItemComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["item1.key",{"_index":711,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item1.typ",{"_index":712,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item1.valu",{"_index":714,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item:hov",{"_index":358,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessListComponent.html":{},"components/TasksComponent.html":{}}}],["item['assigne",{"_index":1440,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['assignee'].tostring().tolowercase().includes(value.tolowercas",{"_index":1441,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['descript",{"_index":1442,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['description'].tostring().tolowercase().includes(value.tolowercas",{"_index":1443,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['du",{"_index":1444,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['due'].tostring().tolowercase().includes(value.tolowercas",{"_index":1445,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['nam",{"_index":1438,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["item['name'].tostring().tolowercase().includes(value.tolowercas",{"_index":1439,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["itemchang",{"_index":524,"title":{},"body":{"injectables/EventsService.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["itemchange(item",{"_index":951,"title":{},"body":{"components/GridsterComponent.html":{}}}],["itemcompon",{"_index":952,"title":{},"body":{"components/GridsterComponent.html":{}}}],["itemresizecallback",{"_index":999,"title":{},"body":{"components/GridsterComponent.html":{}}}],["itemsourc",{"_index":525,"title":{},"body":{"injectables/EventsService.html":{}}}],["java",{"_index":650,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["job",{"_index":607,"title":{},"body":{"injectables/ExternalService.html":{}}}],["jqueri",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":493,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["json.parse(event.component.properties['vari",{"_index":1305,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["keep",{"_index":613,"title":{},"body":{"injectables/ExternalService.html":{}}}],["keepfixedheightinmobil",{"_index":1008,"title":{},"body":{"components/GridsterComponent.html":{}}}],["keepfixedwidthinmobil",{"_index":1009,"title":{},"body":{"components/GridsterComponent.html":{}}}],["key",{"_index":659,"title":{},"body":{"components/FilterModalComponent.html":{},"components/LanguageComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["key.indexof('v_",{"_index":1331,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["keyresourcearray",{"_index":1323,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["keyresourcearray[0",{"_index":1326,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["keyresourcearray[1",{"_index":1328,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["kind",{"_index":572,"title":{},"body":{"injectables/ExternalService.html":{}}}],["lang",{"_index":1096,"title":{},"body":{"components/LanguageComponent.html":{}}}],["languag",{"_index":96,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["language'},{'nam",{"_index":94,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["language.component.html",{"_index":1090,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.component.scss",{"_index":1089,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.lang",{"_index":1105,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language/language.compon",{"_index":1117,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["languagecompon",{"_index":93,"title":{"components/LanguageComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["languages(ev",{"_index":1112,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["languageswitchcompon",{"_index":95,"title":{"components/LanguageSwitchComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["last",{"_index":889,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["latestvers",{"_index":1189,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["left",{"_index":1453,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["left.gettim",{"_index":1454,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["left:0px",{"_index":1079,"title":{},"body":{"components/GridsterComponent.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"index.html":{}}}],["length",{"_index":1249,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["light",{"_index":888,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["line",{"_index":1248,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["line:max",{"_index":1247,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["line:radix",{"_index":1456,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["link",{"_index":1557,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["list",{"_index":894,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["list'},{'nam",{"_index":101,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["list.compon",{"_index":55,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{},"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1175,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.scss",{"_index":1174,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.t",{"_index":1173,"title":{},"body":{"components/ProcessListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":1177,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:21",{"_index":1182,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:22",{"_index":1185,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:23",{"_index":1183,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:24",{"_index":1184,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:30",{"_index":1180,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:39",{"_index":1178,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list/process",{"_index":54,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{},"components/ProcessListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["lnaguag",{"_index":1114,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["load",{"_index":1270,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["loadchildren",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":481,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["loading.pres",{"_index":1512,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["loadingcontrol",{"_index":1275,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["local",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{}}}],["local_filt",{"_index":795,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/variables.html":{}}}],["local_storag",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["localstorag",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/LanguageComponent.html":{}}}],["log",{"_index":579,"title":{},"body":{"injectables/ExternalService.html":{}}}],["log(messag",{"_index":592,"title":{},"body":{"injectables/ExternalService.html":{}}}],["logg",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggedinus",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{}}}],["login'},{'nam",{"_index":75,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["login.compon",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":270,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.scss",{"_index":269,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.t",{"_index":268,"title":{},"body":{"components/AuthLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":287,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:12",{"_index":277,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:14",{"_index":280,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:15",{"_index":279,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:16",{"_index":283,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:19",{"_index":278,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login/auth",{"_index":267,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["loginerror",{"_index":273,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["logout",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/UserOptionsComponent.html":{}}}],["main",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskEditComponent.html":{},"components/TasksComponent.html":{}}}],["margin",{"_index":345,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["margin:50px",{"_index":263,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["matautocompletemodul",{"_index":1569,"title":{},"body":{"modules/TasksModule.html":{}}}],["match",{"_index":120,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodul",{"_index":470,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["matinputmodul",{"_index":1570,"title":{},"body":{"modules/TasksModule.html":{}}}],["matnativedatemodul",{"_index":471,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["max",{"_index":265,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["maxcol",{"_index":1012,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemarea",{"_index":1019,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemcol",{"_index":1015,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemrow",{"_index":1017,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxresult",{"_index":1467,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["maxrow",{"_index":1014,"title":{},"body":{"components/GridsterComponent.html":{}}}],["md",{"_index":313,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["md.split",{"_index":896,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["md::after",{"_index":330,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["media",{"_index":884,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TasksComponent.html":{}}}],["media(max",{"_index":1048,"title":{},"body":{"components/GridsterComponent.html":{}}}],["menu",{"_index":748,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"components/UserOptionsComponent.html":{}}}],["menu'},{'nam",{"_index":84,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["menu.compon",{"_index":1576,"title":{},"body":{"modules/TasksModule.html":{}}}],["menu.component.html",{"_index":810,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.scss",{"_index":809,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.t",{"_index":807,"title":{},"body":{"components/FiltersMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:109",{"_index":824,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":835,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":817,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":837,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:30",{"_index":834,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:32",{"_index":838,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:33",{"_index":836,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":833,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:44",{"_index":831,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:60",{"_index":819,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:73",{"_index":827,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:88",{"_index":822,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:99",{"_index":829,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu/filt",{"_index":806,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["menutyp",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{}}}],["merg",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messag",{"_index":559,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ExternalService.html":{}}}],["messageservic",{"_index":595,"title":{},"body":{"injectables/ExternalService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["method",{"_index":28,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["min",{"_index":666,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["minitemarea",{"_index":1021,"title":{},"body":{"components/GridsterComponent.html":{}}}],["minitemcol",{"_index":1016,"title":{},"body":{"components/GridsterComponent.html":{}}}],["minitemrow",{"_index":1018,"title":{},"body":{"components/GridsterComponent.html":{}}}],["miscellan",{"_index":1700,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":727,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["mobilebreakpoint",{"_index":1010,"title":{},"body":{"components/GridsterComponent.html":{}}}],["modal",{"_index":628,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["modal'},{'nam",{"_index":80,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["modal.compon",{"_index":763,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{}}}],["modal.component.html",{"_index":631,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.scss",{"_index":630,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.t",{"_index":627,"title":{},"body":{"components/FilterModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:118",{"_index":653,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:146",{"_index":645,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:19",{"_index":674,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:36",{"_index":677,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:40",{"_index":683,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:48",{"_index":685,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:53",{"_index":682,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:65",{"_index":641,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:66",{"_index":675,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:67",{"_index":676,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:75",{"_index":642,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:99",{"_index":658,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.pres",{"_index":774,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["modal/filt",{"_index":626,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["modalcontrol",{"_index":640,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{}}}],["mode",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"components/TaskDetailsComponent.html":{}}}],["modul",{"_index":180,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":691,"title":{},"body":{"components/FilterModalComponent.html":{},"dependencies.html":{}}}],["more",{"_index":338,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["move",{"_index":1026,"title":{},"body":{"components/GridsterComponent.html":{}}}],["moz",{"_index":349,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["ms",{"_index":350,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["n",{"_index":1031,"title":{},"body":{"components/GridsterComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["namelik",{"_index":661,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["native/cor",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/statu",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["navig",{"_index":1181,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["navigationend",{"_index":971,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["navparam",{"_index":634,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["ne",{"_index":1034,"title":{},"body":{"components/GridsterComponent.html":{}}}],["need",{"_index":907,"title":{},"body":{"modules/FormModule.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskGridComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new/:processdefinitionid",{"_index":1589,"title":{},"body":{"modules/TasksModule.html":{}}}],["next",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["next.handle(request",{"_index":458,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["ngmodul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["ngoninit",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["ngonintit",{"_index":825,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["ngx",{"_index":51,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{},"dependencies.html":{}}}],["none",{"_index":324,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["noopanimationsmodul",{"_index":473,"title":{},"body":{"modules/CoreModule.html":{}}}],["normal",{"_index":1523,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["note",{"_index":334,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["notif",{"_index":99,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["notificationsbuttoncompon",{"_index":98,"title":{"components/NotificationsButtonComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["nowrap",{"_index":355,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["null",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskItemComponent.html":{}}}],["number",{"_index":664,"title":{},"body":{"components/FilterModalComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{}}}],["nw",{"_index":1036,"title":{},"body":{"components/GridsterComponent.html":{}}}],["o",{"_index":351,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["object",{"_index":284,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"miscellaneous/variables.html":{}}}],["object.key",{"_index":1294,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["object.keys(executionvariables).foreach((key",{"_index":1330,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["object.password",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.token",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["objectkey",{"_index":1271,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["observ",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{}}}],["of(result",{"_index":623,"title":{},"body":{"injectables/ExternalService.html":{}}}],["oncreatedirect",{"_index":116,"title":{"directives/OnCreateDirective.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["oncustomev",{"_index":1273,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["oncustomevent(ev",{"_index":1282,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["oninit",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["oninit(girdst",{"_index":955,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onlogin",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["onlogout",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["onres",{"_index":945,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onresize(item",{"_index":958,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onsameurlnavig",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsubmit",{"_index":1143,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["onsubmit(submiss",{"_index":1149,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["opac",{"_index":1195,"title":{},"body":{"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["open",{"_index":757,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["openassigne",{"_index":1496,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["openfilt",{"_index":811,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["openfilters.length",{"_index":853,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["oper",{"_index":589,"title":{},"body":{"injectables/ExternalService.html":{}}}],["option",{"_index":41,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["options'},{'nam",{"_index":82,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.compon",{"_index":841,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/SharedModule.html":{},"components/TaskGridComponent.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":750,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.scss",{"_index":749,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.t",{"_index":747,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["options.component.ts:17",{"_index":753,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:18",{"_index":762,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{}}}],["options.component.ts:19",{"_index":761,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:20",{"_index":758,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:21",{"_index":760,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:22",{"_index":759,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{}}}],["options.component.ts:25",{"_index":1591,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["options.component.ts:29",{"_index":754,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{}}}],["options.component.ts:32",{"_index":1221,"title":{},"body":{"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:36",{"_index":755,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:39",{"_index":1220,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:45",{"_index":756,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:48",{"_index":1218,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options/filt",{"_index":746,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["options/sort",{"_index":1215,"title":{},"body":{"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["options/us",{"_index":840,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/SharedModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["origin",{"_index":1432,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["orqueri",{"_index":635,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["osx",{"_index":1050,"title":{},"body":{"components/GridsterComponent.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["outermarginbottom",{"_index":1006,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermarginleft",{"_index":1007,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermarginright",{"_index":1005,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermargintop",{"_index":1004,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outlin",{"_index":1559,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["output",{"_index":1126,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["overflow",{"_index":343,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["overlay",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["overridden",{"_index":517,"title":{},"body":{"classes/EnvService.html":{}}}],["overview",{"_index":1702,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrit",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["owner",{"_index":680,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["p",{"_index":352,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["packag",{"_index":1653,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":307,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["page",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"components/TaskGridComponent.html":{}}}],["pages",{"_index":1376,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["pane",{"_index":886,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["panel",{"_index":941,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["paramet",{"_index":37,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["parseint(left[sorting.nam",{"_index":1457,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["parseint(right[sorting.nam",{"_index":1458,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["parsestr",{"_index":1345,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["parsestring(xml.bpmn20xml",{"_index":1347,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["password",{"_index":286,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["path",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["pathmatch",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":1402,"title":{},"body":{"components/TaskGridComponent.html":{},"miscellaneous/variables.html":{}}}],["performsearch",{"_index":1381,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["performsearch(valu",{"_index":1400,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["ph",{"_index":1549,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["picker",{"_index":1541,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["pleas",{"_index":1371,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["pointer",{"_index":1194,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["popov",{"_index":59,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"components/UserOptionsComponent.html":{}}}],["popover.pres",{"_index":62,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskGridComponent.html":{}}}],["popovercontrol",{"_index":34,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"components/UserOptionsComponent.html":{}}}],["popoverctrl",{"_index":26,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"components/UserOptionsComponent.html":{}}}],["popovermenu",{"_index":1216,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["posit",{"_index":933,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["post",{"_index":573,"title":{},"body":{"injectables/ExternalService.html":{}}}],["present",{"_index":1415,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["presentfilt",{"_index":814,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["presentload",{"_index":1274,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["primari",{"_index":1521,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["prioriti",{"_index":663,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskItemComponent.html":{}}}],["prioritymax",{"_index":667,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["prioritymin",{"_index":665,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["privat",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["process",{"_index":30,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["process(ev",{"_index":42,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{}}}],["processdefinit",{"_index":1130,"title":{"classes/ProcessDefinition.html":{}},"body":{"classes/ProcessDefinition.html":{},"components/ProcessListComponent.html":{},"coverage.html":{}}}],["processdefinition.nam",{"_index":1192,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["processdefinitionid",{"_index":1148,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{}}}],["processformcompon",{"_index":100,"title":{"components/ProcessFormComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["processlistcompon",{"_index":53,"title":{"components/ProcessListComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["product",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiledata",{"_index":302,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["promis",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":24,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["provid",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["push",{"_index":797,"title":{},"body":{"injectables/FilterService.html":{}}}],["pushitem",{"_index":1038,"title":{},"body":{"components/GridsterComponent.html":{}}}],["pushresizeitem",{"_index":1041,"title":{},"body":{"components/GridsterComponent.html":{}}}],["put",{"_index":574,"title":{},"body":{"injectables/ExternalService.html":{}}}],["queri",{"_index":584,"title":{},"body":{"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["radiu",{"_index":310,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["read",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonli",{"_index":1291,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["reassign",{"_index":1404,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["redirect",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":539,"title":{},"body":{"injectables/EventsService.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["refreshfiltersannounc",{"_index":526,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshfilterssourc",{"_index":527,"title":{},"body":{"injectables/EventsService.html":{}}}],["rel",{"_index":934,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["reload",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remot",{"_index":601,"title":{},"body":{"injectables/ExternalService.html":{}}}],["remov",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["req",{"_index":438,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["req.url.includes(urls[i",{"_index":460,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["request",{"_index":10,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["request.clon",{"_index":456,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["require('xml2js').parsestr",{"_index":1346,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"components/TaskGridComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["resiz",{"_index":1028,"title":{},"body":{"components/GridsterComponent.html":{}}}],["resourc",{"_index":1147,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["resource.length",{"_index":1366,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["resource[0].valu",{"_index":1367,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["resourceid",{"_index":1281,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["resourcenam",{"_index":1290,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["resourcetyp",{"_index":679,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["responsetyp",{"_index":598,"title":{},"body":{"injectables/ExternalService.html":{}}}],["rest.servic",{"_index":289,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["rest.service.t",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["result",{"_index":119,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result['bpmn:definitions']['bpmn:process'][0]['bpmn:usertask'].filter(item",{"_index":1349,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["result['messag",{"_index":619,"title":{},"body":{"injectables/ExternalService.html":{}}}],["result['statu",{"_index":616,"title":{},"body":{"injectables/ExternalService.html":{}}}],["result['typ",{"_index":621,"title":{},"body":{"injectables/ExternalService.html":{}}}],["return",{"_index":45,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["returnobj",{"_index":789,"title":{},"body":{"injectables/FilterService.html":{}}}],["rgb",{"_index":1537,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rgb),0.15",{"_index":1558,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rgba(0",{"_index":1064,"title":{},"body":{"components/GridsterComponent.html":{}}}],["rgba(var",{"_index":1535,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["right",{"_index":316,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["right.gettim",{"_index":1455,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["root",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}}}],["root'},{'nam",{"_index":71,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["round",{"_index":306,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["rout",{"_index":210,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"index.html":{},"routes.html":{}}}],["router",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{}}}],["routereusestrategi",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["routermodul",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["routermodule.forchild(rout",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["routermodule.forroot(rout",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":483,"title":{},"body":{"modules/CoreModule.html":{}}}],["routing.module.t",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":965,"title":{},"body":{"components/GridsterComponent.html":{}}}],["rtl",{"_index":982,"title":{},"body":{"components/GridsterComponent.html":{}}}],["run",{"_index":614,"title":{},"body":{"injectables/ExternalService.html":{}}}],["rxj",{"_index":447,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"dependencies.html":{}}}],["rxjs/observ",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ExternalService.html":{}}}],["rxjs/observable/of",{"_index":596,"title":{},"body":{"injectables/ExternalService.html":{}}}],["s",{"_index":1029,"title":{},"body":{"components/GridsterComponent.html":{}}}],["save",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"components/FilterModalComponent.html":{},"components/LanguageComponent.html":{}}}],["savefilt",{"_index":637,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["screen",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["scroll",{"_index":872,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["scrolltonewitem",{"_index":1045,"title":{},"body":{"components/GridsterComponent.html":{}}}],["se",{"_index":1033,"title":{},"body":{"components/GridsterComponent.html":{}}}],["search",{"_index":1382,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["search(ev",{"_index":1406,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["searchbar",{"_index":320,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["section",{"_index":740,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["select",{"_index":312,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["send",{"_index":600,"title":{},"body":{"injectables/ExternalService.html":{}}}],["servic",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{}}}],["services/camunda",{"_index":487,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/env.servic",{"_index":448,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["services/env.service.provid",{"_index":485,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/events.servic",{"_index":486,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/external.servic",{"_index":488,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":742,"title":{},"body":{"components/FilterModalComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessFormComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["setfilt",{"_index":1383,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["setfilter(filterid",{"_index":1408,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sethead",{"_index":457,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["setlanguag",{"_index":1091,"title":{},"body":{"components/LanguageComponent.html":{}}}],["setlanguage(lang",{"_index":1093,"title":{},"body":{"components/LanguageComponent.html":{}}}],["setsort",{"_index":1217,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["setsorting(dir",{"_index":1219,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["settimeout",{"_index":1482,"title":{},"body":{"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["setus",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(object",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["shade",{"_index":870,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["shadow",{"_index":323,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["share",{"_index":1201,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/components/us",{"_index":839,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["shared/shared.modul",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/TasksModule.html":{}}}],["sharedmodul",{"_index":369,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["showbackdrop",{"_index":770,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["side.collaps",{"_index":898,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["sidebar",{"_index":808,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["size",{"_index":336,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["smooth",{"_index":1051,"title":{},"body":{"components/GridsterComponent.html":{}}}],["solid",{"_index":318,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["sort",{"_index":103,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["sortarray",{"_index":1384,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sortarray(sort",{"_index":1411,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sorting.direct",{"_index":1224,"title":{},"body":{"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{}}}],["sorting.nam",{"_index":1226,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["sorting.typ",{"_index":1446,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sortingannounc",{"_index":528,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortingsourc",{"_index":529,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortopt",{"_index":1385,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sortoptions(ev",{"_index":1413,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["sortoptionscompon",{"_index":102,"title":{"components/SortOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{}}}],["space",{"_index":354,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["spinner",{"_index":1262,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["splashscreen",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["split",{"_index":895,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["src/.../auth.service.t",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.t",{"_index":1701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../env.service.provider.t",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.service.t",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/auth",{"_index":249,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"coverage.html":{}}}],["src/app/core/cor",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/core/core.module.t",{"_index":465,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/directives/on",{"_index":1123,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.t",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:12",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:23",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interceptors/bas",{"_index":419,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["src/app/core/schemas/processdefinition.t",{"_index":1131,"title":{},"body":{"classes/ProcessDefinition.html":{},"coverage.html":{}}}],["src/app/core/schemas/processdefinition.ts:2",{"_index":1132,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/processdefinition.ts:3",{"_index":1134,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/processdefinition.ts:4",{"_index":1133,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/task.t",{"_index":1227,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/core/schemas/task.ts:2",{"_index":1228,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/schemas/task.ts:3",{"_index":1230,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/schemas/task.ts:4",{"_index":1229,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/services/auth.service.t",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:20",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/camunda",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["src/app/core/services/env.service.provider.t",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/env.service.t",{"_index":507,"title":{},"body":{"classes/EnvService.html":{},"coverage.html":{}}}],["src/app/core/services/env.service.ts:10",{"_index":515,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/env.service.ts:11",{"_index":514,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/env.service.ts:12",{"_index":513,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/events.service.t",{"_index":520,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/app/core/services/events.service.ts:13",{"_index":549,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:14",{"_index":555,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:15",{"_index":552,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:16",{"_index":558,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:18",{"_index":547,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:19",{"_index":554,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:20",{"_index":551,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:21",{"_index":557,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:29",{"_index":538,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:37",{"_index":535,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:45",{"_index":542,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:53",{"_index":545,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/external.service.t",{"_index":565,"title":{},"body":{"injectables/ExternalService.html":{},"coverage.html":{}}}],["src/app/core/services/external.service.ts:14",{"_index":581,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:29",{"_index":583,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:34",{"_index":588,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:56",{"_index":593,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/filter.service.t",{"_index":776,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/filter.service.ts:12",{"_index":783,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:14",{"_index":792,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:22",{"_index":794,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:26",{"_index":785,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:35",{"_index":790,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:50",{"_index":787,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/form/components/form/form.component.t",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["src/app/form/components/formio/formio.component.t",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["src/app/form/form.module.t",{"_index":906,"title":{},"body":{"modules/FormModule.html":{}}}],["src/app/shared/components/header/header.component.t",{"_index":1082,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:10",{"_index":1086,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:11",{"_index":1087,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/languag",{"_index":1106,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/language/language.component.t",{"_index":1088,"title":{},"body":{"components/LanguageComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/language/language.component.ts:18",{"_index":1100,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:21",{"_index":1092,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:22",{"_index":1101,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:31",{"_index":1094,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/notif",{"_index":1119,"title":{},"body":{"components/NotificationsButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/us",{"_index":1590,"title":{},"body":{"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1200,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tasks/components/add",{"_index":9,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/filt",{"_index":625,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/grid/grid.component.t",{"_index":915,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:14",{"_index":920,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:15",{"_index":923,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:16",{"_index":925,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:17",{"_index":924,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:26",{"_index":921,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.t",{"_index":936,"title":{},"body":{"components/GridsterComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:18",{"_index":963,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:19",{"_index":968,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:24",{"_index":953,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:26",{"_index":959,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:28",{"_index":956,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:32",{"_index":947,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:34",{"_index":960,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:35",{"_index":961,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:38",{"_index":970,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:39",{"_index":969,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:44",{"_index":948,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:50",{"_index":950,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:61",{"_index":954,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/process",{"_index":1135,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/sort",{"_index":1214,"title":{},"body":{"components/SortOptionsComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/task",{"_index":1231,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.t",{"_index":1560,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.ts:14",{"_index":1563,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.module.t",{"_index":1568,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1139,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["startform",{"_index":1142,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["startform.key.split",{"_index":1172,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["startprocess",{"_index":1176,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["startprocess(processdefinitionid",{"_index":1179,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["state",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":944,"title":{},"body":{"components/GridsterComponent.html":{}}}],["statu",{"_index":1506,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["statusbar",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["step",{"_index":1057,"title":{},"body":{"components/GridsterComponent.html":{}}}],["stop",{"_index":1395,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["storag",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["storage_key",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageservic",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["storageservicemodul",{"_index":482,"title":{},"body":{"modules/CoreModule.html":{}}}],["storeonlocalstorag",{"_index":781,"title":{},"body":{"injectables/FilterService.html":{}}}],["storeonlocalstorage(griditem",{"_index":791,"title":{},"body":{"injectables/FilterService.html":{}}}],["stream",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":437,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"classes/Task.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["styleurl",{"_index":19,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["submiss",{"_index":1155,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["submission._fvid",{"_index":1168,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["submission._id",{"_index":1165,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["submissionid",{"_index":1154,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["submit",{"_index":274,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["subscrib",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["subscribe((filt",{"_index":850,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["subscribe((ident",{"_index":297,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["subscribe((processdefinit",{"_index":1190,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["subscribe(data",{"_index":1471,"title":{},"body":{"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["subscribe(executionvari",{"_index":1358,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["subscribe(filt",{"_index":858,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["subscribe(inst",{"_index":1162,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["subscribe(task",{"_index":1341,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["success",{"_index":1536,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["support",{"_index":1705,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1706,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":1035,"title":{},"body":{"components/GridsterComponent.html":{}}}],["swap",{"_index":1037,"title":{},"body":{"components/GridsterComponent.html":{}}}],["switch",{"_index":715,"title":{},"body":{"components/FilterModalComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["switch'},{'nam",{"_index":97,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["switch.compon",{"_index":1208,"title":{},"body":{"modules/SharedModule.html":{}}}],["switch.component.html",{"_index":1110,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.scss",{"_index":1109,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.t",{"_index":1108,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:14",{"_index":1111,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:16",{"_index":1116,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:17",{"_index":1115,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:26",{"_index":1113,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch/languag",{"_index":1107,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["t",{"_index":587,"title":{},"body":{"injectables/ExternalService.html":{}}}],["tabl",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":105,"title":{"classes/Task.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["task.assigne",{"_index":1530,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.creat",{"_index":1526,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.descript",{"_index":1525,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.du",{"_index":1527,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.nam",{"_index":1524,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskassigne",{"_index":1470,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["taskdefinit",{"_index":1348,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["taskdefinition[0].$['camunda:formkey",{"_index":1353,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["taskdetailscompon",{"_index":104,"title":{"components/TaskDetailsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskeditcompon",{"_index":107,"title":{"components/TaskEditComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskgridcompon",{"_index":109,"title":{"components/TaskGridComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskgroup",{"_index":636,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["taskid",{"_index":1307,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["taskitemcompon",{"_index":110,"title":{"components/TaskItemComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskorigin",{"_index":1403,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["tasks'},{'nam",{"_index":113,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["tasks.compon",{"_index":1586,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.component.html",{"_index":1562,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1561,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.length",{"_index":1342,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["tasks/tasks.module#tasksmodul",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tasks[0",{"_index":1343,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["taskscompon",{"_index":112,"title":{"components/TasksComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["tasksmodul",{"_index":1564,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["tasksorigin",{"_index":1377,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["temp",{"_index":701,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{}}}],["temp.length",{"_index":805,"title":{},"body":{"injectables/FilterService.html":{}}}],["temp['valu",{"_index":702,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["text",{"_index":356,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["textsearch",{"_index":1416,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.allcriterias.filter(item",{"_index":707,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.allcriterias.foreach(el",{"_index":699,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.auth.getus",{"_index":453,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.auth.getuser().usernam",{"_index":693,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.auth.isloggednin",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.logout",{"_index":1592,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["this.auth.onlogin.subscrib",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.onlogout.subscrib",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authserivce.setuser(this.us",{"_index":303,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservic",{"_index":1355,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.createfilter(filter).subscribe((data",{"_index":860,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.createfilter(this.filter).subscrib",{"_index":737,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.camundaservice.deletefilter(this.id).subscrib",{"_index":767,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["this.camundaservice.getexecutionvariables(this.task.executionid).subscribe(executionvari",{"_index":1329,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.getfilt",{"_index":849,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.getfilter(this.navparams.data.filterid).subscribe(filt",{"_index":695,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.camundaservice.getfiltercount(filter.id).subscribe(data",{"_index":843,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.gethistorytask",{"_index":1339,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.getident",{"_index":294,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.getprocessdefinit",{"_index":1188,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["this.camundaservice.getprocessdefinitionxml(this.task.processdefinitionid).subscribe(xml",{"_index":1344,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.gettask(this.route.snapshot.params.taskid).subscribe((task",{"_index":1320,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.getuserprofile(this.user.username).subscribe((profiledata",{"_index":300,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.listfilter(this.filt",{"_index":1472,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.camundaservice.listhistori",{"_index":1464,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.camundaservice.postassigntask(this.task.id",{"_index":1303,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.camundaservice.postcompletetask(this.task.id",{"_index":1304,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.postuserlogin(this.user).subscribe((authobj",{"_index":290,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.processdefinitionsubmitform(this.route.snapshot.params['processdefinitionid",{"_index":1161,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.processinstancestartform(this.route.snapshot.params['processdefinitionid']).subscribe(startform",{"_index":1170,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.updateexecutionvariables(instance.id",{"_index":1163,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.updateexecutionvariables(this.task.executionid",{"_index":1313,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.camundaservice.updatefilter(this.filter['id",{"_index":733,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.changedopt",{"_index":987,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.clos",{"_index":768,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{}}}],["this.criterias.filter(item1",{"_index":710,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.criterias.foreach(el",{"_index":723,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.criterias.push(temp",{"_index":703,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.dismissload",{"_index":1337,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.env.engineapiurl",{"_index":442,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.env.engineresturl",{"_index":443,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.event.announcefilt",{"_index":847,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.event.announcefiltersrefresh",{"_index":735,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.event.announceitem(item",{"_index":1514,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.event.filterannounced$.subscribe((data",{"_index":1485,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.event.itemchange$.subscribe(data",{"_index":1254,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.event.refreshfiltersannounced$.subscrib",{"_index":848,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.event.sortingannounced$.subscribe(sort",{"_index":1476,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.events.announcefiltersrefresh",{"_index":1309,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.events.announceitem",{"_index":1306,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.eventsservice.announcesorting(sort",{"_index":1225,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["this.fetchtasks().then((data",{"_index":1473,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.fetchtasks(tru",{"_index":1488,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.filt",{"_index":696,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.filter).subscrib",{"_index":734,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.hasownproperty('id",{"_index":732,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.own",{"_index":692,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query.orqueri",{"_index":698,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query['orqueri",{"_index":730,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query[element.key",{"_index":700,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.textsearch",{"_index":1435,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.filters.filter((item",{"_index":852,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.filters.length",{"_index":851,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.filtersource.asobserv",{"_index":546,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.filtersource.next(filt",{"_index":562,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.fixdom(data",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fixdom(data.translations.dir",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fixpanelsdirection(data",{"_index":989,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.fixpanelsdirection(lang.translations.dir",{"_index":991,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.form.formkey",{"_index":1325,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.readonli",{"_index":1354,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.resourceid",{"_index":1334,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.resourcenam",{"_index":1327,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.vers",{"_index":1359,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.version[key.replace('v_",{"_index":1332,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.form.version[variable.name.replace('v_",{"_index":1362,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.getus",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.request(method",{"_index":597,"title":{},"body":{"injectables/ExternalService.html":{}}}],["this.id",{"_index":764,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.input.nativeelement.focu",{"_index":1513,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.isfilteropen(griditem",{"_index":800,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.itemsource.asobserv",{"_index":550,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.itemsource.next(item",{"_index":563,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.load",{"_index":1315,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.loading.dismiss",{"_index":1318,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.loading.pres",{"_index":1317,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.loadingcontroller.cr",{"_index":1316,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.log(`${oper",{"_index":610,"title":{},"body":{"injectables/ExternalService.html":{}}}],["this.loginerror",{"_index":293,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.modal.dismiss",{"_index":736,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.modalcontroller.cr",{"_index":769,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["this.navparams.data.filterid",{"_index":694,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.navparams.data.id",{"_index":765,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.oncreatedirective.emit('dummi",{"_index":1129,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["this.oninit",{"_index":998,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.onlogin.emit(object",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onlogout.emit",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onres",{"_index":1000,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.openfilt",{"_index":846,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.opt",{"_index":980,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.options.api.optionschang",{"_index":981,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.orqueri",{"_index":697,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.hasownproperty('assigne",{"_index":706,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.length",{"_index":704,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.push",{"_index":717,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.pages",{"_index":1468,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.panels.details.col",{"_index":984,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.details.fullscreen",{"_index":1250,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.panels.details.open",{"_index":996,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["this.panels.details.x",{"_index":985,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.tasks.col",{"_index":986,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.tasks.x",{"_index":983,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.performsearch",{"_index":1436,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.performsearch(this.filter.textsearch",{"_index":1434,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.popover.dismiss",{"_index":1104,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.popoverctrl.cr",{"_index":61,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.popoverctrl.dismiss",{"_index":766,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.presentloading().then",{"_index":1319,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.processdefinit",{"_index":1191,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["this.refreshfilterssource.asobserv",{"_index":553,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.refreshfilterssource.next(data",{"_index":561,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.route.firstchild",{"_index":994,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.route.firstchild.snapshot.params['taskid",{"_index":995,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.route.snapshot.params.taskid",{"_index":1340,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":992,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['auth/login",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['task",{"_index":1169,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["this.router.navigate([`/tasks/new/${processdefinitionid",{"_index":1187,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["this.setfilter(data.item.id",{"_index":1487,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.sortarray(sort",{"_index":1477,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.sortings[this.sort",{"_index":1223,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["this.sortingsource.asobserv",{"_index":556,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.sortingsource.next(sort",{"_index":564,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.startform",{"_index":1171,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.startform[0",{"_index":1167,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.startform[1",{"_index":1164,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.storage.get(storage_key",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{}}}],["this.storage.remove(storage_key",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set('languag",{"_index":1103,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.storage.set(storage_key",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{}}}],["this.task",{"_index":1255,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{}}}],["this.task.assigne",{"_index":1302,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.task.executionid",{"_index":1321,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.task.formkey",{"_index":1314,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.task.formkey.split",{"_index":1324,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.task.id",{"_index":1308,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.task.taskdefinitionkey",{"_index":1351,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["this.taskgroup",{"_index":705,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.tasks.length",{"_index":1466,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.tasks.sort(funct",{"_index":1447,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.tasksorigin",{"_index":1463,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.tasksorigin.filter(funct",{"_index":1437,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.tasksorigin.filter(item",{"_index":1479,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.tasksorigin.splice(this.tasksorigin.indexof(item",{"_index":1483,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["this.togglefilt",{"_index":856,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.togglefilter(openfilters[0",{"_index":854,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.togglefilter(this.filters[0",{"_index":857,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.translate.get('dir').subscribe((data",{"_index":988,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.translate.onlangchange.subscribe((data",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.onlangchange.subscribe(lang",{"_index":990,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.translate.setdefaultlang('en",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":1102,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.use(this.storage.get('languag",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.urlmatches(this.url",{"_index":455,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.user.usernam",{"_index":296,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.user['group",{"_index":298,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.user['profil",{"_index":301,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["timer",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["titl",{"_index":1085,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["todo",{"_index":599,"title":{},"body":{"injectables/ExternalService.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["toggl",{"_index":1243,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["togglefilt",{"_index":815,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["togglefilter(item",{"_index":828,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["togglefullscreen",{"_index":1236,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["toolbar",{"_index":305,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TasksComponent.html":{}}}],["toolkit",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":325,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["top:0px",{"_index":1081,"title":{},"body":{"components/GridsterComponent.html":{}}}],["top:calc(100",{"_index":1077,"title":{},"body":{"components/GridsterComponent.html":{}}}],["transform",{"_index":608,"title":{},"body":{"injectables/ExternalService.html":{},"components/GridsterComponent.html":{}}}],["transit",{"_index":347,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["transition:pad",{"_index":1554,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["translat",{"_index":27,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["translate.currentlang",{"_index":1118,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["translate/cor",{"_index":52,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":480,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["translate3d(0px",{"_index":1072,"title":{},"body":{"components/GridsterComponent.html":{}}}],["translatehttpload",{"_index":479,"title":{},"body":{"modules/CoreModule.html":{}}}],["translatehttploader(http",{"_index":491,"title":{},"body":{"modules/CoreModule.html":{}}}],["translateload",{"_index":477,"title":{},"body":{"modules/CoreModule.html":{}}}],["translatemodul",{"_index":478,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{}}}],["translateservic",{"_index":33,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{}}}],["transpar",{"_index":1056,"title":{},"body":{"components/GridsterComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["tri",{"_index":1299,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["true",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1246,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":1322,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["updat",{"_index":651,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["updateallstorag",{"_index":782,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateallstorage(griditem",{"_index":793,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatequeri",{"_index":638,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatequery(ev",{"_index":652,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatetyp",{"_index":639,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatetype(ev",{"_index":657,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["url",{"_index":425,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/ExternalService.html":{},"components/ProcessListComponent.html":{}}}],["urlmatch",{"_index":427,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["urlmatches(url",{"_index":436,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["urls.length",{"_index":459,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["us",{"_index":743,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["useclass",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["usefactori",{"_index":504,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":115,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["user.nam",{"_index":1528,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["userid",{"_index":295,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{}}}],["usernam",{"_index":285,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["useropt",{"_index":816,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["useroptions(ev",{"_index":830,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["useroptionscompon",{"_index":114,"title":{"components/UserOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["util",{"_index":568,"title":{},"body":{"injectables/ExternalService.html":{}}}],["v_",{"_index":1166,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["valu",{"_index":282,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["valuea",{"_index":1459,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["valueb",{"_index":1461,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["variabl",{"_index":1152,"title":{"miscellaneous/variables.html":{}},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variable.nam",{"_index":1365,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["variable.name.indexof('v_",{"_index":1361,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["variable.valu",{"_index":1363,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["version",{"_index":1153,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["vertic",{"_index":1545,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["view",{"_index":1422,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["viewchild",{"_index":1433,"title":{},"body":{"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["viewchild('trigg",{"_index":1510,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["viewchild(infinitescrol",{"_index":1420,"title":{},"body":{"components/TaskGridComponent.html":{}}}],["visibl",{"_index":1080,"title":{},"body":{"components/GridsterComponent.html":{}}}],["visible>.split",{"_index":897,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["void",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["w",{"_index":1032,"title":{},"body":{"components/GridsterComponent.html":{}}}],["warn",{"_index":1519,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["way",{"_index":1252,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["webkit",{"_index":346,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["webstorag",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"dependencies.html":{}}}],["weight",{"_index":882,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["white",{"_index":353,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["width",{"_index":261,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["width:100",{"_index":266,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["width:1550px",{"_index":927,"title":{},"body":{"components/GridComponent.html":{}}}],["width:641px",{"_index":1049,"title":{},"body":{"components/GridsterComponent.html":{}}}],["width:740px",{"_index":928,"title":{},"body":{"components/GridComponent.html":{}}}],["window",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.location.href",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["window.settimeout(funct",{"_index":977,"title":{},"body":{"components/GridsterComponent.html":{}}}],["window['__env'][key",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1075,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"components/TaskItemComponent.html":{}}}],["word",{"_index":879,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["workaround",{"_index":1241,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["wrap",{"_index":880,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["x",{"_index":877,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TasksComponent.html":{}}}],["y",{"_index":878,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TasksComponent.html":{}}}],["ye",{"_index":590,"title":{},"body":{"injectables/ExternalService.html":{}}}],["zone.j",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"components/TaskDetailsComponent.html":{},"components/TaskGridComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddRequestButtonComponent.html":{"url":"components/AddRequestButtonComponent.html","title":"component - AddRequestButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddRequestButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/add-request-button/add-request-button.component.ts\n\n\n    \n        Description\n    \n    \n        Add Request Button\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-request-button\n            \n\n            \n                styleUrls\n                ./add-request-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-request-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProcessListComponent } from '../process-list/process-list.component';\n\n/**\n * Add Request Button\n */\n@Component({\n    selector: 'app-add-request-button',\n    templateUrl: './add-request-button.component.html',\n    styleUrls: ['./add-request-button.component.scss']\n})\nexport class AddRequestButtonComponent {\n    constructor(\n        public translate: TranslateService,\n        public popoverCtrl: PopoverController\n    ) {\n\n    }\n    async process(event) {\n        const popover = await this.popoverCtrl.create({\n            component: ProcessListComponent,\n            event: event\n        });\n        return await popover.present();\n    }\n}\n\n    \n\n    \n        {{'Add\n    Request' | translate}}\n    \n\n    \n\n    \n                \n                    ./add-request-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'Add    Request\\' | translate}}    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddRequestButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main App Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fixDom\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventsService, auth: AuthService, router: Router, translate: TranslateService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixDom\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixDom(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Fix Dom Direction - localization\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            ngOnInit:\nSubscribe to Language Change event and Fix The Dom Dir Attribute\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\nimport { AuthService } from './core/services/auth.service';\nimport { EventsService } from './core/services/events.service';\n\n/**\n * Main App Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public eventService: EventsService,\n    public auth: AuthService,\n    private router: Router,\n    public translate: TranslateService,\n    @Inject(LOCAL_STORAGE) private storage: StorageService) {\n\n    this.translate.setDefaultLang('en');\n    this.translate.use(this.storage.get('language') || 'en');\n    this.auth.onLogin.subscribe(() => {\n      window.location.href = '/tasks';\n\n    });\n    this.auth.onLogout.subscribe(() => {\n      this.router.navigate(['/auth/login']);\n    });\n  }\n  /**\n   * Fix Dom Direction - localization\n   * @param dir\n   */\n  fixDom(dir) {\n    const columns = document.getElementsByClassName('formio-component-columns');\n    const choices = document.getElementsByClassName('choices');\n    const headers = document.getElementsByClassName('header');\n    for (let i = 0; i  {\n        choices[i].setAttribute('dir', dir);\n      }, 500);\n    }\n    for (let i = 0; i  {\n      this.fixDom(data);\n    });\n    this.translate.onLangChange.subscribe((data) => {\n      this.fixDom(data.translations.dir);\n    });\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Main Bootsrapping Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\n\nimport { CoreModule } from './core/core.module';\n/**\n * Main Bootsrapping Module\n */\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\n/**\n * App Main Routing Module\n */\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'tasks',\n    pathMatch: 'full'\n  },\n  { path: 'tasks', loadChildren: '../tasks/tasks.module#TasksModule', canActivate: [AuthGuard] },\n  {\n    path: 'auth',\n    loadChildren: '../auth/auth.module#AuthModule'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Auth Guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/guards/auth.guard.ts:23\n                            \n                        \n\n\n                \n                    \n                            return true if user is loggged in and false if not\n redirect to login page.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../services/auth.service';\n/**\n * Auth Guard\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService,\n    private router: Router) {\n  }\n\n  /**\n  * return true if user is loggged in and false if not\n   * redirect to login page.\n   * @param next\n   * @param state\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (this.auth.isLoggednIn()) {\n      return true;\n    } else {\n      this.router.navigate(['auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthIndexComponent.html":{"url":"components/AuthIndexComponent.html","title":"component - AuthIndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthIndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/auth-index/auth-index.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index-login\n            \n\n            \n                styleUrls\n                ./auth-index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/auth-index/auth-index.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-index-login',\n  templateUrl: './auth-index.component.html',\n  styleUrls: ['./auth-index.component.scss'],\n})\nexport class AuthIndexComponent  implements OnInit {\n\n  constructor(\n    public popoverCtrl: PopoverController,\n     public translate: TranslateService) {\n  }\n\n  ngOnInit() {\n\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./auth-index.component.scss\n                \n                .form-container{\n  width: 500px; \n  margin:50px auto;\n  max-width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthIndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLoginComponent.html":{"url":"components/AuthLoginComponent.html","title":"component - AuthLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/auth-login/auth-login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-login\n            \n\n            \n                styleUrls\n                ./auth-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSerivce\n                            \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                loginError\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(camundaService: CamundaRestService, authSerivce: AuthService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/auth-login/auth-login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSerivce\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authSerivce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authSerivce:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginError:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { username: '', password: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\n@Component({\n    selector: 'app-auth-login',\n    templateUrl: './auth-login.component.html',\n    styleUrls: ['./auth-login.component.scss'],\n})\nexport class AuthLoginComponent {\n    user = { username: '', password: '' };\n    loginError = false;\n    constructor(\n        public camundaService: CamundaRestService,\n        public authSerivce: AuthService,\n        public translate: TranslateService) {\n    }\n\n    submit() {\n        this.camundaService.postUserLogin(this.user).subscribe((authObj) => {\n            if (authObj.status !== 401) {\n                this.loginError = false;\n                this.camundaService.getIdentity({ userId: this.user.username }).subscribe((identity) => {\n                    this.user['groups'] = identity.groups;\n                    this.camundaService.getUserProfile(this.user.username).subscribe((profileData) => {\n                        this.user['profile'] = profileData;\n                        this.authSerivce.setUser(this.user);\n\n                    });\n                });\n            } else {\n                this.loginError = true;\n            }\n        });\n    }\n}\n\n    \n\n    \n         -->\n\n  \n    {{'Username or password is incorrect.' | translate}}\n  \n\n\n  \n\n\n  \n\n\n{{'Login' | translate}}\n\n\n    \n\n    \n                \n                    ./auth-login.component.scss\n                \n                .toolbar-round {\n    padding: 10px;\n    border-radius: 20px;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->      {{\\'Username or password is incorrect.\\' | translate}}      {{\\'Login\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthIndexComponent\n\nAuthIndexComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthIndexComponent->AuthModule\n\n\n\n\n\nAuthLoginComponent\n\nAuthLoginComponent\n\nAuthModule -->\n\nAuthLoginComponent->AuthModule\n\n\n\n\n\nFormioAuth\n\nFormioAuth\n\nAuthModule -->\n\nFormioAuth->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthIndexComponent\n                        \n                        \n                            AuthLoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormioAuth\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule, Routes } from '@angular/router';\nimport { IonicRouteStrategy } from '@ionic/angular';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAuth } from 'angular-formio/auth';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthIndexComponent } from './components/auth-index/auth-index.component';\nimport { AuthLoginComponent } from './components/auth-login/auth-login.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthIndexComponent,\n    children: [\n      { path: 'login', component: AuthLoginComponent }\n    ]\n  }\n];\n@NgModule({\n  imports: [\n    FormioModule,\n    FormioAuth,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [AuthLoginComponent, AuthIndexComponent],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Auth Service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onLogin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isLoggednIn\n                            \n                            \n                                logout\n                            \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Get User Object from LocalStorage\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggednIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggednIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Return true if user object is not null\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Remove LocalStorage user object\nEmit onLogout Event\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Save user Object to localStorage\nEmit onLogin Event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                user Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onLogin:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onLogout:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Inject, Injectable } from '@angular/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\nconst STORAGE_KEY = 'LoggedInUser';\n/**\n * Auth Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  onLogin: EventEmitter = new EventEmitter();\n  onLogout: EventEmitter = new EventEmitter();\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\n  /**\n   * Save user Object to localStorage\n   * Emit onLogin Event\n   * @param object user Object\n\n   */\n  setUser(object) {\n    object.token = btoa(object.username + ':' + object.password);\n    this.storage.set(STORAGE_KEY, object);\n    this.onLogin.emit(object);\n  }\n  /**\n   * Get User Object from LocalStorage\n   */\n  getUser() {\n    return this.storage.get(STORAGE_KEY);\n  }\n  /**\n   * Return true if user object is not null\n   */\n  isLoggednIn() {\n    return this.getUser() !== null;\n  }\n  /**\n   * Remove LocalStorage user object\n   * Emit onLogout Event\n   */\n  logout() {\n    this.storage.remove(STORAGE_KEY);\n    this.onLogout.emit({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BasicAuthInterceptor.html":{"url":"interceptors/BasicAuthInterceptor.html","title":"interceptor - BasicAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  BasicAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/basic-auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                HTTP Request Interceptor to add Basic Authorization Headers to Camunda Request\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                urls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                urlMatches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, env: EnvService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/basic-auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    EnvService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Intercept HTTP Request and Add Auth Headers if URL Matches Camunda Engine URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlMatches(urls: string[], req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Return True if requested URL is in array urls\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urls:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.env.engineApiUrl, this.env.engineRestUrl]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { EnvService } from '../services/env.service';\n/**\n * HTTP Request Interceptor to add Basic Authorization Headers to Camunda Request\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    urls = [this.env.engineApiUrl, this.env.engineRestUrl];\n    constructor(public auth: AuthService, private env: EnvService) { }\n    /**\n     *\n     * @param request\n     * @param next\n     * Intercept HTTP Request and Add Auth Headers if URL Matches Camunda Engine URL\n     */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add authorization header with basic auth credentials if available\n        const currentUser = this.auth.getUser();\n        if (currentUser && currentUser.token && this.urlMatches(this.urls, request)) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Basic ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n\n    /**\n     *\n     * @param urls\n     * @param req\n     * Return True if requested URL is in array urls\n     */\n    urlMatches(urls: string[], req: HttpRequest): boolean {\n        for (let i = 0; i !== urls.length; i++) {\n            if (req.url.includes(urls[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nCamundaRestService\n\nCamundaRestService\n\nCoreModule -->\n\nCamundaRestService->CoreModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nCoreModule -->\n\nEventsService->CoreModule\n\n\n\n\n\nExternalService\n\nExternalService\n\nCoreModule -->\n\nExternalService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            App Core Module - Essential Modules, Providers and services\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CamundaRestService\n                        \n                        \n                            EventsService\n                        \n                        \n                            ExternalService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { AppRoutingModule } from './core-routing.module';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthService } from './services/auth.service';\nimport { EnvServiceProvider } from './services/env.service.provider';\nimport { EventsService } from './services/events.service';\nimport { CamundaRestService } from './services/camunda-rest.service';\nimport { ExternalService } from './services/external.service';\n\n\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/**\n * App Core Module - Essential Modules, Providers and services\n */\n@NgModule({\n  imports: [\n    StorageServiceModule,\n    HttpClientModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    NoopAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      backButtonText: '',\n      menuType: 'overlay',\n      backButtonIcon: 'ios-arrow-back'\n    }),\n    AppRoutingModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n\n  ],\n  providers: [\n    EnvServiceProvider,\n    AuthService,\n    AuthGuard,\n    EventsService,\n    CamundaRestService,\n    ExternalService,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  exports: [\n    IonicModule,\n    RouterModule\n  ],\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvService.html":{"url":"classes/EnvService.html","title":"class - EnvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/env.service.ts\n        \n\n            \n                Description\n            \n            \n                Eniroment Service Class - Formio & Camunda Config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                engineApiUrl\n                            \n                            \n                                    Public\n                                engineRestUrl\n                            \n                            \n                                    Public\n                                formioAppUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/env.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            engineApiUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        engineApiUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            engineRestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        engineRestUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formioAppUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAppUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnvService {\n\n    // The values that are defined here are the default values that can\n    // be overridden by env.js\n\n    // API url\n    public engineRestUrl = '';\n    public engineApiUrl = '';\n    public formioAppUrl = '';\n\n\n    constructor() {\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                Events Service - Distribute Events among App\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterAnnounced$\n                            \n                            \n                                    Private\n                                filterSource\n                            \n                            \n                                itemChange$\n                            \n                            \n                                    Private\n                                itemSource\n                            \n                            \n                                refreshFiltersAnnounced$\n                            \n                            \n                                    Private\n                                refreshFiltersSource\n                            \n                            \n                                sortingAnnounced$\n                            \n                            \n                                    Private\n                                sortingSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                announceFilter\n                            \n                            \n                                announceFiltersRefresh\n                            \n                            \n                                announceItem\n                            \n                            \n                                announceSorting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceFilter(filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Announce Filter Event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceFiltersRefresh\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceFiltersRefresh(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Announce a filters Refresh Event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Announce Task Item Action\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceSorting\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceSorting(sorting)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Announce Task Sorting Change\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sorting\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.filterSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemChange$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemChange$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.itemSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            itemSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFiltersAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshFiltersAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.refreshFiltersSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshFiltersSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshFiltersSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortingAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortingAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.sortingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortingSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortingSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Events Service - Distribute Events among App\n */\n@Injectable()\n\n\nexport class EventsService {\n\n  // Observable string sources\n  private filterSource = new BehaviorSubject({});\n  private refreshFiltersSource = new BehaviorSubject({});\n  private itemSource = new BehaviorSubject({});\n  private sortingSource = new BehaviorSubject({});\n\n  filterAnnounced$ = this.filterSource.asObservable();\n  refreshFiltersAnnounced$ = this.refreshFiltersSource.asObservable();\n  itemChange$ = this.itemSource.asObservable();\n  sortingAnnounced$ = this.sortingSource.asObservable();\n\n  // Service message commands\n\n  /**\n   * Announce a filters Refresh Event\n   * @param data\n   */\n  announceFiltersRefresh(data: string) {\n    this.refreshFiltersSource.next(data);\n  }\n\n  /**\n   * Announce Filter Event\n   * @param filter\n   */\n  announceFilter(filter) {\n    this.filterSource.next(filter);\n  }\n\n  /**\n   * Announce Task Item Action\n   * @param item\n   */\n  announceItem(item) {\n    this.itemSource.next(item);\n  }\n\n  /**\n   * Announce Task Sorting Change\n   * @param sorting\n   */\n  announceSorting(sorting) {\n    this.sortingSource.next(sorting);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExternalService.html":{"url":"injectables/ExternalService.html","title":"injectable - ExternalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExternalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/external.service.ts\n        \n\n            \n                Description\n            \n            \n                External API Service Integration - utilizes Angular HttpClient Request Function\nto Create a generic Api Call Service for any kind of request - Get, Post, Put, Delete etc..\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiCall\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/external.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiCall\n                            \n                            \n                        \n                    \n                \n                \n                    \napiCall(method, url, params: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Returns Observable of http request\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Request Method\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Request URL\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                Query Params if GET and Body if Other.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:34\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Log a HeroService message with the MessageService \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\n\n/**\n * External API Service Integration - utilizes Angular HttpClient Request Function\n * to Create a generic Api Call Service for any kind of request - Get, Post, Put, Delete etc..\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalService {\n\n\n  constructor(private http: HttpClient) {\n\n  }\n  /**\n   * Returns Observable of http request\n   * @param method\n   *  Request Method\n   * @param url\n   *  Request URL\n   * @param params\n   *  Query Params if GET and Body if Other.\n   */\n  apiCall(method, url, params = {}) {\n    return this.http.request(method, url, { responseType: 'json', body: params });\n\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      result['status'] = error.status;\n      if (error.error.hasOwnProperty('message')) {\n        result['message'] = error.error.message;\n        result['type'] = error.error.type;\n\n      }\n\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterModalComponent.html":{"url":"components/FilterModalComponent.html","title":"component - FilterModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filter-modal/filter-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Filter Modal - add - edit Filter\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-modal\n            \n\n            \n                styleUrls\n                ./filter-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allCriterias\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                criterias\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                orQueries\n                            \n                            \n                                taskGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveFilter\n                            \n                            \n                                updateQuery\n                            \n                            \n                                updateType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, modal: ModalController, navParams: NavParams, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            ngOnInit: Fill filter objects, orQueries & Criterias array if filterId was provided\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:146\n                            \n                        \n\n\n                \n                    \n                            Correct Date Type value format to fit with java format and then Create New or update Filter.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateQuery(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            On Task Collection Dropdown value change update orQueries\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ionChange Event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateType\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateType(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allCriterias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allCriterias:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'active', name: 'Active', type: 'boolean' },\n    { key: 'name', name: 'Name', type: 'string' },\n    { key: 'nameLike', name: 'Name Like', type: 'string' },\n    { key: 'description', name: 'Description', type: 'string' },\n    { key: 'descriptionLike', name: 'Description Like', type: 'string' },\n    { key: 'priority', name: 'Priority', type: 'number' },\n    { key: 'priorityMin', name: 'Priority Min', type: 'number' },\n    { key: 'priorityMax', name: 'Priority Max', type: 'number' },\n    { key: 'createdBefore', name: 'Created Before', type: 'date' },\n    { key: 'createdAfter', name: 'Created After', type: 'date' },\n    { key: 'dueBefore', name: 'Due Before', type: 'date' },\n    { key: 'dueAfter', name: 'Due After', type: 'date' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:19\n                            \n                        \n\n                \n                    \n                        All criterias to fill dropdown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criterias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        criterias:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:36\n                            \n                        \n\n                \n                    \n                        Currently edited criterias array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    resourceType: 'Task',\n    name: '',\n    owner: '',\n    query: {\n      orQueries: []\n    },\n    properties: {\n      color: '',\n      description: '',\n      priority: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:53\n                            \n                        \n\n                \n                    \n                        Filter Object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modal:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orQueries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orQueries:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:40\n                            \n                        \n\n                \n                    \n                        Filter orQueries Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskGroup:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:48\n                            \n                        \n\n                \n                    \n                        Task Collection Enum\n 1: My Tasks\n 2: Group Tasks\n 3: My & Group Tasks\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport * as _moment from 'moment';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n/**\n * Filter Modal - add - edit Filter\n */\n@Component({\n  selector: 'app-filter-modal',\n  templateUrl: './filter-modal.component.html',\n  styleUrls: ['./filter-modal.component.scss']\n})\nexport class FilterModalComponent implements OnInit {\n  /**\n   * All criterias to fill dropdown\n   */\n  allCriterias = [\n    { key: 'active', name: 'Active', type: 'boolean' },\n    { key: 'name', name: 'Name', type: 'string' },\n    { key: 'nameLike', name: 'Name Like', type: 'string' },\n    { key: 'description', name: 'Description', type: 'string' },\n    { key: 'descriptionLike', name: 'Description Like', type: 'string' },\n    { key: 'priority', name: 'Priority', type: 'number' },\n    { key: 'priorityMin', name: 'Priority Min', type: 'number' },\n    { key: 'priorityMax', name: 'Priority Max', type: 'number' },\n    { key: 'createdBefore', name: 'Created Before', type: 'date' },\n    { key: 'createdAfter', name: 'Created After', type: 'date' },\n    { key: 'dueBefore', name: 'Due Before', type: 'date' },\n    { key: 'dueAfter', name: 'Due After', type: 'date' },\n  ];\n  /**\n   * Currently edited criterias array\n   */\n  criterias = [];\n  /**\n   * Filter orQueries Array\n   */\n  orQueries = [];\n\n  /**\n   *Task Collection Enum\n   * 1: My Tasks\n   * 2: Group Tasks\n   * 3: My & Group Tasks\n   */\n  taskGroup = 1;\n\n  /**\n   * Filter Object\n   */\n  filter = {\n    resourceType: 'Task',\n    name: '',\n    owner: '',\n    query: {\n      orQueries: []\n    },\n    properties: {\n      color: '',\n      description: '',\n      priority: ''\n    }\n  };\n  constructor(public auth: AuthService, public modal: ModalController, public navParams: NavParams,\n    public camundaService: CamundaRestService, public event: EventsService) {\n\n  }\n\n  /**\n   * ngOnInit: Fill filter objects, orQueries & Criterias array if filterId was provided\n   */\n\n  ngOnInit() {\n    this.filter.owner = this.auth.getUser().username;\n    if (this.navParams.data.filterId) {\n      this.camundaService.getFilter(this.navParams.data.filterId).subscribe(filter => {\n        this.filter = filter;\n        this.orQueries = this.filter.query.orQueries;\n        this.allCriterias.forEach(element => {\n          if (this.filter.query[element.key]) {\n            const temp = element;\n            temp['value'] = this.filter.query[element.key];\n            this.criterias.push(temp);\n          }\n        });\n        if (this.orQueries.length > 1) {\n          this.taskGroup = 3;\n        } else if (this.orQueries.hasOwnProperty('assignee')) {\n          this.taskGroup = 1;\n        } else {\n          this.taskGroup = 2;\n        }\n      });\n    }\n  }\n\n  updateType(event) {\n    this.allCriterias.filter(item => {\n      if (item.key === event.detail.value) {\n        this.criterias.filter(item1 => {\n          if (item1.key === event.detail.value) {\n            item1.type = item.type;\n            item1.value = item1.type === 'boolean' ? true : '';\n          }\n        });\n      }\n    });\n\n  }\n\n  /**\n   * On Task Collection Dropdown value change update orQueries\n   * @param event\n   *  ionChange Event\n   */\n  updateQuery(event) {\n    switch (event.detail.value) {\n      case '1':\n        this.orQueries = [];\n        this.orQueries.push({\n          assignee: this.auth.getUser().username\n        });\n        break;\n      case '2':\n        this.orQueries = [];\n        this.orQueries.push({\n          candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n        });\n        break;\n      case '3':\n        this.orQueries = [];\n        this.orQueries.push({\n          assignee: this.auth.getUser().username,\n          candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n        });\n        break;\n    }\n  }\n\n  /**\n   * Correct Date Type value format to fit with java format and then Create New or update Filter.\n   */\n\n  saveFilter() {\n    this.criterias.forEach(element => {\n      if (element.key.length > 0) {\n        this.filter.query[element.key] =\n          element.type === 'date' ? _moment(element.value).format('YYYY-MM-DDTHH:mm:ss.SSSZZ') : element.value;\n      }\n    });\n    this.filter.query['orQueries'] = this.orQueries;\n    console.log(this.filter);\n    if (this.filter.hasOwnProperty('id')) {\n      this.camundaService.updateFilter(this.filter['id'], this.filter).subscribe(() => {\n        this.event.announceFiltersRefresh('');\n        this.modal.dismiss();\n      });\n    } else {\n      this.camundaService.createFilter(this.filter).subscribe(() => {\n        this.event.announceFiltersRefresh('');\n        this.modal.dismiss();\n      });\n    }\n\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{filter.name ? filter.name : 'Add Filter' | translate}}\n  \n\n\n  \n    \n      \n        \n          {{'Name' | translate}}\n          \n        \n      \n      \n        \n          {{'Priority' | translate}}\n          \n        \n      \n    \n    \n      \n        \n          {{'Description' | translate }}\n          \n        \n      \n    \n    \n      \n        \n          {{'Tasks Collection' | translate }}\n          \n            {{'My Tasks' | translate}}\n            {{'Group Tasks' | translate}}\n            {{'My & Group Tasks' | translate}} \n          \n        \n      \n    \n    \n      \n        \n          {{'Filter Criteria' | translate}}\n          \n            \n              {{'Add Criterion' | translate}}\n              \n            \n          \n        \n\n\n        \n          \n            \n               0\">\n                {{'This section is aimed to set the parameters used to filter the tasks' | translate}}\n              \n            \n          \n          \n            \n              \n                \n              \n            \n            \n              \n                {{'Criterion' | translate}}\n                \n                  {{criterion.name |\n                    translate}}\n                \n              \n            \n            \n              \n                {{'Value' | translate}}\n                \n                \n                \n                \n                \n                \n              \n            \n\n          \n\n\n        \n      \n    \n  \n\n\n  \n    \n      \n        {{'Cancel' | translate}}\n      \n      \n        {{'Save' | translate}}\n      \n\n    \n  \n\n    \n\n    \n                \n                    ./filter-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.name ? filter.name : \\'Add Filter\\' | translate}}                                {{\\'Name\\' | translate}}                                                {{\\'Priority\\' | translate}}                                                        {{\\'Description\\' | translate }}                                                        {{\\'Tasks Collection\\' | translate }}                      {{\\'My Tasks\\' | translate}}            {{\\'Group Tasks\\' | translate}}            {{\\'My & Group Tasks\\' | translate}}                                                         {{\\'Filter Criteria\\' | translate}}                                    {{\\'Add Criterion\\' | translate}}                                                                                         0\">                {{\\'This section is aimed to set the parameters used to filter the tasks\\' | translate}}                                                                                                                                                            {{\\'Criterion\\' | translate}}                                  {{criterion.name |                    translate}}                                                                                    {{\\'Value\\' | translate}}                                                                                                                                                                            {{\\'Cancel\\' | translate}}                    {{\\'Save\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterOptionsComponent.html":{"url":"components/FilterOptionsComponent.html","title":"component - FilterOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filter-options/filter-options.component.ts\n\n\n    \n        Description\n    \n    \n        Filter Options Menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-options\n            \n\n            \n                styleUrls\n                ./filter-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, navParams: NavParams, camundaService: CamundaRestService, modalController: ModalController, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filter-options/filter-options.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Close Popover\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Delete Filter\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        edit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Open Filter Modal\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalController:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams, PopoverController } from '@ionic/angular';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\n\n/**\n * Filter Options Menu\n */\n\n@Component({\n  selector: 'app-filter-options',\n  templateUrl: './filter-options.component.html',\n  styleUrls: ['./filter-options.component.scss']\n})\nexport class FilterOptionsComponent {\n  id = '';\n  constructor(public popoverCtrl: PopoverController,\n    public navParams: NavParams,\n    public camundaService: CamundaRestService,\n    public modalController: ModalController,\n    public event: EventsService) {\n    this.id = this.navParams.data.id;\n\n  }\n  /**\n   * Close Popover\n   */\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n\n  /**\n   * Delete Filter\n   */\n  delete() {\n    this.camundaService.deleteFilter(this.id).subscribe(() => {\n      this.event.announceFiltersRefresh('');\n    });\n    this.close();\n  }\n  /**\n   * Open Filter Modal\n   */\n  async edit() {\n    const modal = await this.modalController.create({\n      component: FilterModalComponent,\n      showBackdrop: true,\n      backdropDismiss: true,\n      animated: true,\n      componentProps: { filterId: this.id }\n    });\n    this.close();\n    return await modal.present();\n  }\n\n}\n\n    \n\n    \n        \n  Edit\n  Delete\n\n    \n\n    \n                \n                    ./filter-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit  Delete'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteFromLocalStorage\n                            \n                            \n                                    Public\n                                getFromLocalStorage\n                            \n                            \n                                    Public\n                                isFilterOpen\n                            \n                            \n                                    Public\n                                storeOnLocalStorage\n                            \n                            \n                                    Public\n                                updateAllStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/filter.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteFromLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteFromLocalStorage(gridItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromLocalStorage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFilterOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFilterOpen(filter, returnObj)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        returnObj\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storeOnLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storeOnLocalStorage(gridItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateAllStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateAllStorage(gridItems)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItems\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filtersList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\n\nconst STORAGE_KEY = 'local_filters';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FilterService {\n\n  filtersList = [];\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\n  public storeOnLocalStorage(gridItem): void {\n    // get array of filters from local storage\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    // push new task to array\n    currentFilterList.push(gridItem);\n    // insert updated array to local storage\n    this.storage.set(STORAGE_KEY, currentFilterList);\n  }\n  public updateAllStorage(gridItems): void {\n    // get array of filters from local storage\n    this.storage.set(STORAGE_KEY, gridItems);\n  }\n  public deleteFromLocalStorage(gridItem): void {\n    // get array of filters from local storage\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    const temp = this.isFilterOpen(gridItem, true);\n    if (temp) {\n      currentFilterList.splice(currentFilterList.indexOf(temp), 1);\n    } this.storage.set(STORAGE_KEY, currentFilterList);\n    // insert updated array to local storage\n  }\n  public isFilterOpen(filter, returnObj = false) {\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    if (currentFilterList.tasks.filters) {\n      const temp = currentFilterList.tasks.filters.filter(function (item) {\n        return item.id === filter.id;\n      });\n      if (returnObj) {\n        return temp.length > 0 ? temp : false;\n      } else {\n        return temp.length > 0;\n      }\n    } else {\n      return false;\n    }\n  }\n  public getFromLocalStorage() {\n    return this.storage.get(STORAGE_KEY) || false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersMenuComponent.html":{"url":"components/FiltersMenuComponent.html","title":"component - FiltersMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filters-menu/filters-menu.component.ts\n\n\n    \n        Description\n    \n    \n        Filters Sidebar Menu Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters-menu\n            \n\n            \n                styleUrls\n                ./filters-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                filters\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                openFilter\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                filterOptions\n                            \n                            \n                                getFilterCount\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentFilter\n                            \n                            \n                                toggleFilter\n                            \n                            \n                                    Async\n                                userOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, event: EventsService, camundaService: CamundaRestService, translate: TranslateService, modalController: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            filterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterOptions(event, filterId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Open Filter Options Popover.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Click Event\n\n                                                        \n                                                \n                                                \n                                                        filterId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Filter Id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilterCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFilterCount(filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Get Filter Task Count\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Filter Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            NgOnIntit: Subscribe to refresh filters event\nGet All Filters.\nCreate Default filter if no filters exist.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Open New Filters Modal\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilter(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Announce Open Filter Event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Filter Item\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userOptions(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Open User Options Popover.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Click Even\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filters:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalController:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openFilter:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { UserOptionsComponent } from '../../../shared/components/user-options/user-options.component';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\nimport { FilterOptionsComponent } from '../filter-options/filter-options.component';\n\n/**\n * Filters Sidebar Menu Component\n */\n@Component({\n  selector: 'app-filters-menu',\n  templateUrl: './filters-menu.component.html',\n  styleUrls: ['./filters-menu.component.scss'],\n})\n\n\n\nexport class FiltersMenuComponent implements OnInit {\n\n\n  filters = [];\n  openFilter = '';\n\n  constructor(\n    public popoverCtrl: PopoverController,\n    public event: EventsService,\n    private camundaService: CamundaRestService,\n    public translate: TranslateService,\n    public modalController: ModalController,\n    public auth: AuthService) {\n  }\n\n\n\n  /**\n   * Open User Options Popover.\n   * @param event\n   * Click Even\n   */\n  async userOptions(event) {\n    event.stopPropagation();\n    const popover = await this.popoverCtrl.create({\n      component: UserOptionsComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n\n  /**\n   * Open Filter Options Popover.\n   * @param event\n   *  Click Event\n   * @param filterId\n   *  Filter Id\n   */\n  async filterOptions(event, filterId) {\n    event.stopPropagation();\n    const popover = await this.popoverCtrl.create({\n      component: FilterOptionsComponent,\n      event: event,\n      componentProps: { id: filterId }\n    });\n    return await popover.present();\n  }\n\n  /**\n   * Open New Filters Modal\n   */\n  async presentFilter() {\n    const modal = await this.modalController.create({\n      component: FilterModalComponent,\n      showBackdrop: true,\n      backdropDismiss: true,\n      animated: true\n    });\n    return await modal.present();\n  }\n\n  /**\n   * Get Filter Task Count\n   * @param filter\n   *  Filter Object\n   */\n  getFilterCount(filter) {\n    this.camundaService.getFilterCount(filter.id).subscribe(data => {\n      filter.count = data.count;\n    });\n  }\n\n  /**\n   * Announce Open Filter Event\n   * @param item\n   *  Filter Item\n   */\n  toggleFilter(item) {\n    this.openFilter = item.id;\n    this.event.announceFilter({ item: item });\n  }\n\n  /**\n   * NgOnIntit: Subscribe to refresh filters event\n   * Get All Filters.\n   * Create Default filter if no filters exist.\n   */\n  ngOnInit() {\n    this.event.refreshFiltersAnnounced$.subscribe(() => {\n      this.camundaService.getFilters({ owner: this.auth.getUser().username }).subscribe((filters) => {\n        this.filters = filters;\n        if (this.filters.length > 0) {\n          const openFilters = this.filters.filter((item) => item.id === this.openFilter);\n          if (openFilters.length > 0) {\n            this.toggleFilter(openFilters[0]);\n\n          } else if (this.openFilter === 'history') {\n            this.toggleFilter({ id: 'history' });\n          } else {\n            this.toggleFilter(this.filters[0]);\n\n          }\n        }\n      });\n    });\n\n    this.camundaService.getFilters({ owner: this.auth.getUser().username }).subscribe(filters => {\n      this.filters = filters;\n      if (filters.length === 0) {\n        const filter = {\n          resourceType: 'Task',\n          name: 'All Tasks',\n          owner: this.auth.getUser().username,\n          query: {\n            orQueries: [\n              {\n                assignee: this.auth.getUser().username,\n                candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n              }\n            ]\n          },\n          properties: {\n            color: '',\n            description: '',\n            priority: ''\n          }\n        };\n        this.camundaService.createFilter(filter).subscribe((data) => {\n          this.event.announceFiltersRefresh('');\n        });\n      }\n    });\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{\"Add Filter\" | translate}}\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n    {{auth.getUser()?.profile.firstName}} {{auth.getUser()?.profile.lastName}}\n    {{group.name}} \n  \n  \n\n  \n    \n      \n        \n          \n            {{filter.name}}\n            {{filter.count}}\n          \n        \n\n      \n\n      \n        \n          \n        \n      \n\n    \n    \n      \n        \n          \n            {{'Completed Tasks' | translate}}\n          \n        \n\n      \n    \n\n  \n\n    \n\n    \n                \n                    ./filters-menu.component.scss\n                \n                  ion-content{\n    height:100vh;\n  }\n  .toolbar-round {\n    padding: 0px;\n    border-radius: 20px;\n  }\n\n  app-grid {\n    width: 100%;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n    margin-top: -4px;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  ion-note {\n    font-size: 12px;\n    color: var(--ion-color-dark-shade);\n  }\n\n  .details-item {\n    transition: 0.5s;\n    box-shadow: none;\n    border: 1px solid #eee;\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n  .inner-scroll {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .inner-content {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .forecast_container {\n    overflow-x: scroll !important;\n    overflow-y: hidden;\n    word-wrap: break-word;\n    height: auto;\n    font-size: 0.8em;\n    font-weight: 300;\n  }\n\n  @media (min-width: 1140px) {\n    .tasks-pane {\n      min-height: 100%;\n      transition: 0.5s;\n      width: 400px !important;\n      max-width: 400px !important;\n      border-right: 1px solid var(--ion-color-light-shade);\n      &:last-child:not(.full-pane) {\n        width: calc(100% - 400px) !important;\n        max-width: calc(100% - 400px) !important;\n        border-right: 0px;\n        &.collapse-pane {\n          max-width: 49px !important;\n          min-width: auto !important;\n          ion-grid {\n            display: none !important;\n          }\n          ion-list {\n            display: none !important;\n          }\n        }\n      }\n    }\n    .collapse-pane {\n      max-width: 49px !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n      ion-list {\n        display: none !important;\n      }\n    }\n    .full-pane {\n      max-width: calc(100% - 49px) !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n    }\n  }\n\n  .split-pane-md.split-pane-visible>.split-pane-side.collapse-pane,\n  ion-col.collapse-pane {\n    transition: 0.5s;\n    max-width: 49px !important;\n    min-width: auto !important;\n    ion-grid {\n      display: none !important;\n    }\n  }\n\n  ion-scroll {\n    max-height: 100% !important;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\"Add Filter\" | translate}}                                        {{auth.getUser()?.profile.firstName}} {{auth.getUser()?.profile.lastName}}    {{group.name}}                                               {{filter.name}}            {{filter.count}}                                                                                                          {{\\'Completed Tasks\\' | translate}}                              '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\n\nAppFormioComponent\n\nAppFormioComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nAppFormioComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nAppFormioComponent \n\nAppFormioComponent \n\nAppFormioComponent  -->\n\nFormModule->AppFormioComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nFormioResource\n\nFormioResource\n\nFormModule -->\n\nFormioResource->FormModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFormModule -->\n\nSharedModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/form/form.module.ts\n        \n\n\n        \n            Description\n        \n        \n            FormioModule imported where needed\nAppFormioComponent & FormComponent are exported\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppFormioComponent\n                        \n                        \n                            FormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormioResource\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppFormioComponent\n                        \n                        \n                            FormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAuthService } from 'angular-formio/auth';\nimport { FormioResource, FormioResources } from 'angular-formio/resource';\nimport { FormioAppConfigProvider, formioAuthConfigProvider } from '../core/services/env.service.provider';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormComponent } from './components/form/form.component';\nimport { AppFormioComponent } from './components/formio/formio.component';\n/**\n * FormioModule imported where needed\n * AppFormioComponent & FormComponent are exported\n */\n@NgModule({\n  imports: [SharedModule, FormioModule, FormioResource],\n  declarations: [AppFormioComponent, FormComponent],\n\n  exports: [\n     AppFormioComponent, FormComponent\n  ],\n  providers: [\n\n    FormioResources,\n    FormioAuthService,\n    formioAuthConfigProvider,\n    FormioAppConfigProvider\n  ]\n})\n\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/grid/grid.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks Dashlet Grid\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid\n            \n\n            \n                styleUrls\n                ./grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/grid/grid.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Open Process Definitions popover menu.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Click Event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EventsService } from '../../../core/services/events.service';\nimport { ProcessListComponent } from '../../components/process-list/process-list.component';\n/**\n * Tasks Dashlet Grid\n */\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent {\n  constructor(public event: EventsService,\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n  /**\n   * Open Process Definitions popover menu.\n   * @param event\n   *  Click Event\n   */\n  async process(event) {\n    const popover = await this.popoverCtrl.create({\n      component: ProcessListComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n  \n  \n  {{'Tasks' | translate}}\n    \n      \n       -->\n      \n    \n  \n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./grid.component.scss\n                \n                \n@media (max-width:1550px) {\n    .padding {\n      padding: 20px !important;\n    }\n  }\n  \n  @media (max-width:740px) {\n    .padding {\n      padding: 0px !important;\n    }\n  }\n  \n  .padding {\n    padding: 40px 100px 80px 100px;\n    overflow: hidden;\n    display: block;\n    position: relative;\n    width: 100%; \n    height: calc(100% - 60px);\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{\\'Tasks\\' | translate}}                 -->                    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridsterComponent.html":{"url":"components/GridsterComponent.html","title":"component - GridsterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridsterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/gridster/gridster.component.ts\n\n\n    \n        Description\n    \n    \n        Gridster Grid\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gridster\n            \n\n            \n                styleUrls\n                ./gridster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gridster.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                filterStorage\n                            \n                            \n                                options\n                            \n                            \n                                panels\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changedOptions\n                            \n                            \n                                fixPanelsDirection\n                            \n                            \n                                    Static\n                                itemChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, filterStorage: FilterService, router: Router, route: ActivatedRoute, translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/gridster/gridster.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterStorage\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changedOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangedOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixPanelsDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixPanelsDirection(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            itemChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        itemChange(item, itemComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemComponent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonInit(girdster)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        girdster\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResize(item, itemComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemComponent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterStorage:     FilterService\n\n                    \n                \n                    \n                        \n                            Type :     FilterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     GridsterConfig\n\n                    \n                \n                    \n                        \n                            Type :     GridsterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        panels:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    tasks: { x: 0, y: 0, cols: 2, rows: 4, filters: [] },\n    details: { x: 2, y: 0, cols: 4, rows: 4, fullscreen: false, open: false },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CompactType, DisplayGrid, GridsterConfig, GridType } from 'angular-gridster2';\nimport { EventsService } from '../../../core/services/events.service';\nimport { FilterService } from '../../../core/services/filter.service';\n\n/**\n * Gridster Grid\n */\n@Component({\n  selector: 'app-gridster',\n  templateUrl: './gridster.component.html',\n  styleUrls: ['./gridster.component.scss'],\n})\nexport class GridsterComponent implements OnInit {\n  options: GridsterConfig;\n  panels = {\n    tasks: { x: 0, y: 0, cols: 2, rows: 4, filters: [] },\n    details: { x: 2, y: 0, cols: 4, rows: 4, fullscreen: false, open: false },\n  };\n\n  static itemChange(item, itemComponent) {\n  }\n  onResize(item, itemComponent) {\n  }\n  onInit(girdster) {\n    window.setTimeout(function () {\n      girdster.options.api.resize();\n    }, 2000);\n  }\n\n  constructor(public event: EventsService,\n    public filterStorage: FilterService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n\n  changedOptions() {\n    if (this.options) {\n      this.options.api.optionsChanged();\n    }\n  }\n\n  fixPanelsDirection(dir) {\n    if (dir === 'rtl') {\n      this.panels.tasks.x = this.panels.details.cols;\n      this.panels.details.x = 0;\n    } else {\n      this.panels.details.x = this.panels.tasks.cols;\n      this.panels.tasks.x = 0;\n    }\n\n    this.changedOptions();\n  }\n  ngOnInit() {\n    this.translate.get('dir').subscribe((data) => {\n      this.fixPanelsDirection(data);\n    });\n    this.translate.onLangChange.subscribe(lang => {\n      this.fixPanelsDirection(lang.translations.dir);\n    });\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (this.route.firstChild && this.route.firstChild.snapshot.params['taskId']) {\n          this.panels.details.open = true;\n        } else {\n          this.panels.details.open = false;\n\n        }\n      }\n    });\n\n    this.options = {\n      initCallback: this.onInit,\n      itemResizeCallback: this.onResize,\n      gridType: GridType.Fit,\n      compactType: CompactType.CompactUpAndLeft,\n      margin: 10,\n      outerMarginTop: 0,\n      outerMarginRight: 0,\n      outerMarginBottom: 0,\n      outerMarginLeft: 0,\n      keepFixedHeightInMobile: false,\n      keepFixedWidthInMobile: false,\n      mobileBreakpoint: 740,\n      maxCols: 6,\n      maxRows: 4,\n      maxItemCols: 4,\n      minItemCols: 2,\n      maxItemRows: 4,\n      minItemRows: 4,\n      maxItemArea: 2500,\n      minItemArea: 1,\n      draggable: {\n        enabled: true,\n        ignoreContent: true,\n        dragHandleClass: 'move-handle'\n      },\n      resizable: {\n        enabled: true,\n        handles: { s: false, e: true, n: false, w: true, se: false, ne: false, sw: false, nw: false }\n      },\n      swap: true,\n      pushItems: true,\n      disablePushOnDrag: false,\n      disablePushOnResize: false,\n      pushResizeItems: true,\n      displayGrid: DisplayGrid.None,\n      disableWindowResize: false,\n      disableWarnings: false,\n      scrollToNewItems: false\n    };\n    this.panels.details.open = false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./gridster.component.scss\n                \n                gridster {\n  background: #fff;\n}\n\n@media(max-width:641px) {\n  gridster-item {\n    width: 100%;\n  }\n}\n\n.grid-col {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n  overflow: hidden;\n  --ion-color-base: var(--ion-item-background, transparent);\n  --ion-color-contrast: var(--ion-text-color-step-150, #262626);\n  border-radius: 2px;\n  width: calc(100% - 0px);\n  font-family: var(--ion-font-family, inherit);\n  font-size: 14px;\n  /* box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); */\n  background: #fff;\n  border: 1px solid #e2e2e2;\n}\n\n.grid-col.fullscreen {\n  transform: translate3d(0px, 0px, 0px) !important;\n  width: 100% !important;\n  margin-right: 0px !important;\n  position: relative !important;\n}\n\n.grid-col:hover,\n.grid-col:focus-within {\n  border: 1px solid #e2e2e2;\n}\n\ngridster.mobile {\n  .details-col {\n    position: fixed;\n    top:calc(100% + 55px);\n    transition: 0.5s;\n    left:0px;\n  }\n  .details-col-visible{\n    top:0px;\n    &.fullscreen{\n      position: fixed !important;\n    }\n  }\n\n  gridster-item {\n    height: calc(100% - 60px) !important;  \n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridsterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n    @Input() title;\n    constructor(public translate: TranslateService) {\n\n    }\n}\n\n    \n\n    \n        \n    \n\n\n{{title | translate}}\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageComponent.html":{"url":"components/LanguageComponent.html","title":"component - LanguageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LanguageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language/language.component.ts\n\n\n    \n        Description\n    \n    \n        Language Popover Menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language\n            \n\n            \n                styleUrls\n                ./language.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./language.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languages\n                            \n                            \n                                    Public\n                                popover\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popover: PopoverController, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language/language.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popover\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLanguage(lang)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Set Choosen Language and save it to LocalStorage\nclose popover\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Language Code\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        languages:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'ar', lang: 'عربي' },\n    { key: 'en', lang: 'English' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:18\n                            \n                        \n\n                \n                    \n                        Available Languages Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popover:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\n\n/**\n * Language Popover Menu\n */\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.scss']\n})\nexport class LanguageComponent {\n  /**\n   * Available Languages Array\n   */\n  languages = [\n    { key: 'ar', lang: 'عربي' },\n    { key: 'en', lang: 'English' }\n  ];\n  constructor(public translate: TranslateService, public popover: PopoverController,\n    @Inject(LOCAL_STORAGE) private storage: StorageService) { }\n\n  /**\n   * Set Choosen Language and save it to LocalStorage\n   * close popover\n   * @param lang\n   *  Language Code\n   */\n  setLanguage(lang) {\n    this.translate.use(lang);\n    this.storage.set('language', lang);\n    this.popover.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  {{language.lang}}\n\n    \n\n    \n                \n                    ./language.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{language.lang}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitchComponent.html":{"url":"components/LanguageSwitchComponent.html","title":"component - LanguageSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switch/language-switch.component.ts\n\n\n    \n        Description\n    \n    \n        Language Button\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switch\n            \n\n            \n                styleUrls\n                ./language-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                languages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switch/language-switch.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languages(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Open Lnaguages Popover Menu\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Click Event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageComponent } from '../language/language.component';\n\n/**\n * Language Button\n */\n@Component({\n  selector: 'app-language-switch',\n  templateUrl: './language-switch.component.html',\n  styleUrls: ['./language-switch.component.scss']\n})\nexport class LanguageSwitchComponent {\n  constructor(\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n  /**\n   * Open Lnaguages Popover Menu\n   * @param event\n   *  Click Event\n   */\n  async languages(event) {\n    const popover = await this.popoverCtrl.create({\n      component: LanguageComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n\n}\n\n    \n\n    \n        \n    {{translate.currentLang}}\n    \n\n    \n\n    \n                \n                    ./language-switch.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{translate.currentLang}}    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsButtonComponent.html":{"url":"components/NotificationsButtonComponent.html","title":"component - NotificationsButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/notifications-button/notifications-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications-button\n            \n\n            \n                styleUrls\n                ./notifications-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/notifications-button/notifications-button.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-notifications-button',\n    templateUrl: './notifications-button.component.html',\n    styleUrls:  ['./notifications-button.component.scss']\n})\nexport class NotificationsButtonComponent {\n    constructor() {\n\n    }\n\n}\n\n    \n\n    \n        \n        11\n        \n    \n    \n\n    \n                \n                    ./notifications-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        11            '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnCreateDirective.html":{"url":"directives/OnCreateDirective.html","title":"directive - OnCreateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  OnCreateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/on-create.directive.ts\n        \n\n            \n                Description\n            \n            \n                Emit an event when Element is initilazed\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOnCreate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                OnCreateDirective\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/on-create.directive.ts:14\n                            \n                        \n\n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        OnCreateDirective\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/on-create.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/on-create.directive.ts:19\n                            \n                        \n\n\n                \n                    \n                            onInit Emit Event\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, OnInit, Output } from '@angular/core';\n\n/**\n * Emit an event when Element is initilazed\n */\n@Directive({\n  selector: '[appOnCreate]'\n})\n\n\n\nexport class OnCreateDirective implements OnInit {\n\n  @Output() OnCreateDirective: EventEmitter = new EventEmitter();\n  constructor() { }\n  /**\n   * onInit Emit Event\n   */\n  ngOnInit() {\n    this.OnCreateDirective.emit('dummy');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessDefinition.html":{"url":"classes/ProcessDefinition.html","title":"class - ProcessDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/schemas/ProcessDefinition.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessDefinition {\n    id: string;\n    name: string;\n    key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcessFormComponent.html":{"url":"components/ProcessFormComponent.html","title":"component - ProcessFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcessFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/process-form/process-form.component.ts\n\n\n    \n        Description\n    \n    \n        New Process Instance Form - Start Form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-process-form\n            \n\n            \n                styleUrls\n                ./process-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./process-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                startForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/process-form/process-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            ngOnInit: get process start form key & resource name by processDefinitionId\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(submission)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            On Form Submit start new process instance\nupdate execution variables\nset form version\nset submissionId\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        submission\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Submission Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startForm:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * New Process Instance Form - Start Form\n */\n@Component({\n  selector: 'app-process-form',\n  templateUrl: './process-form.component.html',\n  styleUrls: ['./process-form.component.scss']\n})\n\nexport class ProcessFormComponent implements OnInit {\n\n  startForm = {};\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public camundaService: CamundaRestService,\n    public event: EventsService\n  ) { }\n\n  /**\n   * On Form Submit start new process instance\n   * update execution variables\n   * set form version\n   * set submissionId\n   * @param submission\n   *  Submission Object\n   */\n\n  onSubmit(submission) {\n    console.log(submission);\n    this.camundaService.processDefinitionSubmitForm(this.route.snapshot.params['processDefinitionId'], {}).subscribe(instance => {\n      this.camundaService.updateExecutionVariables(instance.id, this.startForm[1],\n        { value: submission._id, type: 'String' }).subscribe(() => {\n          this.event.announceFiltersRefresh('');\n          this.camundaService.updateExecutionVariables(instance.id, 'v_' + this.startForm[0],\n            { value: submission._fvid, type: 'String' }).subscribe(() => {\n              this.router.navigate(['tasks']);\n            });\n        });\n    });\n  }\n\n  /**\n   * ngOnInit: get process start form key & resource name by processDefinitionId\n   */\n  ngOnInit() {\n    this.camundaService.processInstanceStartForm(this.route.snapshot.params['processDefinitionId']).subscribe(startForm => {\n      this.startForm = startForm.key.split(':');\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./process-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProcessFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcessListComponent.html":{"url":"components/ProcessListComponent.html","title":"component - ProcessListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcessListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/process-list/process-list.component.ts\n\n\n    \n        Description\n    \n    \n        Process Definitions List Popover Menu\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-process-list\n            \n\n            \n                styleUrls\n                ./process-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./process-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                processDefinitions\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                startProcess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(camundaService: CamundaRestService, router: Router, event: EventsService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/process-list/process-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            ngOnInit: Get Process Definitions\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startProcess\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartProcess(processDefinitionId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Navigate to New Process URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processDefinitionId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processDefinitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processDefinitions:     ProcessDefinition[]\n\n                    \n                \n                    \n                        \n                            Type :     ProcessDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { ProcessDefinition } from '../../../core/schemas/ProcessDefinition';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * Process Definitions List Popover Menu\n */\n@Component({\n  selector: 'app-process-list',\n  templateUrl: './process-list.component.html',\n  styleUrls: ['./process-list.component.scss']\n})\n\nexport class ProcessListComponent implements OnInit {\n\n  processDefinitions: ProcessDefinition[] = [];\n\n  constructor(public camundaService: CamundaRestService,\n    public router: Router,\n    public event: EventsService,\n    public popoverCtrl: PopoverController) { }\n\n  /**\n   * Navigate to New Process URL\n   * @param processDefinitionId\n   */\n  startProcess(processDefinitionId) {\n    this.router.navigate([`/tasks/new/${processDefinitionId}`]);\n    this.popoverCtrl.dismiss();\n\n  }\n\n  /**\n   * ngOnInit: Get Process Definitions\n   */\n  ngOnInit() {\n    this.camundaService.getProcessDefinitions({ latestVersion: true }).subscribe((processDefinitions) => {\n      this.processDefinitions = processDefinitions;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  {{processDefinition.name | translate}}\n\n    \n\n    \n                \n                    ./process-list.component.scss\n                \n                ion-item{\n    cursor: pointer;\n}\nion-item:hover{\n    opacity: 0.8;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{processDefinition.name | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProcessListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nSharedModule -->\n\nLanguageComponent->SharedModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nSharedModule -->\n\nLanguageSwitchComponent->SharedModule\n\n\n\n\n\nNotificationsButtonComponent\n\nNotificationsButtonComponent\n\nSharedModule -->\n\nNotificationsButtonComponent->SharedModule\n\n\n\n\n\nUserOptionsComponent\n\nUserOptionsComponent\n\nSharedModule -->\n\nUserOptionsComponent->SharedModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nLanguageComponent \n\nLanguageComponent \n\nLanguageComponent  -->\n\nSharedModule->LanguageComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nSharedModule->LanguageSwitchComponent \n\n\n\n\n\nNotificationsButtonComponent \n\nNotificationsButtonComponent \n\nNotificationsButtonComponent  -->\n\nSharedModule->NotificationsButtonComponent \n\n\n\n\n\nUserOptionsComponent \n\nUserOptionsComponent \n\nUserOptionsComponent  -->\n\nSharedModule->UserOptionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Shared Module\nimports and exports Shared Modules and declared components\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            LanguageComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                        \n                            NotificationsButtonComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LanguageComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            LanguageComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                        \n                            NotificationsButtonComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserOptionsComponent } from './components/user-options/user-options.component';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LanguageSwitchComponent } from './components/language-switch/language-switch.component';\nimport { LanguageComponent } from './components/language/language.component';\nimport { NotificationsButtonComponent } from './components/notifications-button/notifications-button.component';\nimport { FormsModule } from '@angular/forms';\n/**\n * Shared Module\n * imports and exports Shared Modules and declared components\n */\n@NgModule({\n  imports: [TranslateModule, IonicModule, CommonModule],\n  entryComponents: [LanguageComponent, UserOptionsComponent],\n  declarations: [UserOptionsComponent, HeaderComponent, LanguageSwitchComponent, LanguageComponent, NotificationsButtonComponent],\n\n  exports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    UserOptionsComponent,\n    HeaderComponent,\n    LanguageSwitchComponent,\n    LanguageComponent,\n    NotificationsButtonComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortOptionsComponent.html":{"url":"components/SortOptionsComponent.html","title":"component - SortOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SortOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/sort-options/sort-options.component.ts\n\n\n    \n        Description\n    \n    \n        Sorting Options Popovermenu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sort-options\n            \n\n            \n                styleUrls\n                ./sort-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventsService\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                sorting\n                            \n                            \n                                sortings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                setSorting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/sort-options/sort-options.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Close Sorting Options popover Menu.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSorting\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSorting(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Set Sorting Direction\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventsService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sorting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sorting:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:18\n                            \n                        \n\n                \n                    \n                        Selected Sorting Option Key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortings:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'name', type: 'text', direction: 1 },\n    { name: 'description', type: 'text', direction: 1 },\n    { name: 'assignee', type: 'text', direction: 1 },\n    { name: 'created', type: 'datetime', direction: 1 },\n    { name: 'due', type: 'datetime', direction: 1 },\n    { name: 'priority', type: 'number', direction: 1 }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:22\n                            \n                        \n\n                \n                    \n                        Sorting options array\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * Sorting Options Popovermenu\n */\n@Component({\n  selector: 'app-sort-options',\n  templateUrl: './sort-options.component.html',\n  styleUrls: ['./sort-options.component.scss']\n})\n\nexport class SortOptionsComponent {\n  /**\n   * Selected Sorting Option Key\n   */\n  sorting = 0;\n  /**\n   * Sorting options array\n   */\n  sortings = [\n    { name: 'name', type: 'text', direction: 1 },\n    { name: 'description', type: 'text', direction: 1 },\n    { name: 'assignee', type: 'text', direction: 1 },\n    { name: 'created', type: 'datetime', direction: 1 },\n    { name: 'due', type: 'datetime', direction: 1 },\n    { name: 'priority', type: 'number', direction: 1 }\n  ];\n  // TODO: Translate Sorting Options\n\n  constructor(public popoverCtrl: PopoverController, public eventsService: EventsService) {\n\n  }\n  /**\n   * Set Sorting Direction\n   * @param dir\n   */\n  setSorting(dir) {\n    const sorting = this.sortings[this.sorting];\n    sorting.direction = dir;\n    this.eventsService.announceSorting(sorting);\n    this.close();\n  }\n  /**\n   * Close Sorting Options popover Menu.\n   */\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n    \n        {{'Sort By' | translate }}\n        \n            {{sorting.name}}\n            \n        \n    \n    \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./sort-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'Sort By\\' | translate }}                    {{sorting.name}}                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'SortOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/schemas/Task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Task {\n    id: string;\n    name: string;\n    key: string;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailsComponent.html":{"url":"components/TaskDetailsComponent.html","title":"component - TaskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-details/task-details.component.ts\n\n\n    \n        Description\n    \n    \n        Task - Form Details Panel\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-details\n            \n\n            \n                styleUrls\n                ./task-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                panels\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-details/task-details.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        panels\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            ngOnInit: check if task or start form and switch to\nfullscreen if startForm - workaround\nsubscribe to ItemChange event to refresh content\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFullScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFullScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggle FUllscreen Mode\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * Task - Form Details Panel\n */\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit {\n  @Input() panels;\n  // tslint:disable-next-line:max-line-length\n  task;\n  constructor(\n    public event: EventsService,\n    public router: Router) { }\n\n  /**\n   * Toggle FUllscreen Mode\n   */\n  toggleFullScreen() {\n    this.panels.details.fullscreen = !this.panels.details.fullscreen;\n  }\n\n  /**\n   * ngOnInit: check if task or start form and switch to\n   * fullscreen if startForm - workaround\n   * subscribe to ItemChange event to refresh content\n   */\n\n  ngOnInit() {\n\n    // TODO: Find a better way to do this.\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (event.url.includes('new')) {\n          this.panels.details.fullscreen = true;\n          this.panels.details.open = true;\n        } else {\n          this.panels.details.fullscreen = false;\n\n        }\n      }\n    });\n    this.event.itemChange$.subscribe(data => {\n      this.task = data;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n  \n\n\n    \n      \n        \n          \n        \n      \n    \n\n\n    \n\n    \n                \n                    ./task-details.component.scss\n                \n                :host:hover,:host:focus-within {\n    ion-header {\n      ion-toolbar {\n        --opacity: 1;\n      }\n  \n      opacity: 1;\n    }\n  }\n  \n  \n  \n  ion-header {\n    opacity: 0.5;\n    transition: 0.3s;\n    ion-searchbar{\n      height:45px;\n    }\n    ion-toolbar {\n      --opacity: 0;\n      --min-height: 53px;\n  \n      ion-button {\n        --height: 23px;\n      }\n  \n      ion-title {\n        padding: 0 0px;\n        font-size: 16px;\n      }\n    }\n  }\n  \n  ion-spinner{\n    margin: 20% auto;\n    width: 100px;\n    display: block;\n    zoom: 2;\n  }\n  ion-content{\n    height: calc(100% - 50px);\n  }\n  .notifications {\n    min-width: 22px;\n}\n  .toolbar-container {}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditComponent.html":{"url":"components/TaskEditComponent.html","title":"component - TaskEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-edit/task-edit.component.ts\n\n\n    \n        Description\n    \n    \n        Main Task Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-edit\n            \n\n            \n                styleUrls\n                ./task-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                events\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                objectKeys\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                task\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                dismissLoading\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCustomEvent\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(events: EventsService, route: ActivatedRoute, router: Router, camundaService: CamundaRestService, loadingController: LoadingController, auth: AuthService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-edit/task-edit.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            dismissLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            ngOnInit: on init get Task Details if false get History Task Details\nget formKey and Resource name\nget execution variables and fill form versions array and resourceId\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCustomEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCustomEvent(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            on formio CustomEvent (eg:Complete) callback\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                CustomEvent\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(submission)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            On Form Submit Event Callback\nupdate execution Variables Set Form Version\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        submission\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Submission Object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    resourceName: '',\n    resourceId: '',\n    formKey: '',\n    readOnly: false,\n    version: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        objectKeys:     \n\n                    \n                \n                    \n                        \n                            Default value : Object.keys\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * Main Task Component\n */\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.scss'],\n\n})\nexport class TaskEditComponent implements OnInit {\n  task: any = {};\n  loading: any;\n  form = {\n    resourceName: '',\n    resourceId: '',\n    formKey: '',\n    readOnly: false,\n    version: []\n  };\n  objectKeys = Object.keys;\n  constructor(\n    public events: EventsService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private camundaService: CamundaRestService,\n    private loadingController: LoadingController,\n    private auth: AuthService,\n    public translate: TranslateService,\n  ) {\n    //\n\n  }\n\n  /**\n   * on formio CustomEvent (eg:Complete) callback\n   * @param event\n   *  CustomEvent\n   */\n  onCustomEvent(event) {\n    try {\n      if (event.hasOwnProperty('type')) {\n        switch (event.type) {\n          case 'complete':\n            if (this.task.assignee !== this.auth.getUser().username) {\n              this.task.assignee = this.auth.getUser().username;\n              this.camundaService.postAssignTask(this.task.id, { userId: this.task.assignee }).subscribe(() => {\n                this.camundaService.postCompleteTask(this.task.id,\n                  { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                    this.events.announceItem({ taskId: this.task.id, complete: true });\n                    this.events.announceFiltersRefresh('');\n                    this.router.navigate(['tasks']);\n                  });\n              });\n            } else {\n              this.camundaService.postCompleteTask(this.task.id,\n                { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                  this.events.announceItem({ taskId: this.task.id, complete: true });\n                  this.events.announceFiltersRefresh('');\n                  this.router.navigate(['tasks']);\n                });\n            }\n\n            break;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /**\n   * On Form Submit Event Callback\n   * update execution Variables Set Form Version\n   *  @param submission\n   *  Submission Object\n   */\n  onSubmit(submission) {\n    this.camundaService.updateExecutionVariables(this.task.executionId, 'v_' + this.task.formKey,\n      { value: submission._fvid, type: 'String' }).subscribe(() => {\n      });\n  }\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({});\n    return await this.loading.present();\n  }\n  async dismissLoading() {\n    return await this.loading.dismiss();\n  }\n\n\n  /**\n   * ngOnInit: on init get Task Details if false get History Task Details\n   * get formKey and Resource name\n   * get execution variables and fill form versions array and resourceId\n   *\n   */\n  ngOnInit() {\n    this.presentLoading().then(() => {\n      this.camundaService.getTask(this.route.snapshot.params.taskId).subscribe((task) => {\n\n\n        this.task = task;\n        if (this.task.executionId && this.task.executionId !== 'undefined') {\n          const keyResourceArray = this.task.formKey.split(':');\n          this.form.formKey = keyResourceArray[0];\n          this.form.resourceName = keyResourceArray[1];\n          this.camundaService.getExecutionVariables(this.task.executionId).subscribe(executionVariables => {\n\n            Object.keys(executionVariables).forEach((key) => {\n              if (key.indexOf('v_') > -1) {\n                this.form.version[key.replace('v_', '')] = executionVariables[key].value;\n              }\n            });\n\n            this.form.resourceId = executionVariables[this.form.resourceName] ? executionVariables[this.form.resourceName].value : '';\n            this.dismissLoading();\n            console.log(this.form);\n          });\n\n        } else {\n          this.camundaService.getHistoryTask({ taskId: this.route.snapshot.params.taskId }).subscribe(tasks => {\n            if (tasks.length > 0) {\n              this.task = tasks[0];\n\n              this.camundaService.getProcessDefinitionXML(this.task.processDefinitionId).subscribe(xml => {\n                const parseString = require('xml2js').parseString;\n                parseString(xml.bpmn20Xml, (err, result) => {\n                  const taskDefinition = result['bpmn:definitions']['bpmn:process'][0]['bpmn:userTask'].filter(item => {\n                    return item.$.id === this.task.taskDefinitionKey;\n                  });\n                  console.log(taskDefinition[0].$['camunda:formKey']);\n                  this.task.formKey = taskDefinition[0].$['camunda:formKey'];\n                  const keyResourceArray = this.task.formKey.split(':');\n                  this.form.formKey = keyResourceArray[0];\n                  this.form.resourceName = keyResourceArray[1];\n                  this.form.readOnly = true;\n                  this.camundaService.\n                    getVariableInstanceByExecutionId({ executionIdIn: this.task.executionId }).subscribe(executionVariables => {\n                      this.form.version = executionVariables.forEach((variable) => {\n                        if (variable.name.indexOf('v_') > -1) {\n                          this.form.version[variable.name.replace('v_', '')] = variable.value;\n                        }\n                      });\n                      const resource = executionVariables.filter((variable) => {\n                        return variable.name === this.form.resourceName;\n                      });\n                      this.form.resourceId = (resource && resource.length > 0) ?\n                        resource[0].value : '';\n                      console.log(resource);\n                      console.log(this.form.resourceName);\n                      this.dismissLoading();\n\n                    });\n                });\n              });\n\n\n\n            } else {\n              alert('this task does not exist!');\n              this.dismissLoading();\n            }\n          });\n        }\n      },\n        (err) => {\n\n        });\n\n\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    Please Choose a Task\n\n  \n\n\n    \n\n    \n                \n                    ./task-edit.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Please Choose a Task  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskGridComponent.html":{"url":"components/TaskGridComponent.html","title":"component - TaskGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-grid/task-grid.component.ts\n\n\n    \n        Description\n    \n    \n        Task List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-grid\n            \n\n            \n                styleUrls\n                ./task-grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                filterId\n                            \n                            \n                                infiniteScroll\n                            \n                            \n                                loading\n                            \n                            \n                                    Public\n                                loadingController\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                pageSize\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                tasks\n                            \n                            \n                                tasksOrigin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                    Async\n                                dismissLoading\n                            \n                            \n                                DoInfinite\n                            \n                            \n                                fetchTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                performSearch\n                            \n                            \n                                    Async\n                                presentLoading\n                            \n                            \n                                search\n                            \n                            \n                                setFilter\n                            \n                            \n                                sortArray\n                            \n                            \n                                    Async\n                                sortOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, camundaService: CamundaRestService, popoverCtrl: PopoverController, modalController: ModalController, auth: AuthService, loadingController: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-grid/task-grid.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearSearch(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Clear Search Event Callback\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            dismissLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DoInfinite\n                            \n                            \n                        \n                    \n                \n                \n                    \nDoInfinite(infiniteScroll)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Ion Infinite Scroll Callback\nFetch more tasks then stop spinner.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infiniteScroll\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchTasks(isNew)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Fetch Tasks from Camunda API\nReset Tasks array if filter is new.\nGet the Next page if not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        isNew\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            ngOnInit:\nsubscribe to sorting events\nSubscribe Item Change Events\nSubscribe to Filter Change Events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformSearch(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Perform Text Search on TaskOrigin array and reassign displayed Tasks\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Search Event Callback\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFilter(filterId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:148\n                            \n                        \n\n\n                \n                    \n                            Set chosen Filter Id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortArray(sorting)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Sort Tasks Array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sorting\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            sortOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortOptions(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Present Sort Options Popover Menu.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    textSearch: '',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:25\n                            \n                        \n\n                \n                    \n                        Filter object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:38\n                            \n                        \n\n                \n                    \n                        Chosen FilterId\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infiniteScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        infiniteScroll:     InfiniteScroll\n\n                    \n                \n                    \n                        \n                            Type :     InfiniteScroll\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(InfiniteScroll)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:43\n                            \n                        \n\n                \n                    \n                        Infine Scroll View Child\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingController:     LoadingController\n\n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalController:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 7\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:20\n                            \n                        \n\n                \n                    \n                        Filtered Displayed Tasks Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasksOrigin:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-grid/task-grid.component.ts:32\n                            \n                        \n\n                \n                    \n                        Original Tasks Array\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LoadingController, ModalController, PopoverController, InfiniteScroll } from '@ionic/angular';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { SortOptionsComponent } from '../sort-options/sort-options.component';\n\n/**\n * Task List Component\n */\n@Component({\n  selector: 'app-task-grid',\n  templateUrl: './task-grid.component.html',\n  styleUrls: ['./task-grid.component.scss']\n})\nexport class TaskGridComponent implements OnInit {\n  /**\n   * Filtered Displayed Tasks Array\n   */\n  tasks: any = [];\n\n  /**\n   * Filter object\n   */\n  filter: any = {\n    textSearch: '',\n  };\n\n  /**\n   * Original Tasks Array\n   */\n  tasksOrigin: any = [];\n\n  loading;\n  /**\n   * Chosen FilterId\n   */\n  filterId = '';\n  pageSize = 7;\n  /**\n   * Infine Scroll View Child\n   */\n  @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll;\n\n\n  constructor(\n    private event: EventsService,\n    private camundaService: CamundaRestService,\n    public popoverCtrl: PopoverController,\n    public modalController: ModalController,\n    private auth: AuthService,\n    public loadingController: LoadingController) {\n\n  }\n\n  /**\n   * Search Event Callback\n   * @param event\n   */\n  search(event) {\n    this.performSearch(this.filter.textSearch);\n  }\n\n  /**\n   * Present Sort Options Popover Menu.\n   * @param event\n   */\n  async sortOptions(event) {\n    const popover = await this.popoverCtrl.create({\n      component: SortOptionsComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({});\n    return await this.loading.present();\n  }\n  async dismissLoading() {\n    this.loading.dismiss();\n  }\n\n  /**\n   * Clear Search Event Callback\n   * @param event\n   */\n  clearSearch(event) {\n    this.filter.textSearch = '';\n    this.performSearch('');\n  }\n\n  /**\n   * Perform Text Search on TaskOrigin array and reassign displayed Tasks\n   * @param value\n   */\n  performSearch(value) {\n    this.tasks = this.tasksOrigin.filter(function (item) {\n      return (item['name'] ? item['name'].toString().toLowerCase().includes(value.toLowerCase()) : false) ||\n        (item['assignee'] ? item['assignee'].toString().toLowerCase().includes(value.toLowerCase()) : false) ||\n        (item['description'] ? item['description'].toString().toLowerCase().includes(value.toLowerCase()) : false) ||\n        (item['due'] ? item['due'].toString().toLowerCase().includes(value.toLowerCase()) : false);\n    });\n  }\n\n  /**\n   * Sort Tasks Array\n   * @param sorting\n   */\n  sortArray(sorting) {\n    switch (sorting.type) {\n      case 'datetime':\n        this.tasks.sort(function (a, b) {\n          const dateA = new Date(a[sorting.name]), dateB = new Date(b[sorting.name]);\n          const left = sorting.direction === 1 ? dateA : dateB;\n          const right = sorting.direction === 1 ? dateB : dateA;\n          return left.getTime() - right.getTime();\n        });\n        break;\n\n      case 'number':\n        this.tasks.sort(function (a, b) {\n          const left = sorting.direction === 1 ? a : b;\n          const right = sorting.direction === 1 ? b : a;\n          // tslint:disable-next-line:radix\n          return parseInt(left[sorting.name]) - parseInt(right[sorting.name]);\n        });\n        break;\n      default:\n        this.tasks.sort(function (a, b) {\n          const valueA = a[sorting.name].toLowerCase(), valueB = b[sorting.name].toLowerCase();\n          if (valueA  valueB) {\n            return 1 * sorting.direction;\n          }\n          return 0;\n        });\n    }\n\n  }\n\n  /**\n   * Set chosen Filter Id\n   * @param filterId\n   */\n  setFilter(filterId) {\n    this.filter = filterId;\n  }\n\n  /**\n   * Fetch Tasks from Camunda API\n   * Reset Tasks array if filter is new.\n   * Get the Next page if not\n   *  @param isNew\n   */\n  fetchTasks(isNew = false) {\n    if (isNew) {\n      this.tasks = this.tasksOrigin = [];\n    }\n    if (this.filter === 'history') {\n      return this.presentLoading().then(() => {\n        this.camundaService.listHistory({\n          firstResult: this.tasks.length,\n          maxResults: this.tasks.length + this.pageSize,\n          finished: true\n        }, {\n            taskAssignee: this.auth.getUser().username,\n          }).subscribe(data => {\n            this.tasksOrigin = [...this.tasks, ...data];\n            this.tasks = this.tasksOrigin;\n            this.dismissLoading();\n          });\n\n      });\n    } else {\n      return this.presentLoading().then(() => {\n        this.camundaService.listFilter(this.filter,\n          { firstResult: this.tasks.length, maxResults: this.tasks.length + this.pageSize }).subscribe(data => {\n            this.tasksOrigin = [...this.tasks, ...data];\n            this.tasks = this.tasksOrigin;\n            this.dismissLoading();\n          });\n      });\n\n    }\n\n  }\n\n  /**\n   * Ion Infinite Scroll Callback\n   * Fetch more tasks then stop spinner.\n   * @param infiniteScroll\n   */\n  DoInfinite(infiniteScroll) {\n    this.fetchTasks().then((data) => {\n      console.log(data);\n      infiniteScroll.target.complete();\n    });\n  }\n\n  /**\n   * ngOnInit:\n   * subscribe to sorting events\n   * Subscribe Item Change Events\n   * Subscribe to Filter Change Events\n   */\n  ngOnInit() {\n    this.event.sortingAnnounced$.subscribe(sorting => {\n      this.sortArray(sorting);\n    });\n    this.event.itemChange$.subscribe(data => {\n      if (data.complete) {\n        this.tasksOrigin.filter(item => {\n          if (data.taskId === item.id) {\n            item.complete = true;\n            this.tasks = this.tasksOrigin;\n            setTimeout(() => {\n              this.tasksOrigin.splice(this.tasksOrigin.indexOf(item), 1);\n              this.tasks = this.tasksOrigin;\n            }, 400);\n          }\n        });\n      }\n    });\n    this.event.filterAnnounced$.subscribe((data) => {\n      if (data.item) {\n        console.log(data);\n        this.setFilter(data.item.id);\n        this.fetchTasks(true);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n      \n      \n        \n      \n    \n    \n  \n\n\n  \n    \n      \n         0\">\n          \n            \n            {{\"No Tasks.\" | translate}}\n          \n        \n        \n          \n        \n        \n          \n          \n        \n\n      \n    \n  \n\n    \n\n    \n                \n                    ./task-grid.component.scss\n                \n                :host:hover,:host:focus-within {\n  ion-header {\n    ion-toolbar {\n      --opacity: 1;\n    }\n\n    opacity: 1;\n  }\n}\n\n\n\nion-header {\n  opacity: 0.5;\n  transition: 0.3s;\n  ion-searchbar{\n    height:45px;\n  }\n  ion-toolbar {\n    --opacity: 0;\n    --min-height: 0px;\n\n    ion-button {\n      --height: 20px;\n    }\n\n    ion-title {\n      padding: 0 0px;\n      font-size: 16px;\n    }\n  }\n}\n\nion-spinner{\n  margin: 20% auto;\n  width: 100px;\n  display: block;\n  zoom: 2;\n}\nion-content{\n  height: calc(100% - 50px);\n}\n.toolbar-container {}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 0\">                                  {{\"No Tasks.\" | translate}}                                                                                            '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskItemComponent.html":{"url":"components/TaskItemComponent.html","title":"component - TaskItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-item/task-item.component.ts\n\n\n    \n        Description\n    \n    \n        Task List Item Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-item\n            \n\n            \n                styleUrls\n                ./task-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                input\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseItem\n                            \n                            \n                                getPriority\n                            \n                            \n                                getStatus\n                            \n                            \n                                openAssignee\n                            \n                            \n                                    Async\n                                presentLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingController: LoadingController, auth: AuthService, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-item/task-item.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                    \n                        Camunda Task Object\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chooseItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nchooseItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriority\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriority(priority)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            get Priority Class by priority Value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        priority\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus(priority)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Get Status as string By priority Value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        priority\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAssignee\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenAssignee()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('trigger')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * Task List Item Component\n */\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss']\n})\nexport class TaskItemComponent {\n  /**\n   * Camunda Task Object\n   */\n  @Input() task;\n\n  @ViewChild('trigger') input;\n\n  users: any = [];\n\n  constructor(\n    private loadingController: LoadingController,\n    public auth: AuthService,\n    private camundaService: CamundaRestService,\n    private event: EventsService) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({});\n    return await loading.present();\n  }\n\n  openAssignee() {\n    setTimeout(() => {\n      if (this.task.assignee) {\n        this.input.nativeElement.focus();\n        this.task.assignee = null;\n      } else {\n        this.task.assignee = this.auth.getUser().username;\n      }\n      this.camundaService.postAssignTask(this.task.id, { userId: this.task.assignee }).subscribe(data => {\n        // this.event.announceFiltersRefresh('');\n      });\n\n\n    }, 100);\n\n  }\n  chooseItem(item) {\n    this.event.announceItem(item);\n  }\n\n  /**\n   * get Priority Class by priority Value\n   * @param priority\n   */\n  getPriority(priority) {\n    let value = '';\n    switch (true) {\n      case priority >= 75:\n        value = 'app-bg-danger';\n        break;\n      case priority >= 50:\n        value = 'app-bg-warning';\n        break;\n      case priority >= 25:\n        value = 'app-bg-primary';\n        break;\n      case priority = 75:\n        value = 'Critical';\n        break;\n      case priority >= 50:\n        value = 'Important';\n        break;\n      case priority >= 25:\n        value = 'Normal';\n        break;\n      case priority \n    \n\n    \n          \n    \n      \n        {{task.name}}\n        \n      \n      \n        {{task.description}}\n      \n      \n        \n          {{task.created | date}}\n        \n        \n          {{task.due ? (task.due\n          | date ): 'Due' | translate}}\n        \n        \n        \n        \n        \n      \n\n    \n    \n      \n      \n        {{user.name}}\n      \n      \n        \n        {{'Claim' | translate}}\n        {{task.assignee}}\n      \n      \n        {{'Add Group' | translate}}\n      \n\n      \n        {{'Complete' | translate}}\n       -->\n\n    \n  \n\n    \n\n    \n                \n                    ./task-item.component.scss\n                \n                \n\nion-card.card {\n  margin: 5px;\n  border-radius: 2px;\n  width: calc(100% - 10px);\n  box-shadow: 0px 1px 0px 0px #eee;\n  border-top: 0px;\n  border-right: 0px;\n  border-bottom: 1px #dcdcdc solid !important;\n  transition: 0.4s;\n  max-height: 550px;\n\n  &.complete {\n    max-height: 0px;\n    background-color: rgba(var(--ion-color-success-rgb), 0.50);\n  }\n\n  h2 {\n    font-size: 1.1rem;\n    font-weight: normal;\n  }\n\n  p {\n    padding: 10px 0px;\n    opacity: 0.8;\n  }\n}\n\n.date-picker-badge {\n  font-weight: 100;\n  padding: 5px;\n  margin-right: 5px;\n  font-size: 12px;\n  background: #f8f8f8;\n  border: 1px solid #eee;\n\n  &.due {\n    float: right;\n  }\n\n  ion-icon {\n    font-size: 17px;\n    vertical-align: top;\n    margin: -3px 3px;\n  }\n}\n\n[contentEditable=true]:empty:not(:focus):before {\n  content: attr(data-ph);\n  color: grey;\n  font-style: italic;\n}\n\n.more-details {\n  white-space: initial;\n  padding: 0px;\n  height: auto;\n  max-height: 34px;\n\n  &.task-options {\n    max-height: 0px;\n    padding: 0px;\n  }\n\n  overflow: hidden;\n  margin: 10px 0px;\n  -webkit-transition: max-height 1.2s;\n  -moz-transition: max-height 1.2s;\n  -ms-transition: max-height 1.2s;\n  -o-transition: max-height 1.2s;\n  transition: max-height 1.2s;\n  -webkit-transition: padding 0.2s;\n  -moz-transition:padding 0.2s;\n  -ms-transition: padding 0.2s;\n  -o-transition: padding 0.2s;\n  transition: padding 0.2s;\n\n  p {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n    display: block;\n    overflow: hidden;\n  }\n}\n\nion-card:hover .more-details,\nion-card:focus-within .more-details {\n  p {\n    white-space: normal;\n    text-overflow: initial;\n  }\n\n  max-height: 300px;\n\n  &.task-options {\n    padding: 10px;\n  }\n}\n.router-link-active {\n  background: rgba(var(--ion-color-primary-rgb),0.15);\n}\nion-card:focus {\n  outline: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{task.name}}                            {{task.description}}                              {{task.created | date}}                          {{task.due ? (task.due          | date ): \\'Due\\' | translate}}                                                                          {{user.name}}                            {{\\'Claim\\' | translate}}        {{task.assignee}}                    {{\\'Add Group\\' | translate}}                    {{\\'Complete\\' | translate}}       -->      '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks Dashlet Main Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Tasks Dashlet Main Component\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\n\n\n\nexport class TasksComponent {\n\n  constructor() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                  ion-content{\n    height:100vh;\n  }\n  .toolbar-round {\n    padding: 0px;\n    border-radius: 20px;\n  }\n\n  app-grid {\n    width: 100%;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n    margin-top: -4px;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  ion-note {\n    font-size: 12px;\n    color: var(--ion-color-dark-shade);\n  }\n\n  .details-item {\n    transition: 0.5s;\n    box-shadow: none;\n    border: 1px solid #eee;\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n  .inner-scroll {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .inner-content {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .forecast_container {\n    overflow-x: scroll !important;\n    overflow-y: hidden;\n    word-wrap: break-word;\n    height: auto;\n    font-size: 0.8em;\n    font-weight: 300;\n  }\n\n  @media (min-width: 1140px) {\n    .tasks-pane {\n      min-height: 100%;\n      transition: 0.5s;\n      width: 400px !important;\n      max-width: 400px !important;\n      border-right: 1px solid var(--ion-color-light-shade);\n      &:last-child:not(.full-pane) {\n        width: calc(100% - 400px) !important;\n        max-width: calc(100% - 400px) !important;\n        border-right: 0px;\n        &.collapse-pane {\n          max-width: 49px !important;\n          min-width: auto !important;\n          ion-grid {\n            display: none !important;\n          }\n          ion-list {\n            display: none !important;\n          }\n        }\n      }\n    }\n    .collapse-pane {\n      max-width: 49px !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n      ion-list {\n        display: none !important;\n      }\n    }\n    .full-pane {\n      max-width: calc(100% - 49px) !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n    }\n  }\n\n  .split-pane-md.split-pane-visible>.split-pane-side.collapse-pane,\n  ion-col.collapse-pane {\n    transition: 0.5s;\n    max-width: 49px !important;\n    min-width: auto !important;\n    ion-grid {\n      display: none !important;\n    }\n  }\n\n  ion-scroll {\n    max-height: 100% !important;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAddRequestButtonComponent\n\nAddRequestButtonComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nAddRequestButtonComponent->TasksModule\n\n\n\n\n\nFilterModalComponent\n\nFilterModalComponent\n\nTasksModule -->\n\nFilterModalComponent->TasksModule\n\n\n\n\n\nFilterOptionsComponent\n\nFilterOptionsComponent\n\nTasksModule -->\n\nFilterOptionsComponent->TasksModule\n\n\n\n\n\nFiltersMenuComponent\n\nFiltersMenuComponent\n\nTasksModule -->\n\nFiltersMenuComponent->TasksModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nTasksModule -->\n\nGridComponent->TasksModule\n\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\nTasksModule -->\n\nGridsterComponent->TasksModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTasksModule -->\n\nOnCreateDirective->TasksModule\n\n\n\n\n\nProcessFormComponent\n\nProcessFormComponent\n\nTasksModule -->\n\nProcessFormComponent->TasksModule\n\n\n\n\n\nProcessListComponent\n\nProcessListComponent\n\nTasksModule -->\n\nProcessListComponent->TasksModule\n\n\n\n\n\nSortOptionsComponent\n\nSortOptionsComponent\n\nTasksModule -->\n\nSortOptionsComponent->TasksModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nTasksModule -->\n\nTaskDetailsComponent->TasksModule\n\n\n\n\n\nTaskEditComponent\n\nTaskEditComponent\n\nTasksModule -->\n\nTaskEditComponent->TasksModule\n\n\n\n\n\nTaskGridComponent\n\nTaskGridComponent\n\nTasksModule -->\n\nTaskGridComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nTasksModule -->\n\nFormModule->TasksModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTasksModule -->\n\nSharedModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddRequestButtonComponent\n                        \n                        \n                            FilterModalComponent\n                        \n                        \n                            FilterOptionsComponent\n                        \n                        \n                            FiltersMenuComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            GridsterComponent\n                        \n                        \n                            OnCreateDirective\n                        \n                        \n                            ProcessFormComponent\n                        \n                        \n                            ProcessListComponent\n                        \n                        \n                            SortOptionsComponent\n                        \n                        \n                            TaskDetailsComponent\n                        \n                        \n                            TaskEditComponent\n                        \n                        \n                            TaskGridComponent\n                        \n                        \n                            TaskItemComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FilterModalComponent\n                        \n                        \n                            FilterOptionsComponent\n                        \n                        \n                            ProcessListComponent\n                        \n                        \n                            SortOptionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule, MatDatepickerModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GridsterModule } from 'angular-gridster2';\nimport { OnCreateDirective } from '../core/directives/on-create.directive';\nimport { SharedModule } from '../shared/shared.module';\nimport { AddRequestButtonComponent } from './components/add-request-button/add-request-button.component';\nimport { FilterModalComponent } from './components/filter-modal/filter-modal.component';\nimport { FilterOptionsComponent } from './components/filter-options/filter-options.component';\nimport { FiltersMenuComponent } from './components/filters-menu/filters-menu.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { GridsterComponent } from './components/gridster/gridster.component';\nimport { ProcessFormComponent } from './components/process-form/process-form.component';\nimport { ProcessListComponent } from './components/process-list/process-list.component';\nimport { SortOptionsComponent } from './components/sort-options/sort-options.component';\nimport { TaskDetailsComponent } from './components/task-details/task-details.component';\nimport { TaskEditComponent } from './components/task-edit/task-edit.component';\nimport { TaskGridComponent } from './components/task-grid/task-grid.component';\nimport { TaskItemComponent } from './components/task-item/task-item.component';\nimport { TasksComponent } from './tasks.component';\nimport { FormModule } from '../form/form.module';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasksComponent,\n    children: [\n      { path: 'edit/:taskId', component: TaskEditComponent },\n      { path: 'new/:processDefinitionId', component: ProcessFormComponent }\n    ]\n  }\n];\n/**\n * Tasks Dashlet Module\n */\n@NgModule({\n  imports: [\n    GridsterModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule, MatInputModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    FormModule\n  ],\n  entryComponents: [FilterOptionsComponent, ProcessListComponent, FilterModalComponent, SortOptionsComponent],\n  declarations: [\n    ProcessFormComponent,\n    FilterOptionsComponent,\n    ProcessListComponent,\n    FilterModalComponent,\n    TaskEditComponent,\n    TasksComponent,\n    OnCreateDirective,\n    GridsterComponent,\n    GridComponent,\n    FiltersMenuComponent,\n    TaskGridComponent,\n    TaskItemComponent,\n    TaskDetailsComponent,\n    SortOptionsComponent,\n    AddRequestButtonComponent],\n\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserOptionsComponent.html":{"url":"components/UserOptionsComponent.html","title":"component - UserOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-options/user-options.component.ts\n\n\n    \n        Description\n    \n    \n        User Options Popover Menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-options\n            \n\n            \n                styleUrls\n                ./user-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventsService, translate: TranslateService, auth: AuthService, popoverCtrl: PopoverController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-options/user-options.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Logout User and close Popover.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams, PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n/**\n * User Options Popover Menu.\n */\n@Component({\n  selector: 'app-user-options',\n  templateUrl: './user-options.component.html',\n  styleUrls: ['./user-options.component.scss']\n})\nexport class UserOptionsComponent {\n\n  id = '';\n\n  constructor(public eventService: EventsService, public translate: TranslateService,\n    public auth: AuthService, public popoverCtrl: PopoverController, public navParams: NavParams) {\n    this.id = this.navParams.data.id;\n\n  }\n\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n\n  /**\n   * Logout User and close Popover.\n   */\n  logout() {\n    this.auth.logout();\n    this.popoverCtrl.dismiss();\n  }\n\n\n}\n\n    \n\n    \n        \n  {{'Account' | translate }} -->\n  {{'Logout' | translate }}\n\n    \n\n    \n                \n                    ./user-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'Account\\' | translate }} -->  {{\\'Logout\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/auth/components/auth-index/auth-index.component.ts\n            \n            \n                component\n            \n            \n                AuthIndexComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/auth-login/auth-login.component.ts\n            \n            \n                component\n            \n            \n                AuthLoginComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/directives/on-create.directive.ts\n            \n            \n                directive\n            \n            \n                OnCreateDirective\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/schemas/ProcessDefinition.ts\n            \n            \n                class\n            \n            \n                ProcessDefinition\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/schemas/Task.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            \n                variable\n            \n            \n                STORAGE_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/camunda-rest.service.ts\n            \n            \n                injectable\n            \n            \n                CamundaRestService\n            \n            \n                86 %\n                (31/36)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                EnvServiceFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                EnvServiceProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                FormioAppConfigFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                FormioAppConfigProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                formioAuthConfigFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                formioAuthConfigProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.ts\n            \n            \n                class\n            \n            \n                EnvService\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/services/events.service.ts\n            \n            \n                injectable\n            \n            \n                EventsService\n            \n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/core/services/external.service.ts\n            \n            \n                injectable\n            \n            \n                ExternalService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/filter.service.ts\n            \n            \n                injectable\n            \n            \n                FilterService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/filter.service.ts\n            \n            \n                variable\n            \n            \n                STORAGE_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/form/components/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                26 %\n                (13/49)\n            \n        \n        \n            \n                \n                src/app/form/components/formio/formio.component.ts\n            \n            \n                component\n            \n            \n                AppFormioComponent\n            \n            \n                21 %\n                (11/52)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switch/language-switch.component.ts\n            \n            \n                component\n            \n            \n                LanguageSwitchComponent\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/language/language.component.ts\n            \n            \n                component\n            \n            \n                LanguageComponent\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/notifications-button/notifications-button.component.ts\n            \n            \n                component\n            \n            \n                NotificationsButtonComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-options/user-options.component.ts\n            \n            \n                component\n            \n            \n                UserOptionsComponent\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/tasks/components/add-request-button/add-request-button.component.ts\n            \n            \n                component\n            \n            \n                AddRequestButtonComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filter-modal/filter-modal.component.ts\n            \n            \n                component\n            \n            \n                FilterModalComponent\n            \n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filter-options/filter-options.component.ts\n            \n            \n                component\n            \n            \n                FilterOptionsComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filters-menu/filters-menu.component.ts\n            \n            \n                component\n            \n            \n                FiltersMenuComponent\n            \n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/tasks/components/grid/grid.component.ts\n            \n            \n                component\n            \n            \n                GridComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/tasks/components/gridster/gridster.component.ts\n            \n            \n                component\n            \n            \n                GridsterComponent\n            \n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/tasks/components/process-form/process-form.component.ts\n            \n            \n                component\n            \n            \n                ProcessFormComponent\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/tasks/components/process-list/process-list.component.ts\n            \n            \n                component\n            \n            \n                ProcessListComponent\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/tasks/components/sort-options/sort-options.component.ts\n            \n            \n                component\n            \n            \n                SortOptionsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-details/task-details.component.ts\n            \n            \n                component\n            \n            \n                TaskDetailsComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-edit/task-edit.component.ts\n            \n            \n                component\n            \n            \n                TaskEditComponent\n            \n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-grid/task-grid.component.ts\n            \n            \n                component\n            \n            \n                TaskGridComponent\n            \n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-item/task-item.component.ts\n            \n            \n                component\n            \n            \n                TaskItemComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.component.ts\n            \n            \n                component\n            \n            \n                TasksComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.7\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ~6.1.1\n        \n            @angular/core : ~6.1.1\n        \n            @angular/forms : ~6.1.1\n        \n            @angular/http : ~6.1.1\n        \n            @angular/material : ^6.4.7\n        \n            @angular/material-moment-adapter : ^6.4.7\n        \n            @angular/platform-browser : ~6.1.1\n        \n            @angular/platform-browser-dynamic : ~6.1.1\n        \n            @angular/router : ~6.1.1\n        \n            @ionic-native/core : ^5.0.0-beta.14\n        \n            @ionic-native/splash-screen : 5.0.0-beta.14\n        \n            @ionic-native/status-bar : 5.0.0-beta.14\n        \n            @ionic/angular : ^4.0.0-beta.12\n        \n            @ionic/ng-toolkit : ^1.0.0\n        \n            @ionic/schematics-angular : ^1.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            angular-formio : ^3.5.0\n        \n            angular-gridster2 : ^6.0.5\n        \n            angular-webstorage-service : ^1.0.2\n        \n            bootstrap : ^4.1.3\n        \n            bootswatch : ^4.1.3\n        \n            buffer : ^5.2.1\n        \n            core-js : ^2.5.3\n        \n            events : ^3.0.0\n        \n            formio-export : ^0.3.0\n        \n            formiojs : ^3.9.4\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            rxjs : 6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            stream : 0.0.2\n        \n            timers : ^0.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthIndexComponent\n\nAuthIndexComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthIndexComponent->AuthModule\n\n\n\n\n\nAuthLoginComponent\n\nAuthLoginComponent\n\nAuthModule -->\n\nAuthLoginComponent->AuthModule\n\n\n\n\n\nFormioAuth\n\nFormioAuth\n\nAuthModule -->\n\nFormioAuth->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nSharedModule->FormModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nLanguageComponent \n\nLanguageComponent \n\nLanguageComponent  -->\n\nSharedModule->LanguageComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nSharedModule->LanguageSwitchComponent \n\n\n\n\n\nNotificationsButtonComponent \n\nNotificationsButtonComponent \n\nNotificationsButtonComponent  -->\n\nSharedModule->NotificationsButtonComponent \n\n\n\n\n\nUserOptionsComponent \n\nUserOptionsComponent \n\nUserOptionsComponent  -->\n\nSharedModule->UserOptionsComponent \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nSharedModule->TasksModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nCamundaRestService\n\nCamundaRestService\n\nCoreModule -->\n\nCamundaRestService->CoreModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nCoreModule -->\n\nEventsService->CoreModule\n\n\n\n\n\nExternalService\n\nExternalService\n\nCoreModule -->\n\nExternalService->CoreModule\n\n\n\n\n\nAppFormioComponent\n\nAppFormioComponent\n\nFormModule -->\n\nAppFormioComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nAppFormioComponent \n\nAppFormioComponent \n\nAppFormioComponent  -->\n\nFormModule->AppFormioComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\nTasksModule -->\n\nFormModule->TasksModule\n\n\n\n\n\nFormioResource\n\nFormioResource\n\nFormModule -->\n\nFormioResource->FormModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nSharedModule -->\n\nLanguageComponent->SharedModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nSharedModule -->\n\nLanguageSwitchComponent->SharedModule\n\n\n\n\n\nNotificationsButtonComponent\n\nNotificationsButtonComponent\n\nSharedModule -->\n\nNotificationsButtonComponent->SharedModule\n\n\n\n\n\nUserOptionsComponent\n\nUserOptionsComponent\n\nSharedModule -->\n\nUserOptionsComponent->SharedModule\n\n\n\n\n\nAddRequestButtonComponent\n\nAddRequestButtonComponent\n\nTasksModule -->\n\nAddRequestButtonComponent->TasksModule\n\n\n\n\n\nFilterModalComponent\n\nFilterModalComponent\n\nTasksModule -->\n\nFilterModalComponent->TasksModule\n\n\n\n\n\nFilterOptionsComponent\n\nFilterOptionsComponent\n\nTasksModule -->\n\nFilterOptionsComponent->TasksModule\n\n\n\n\n\nFiltersMenuComponent\n\nFiltersMenuComponent\n\nTasksModule -->\n\nFiltersMenuComponent->TasksModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nTasksModule -->\n\nGridComponent->TasksModule\n\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\nTasksModule -->\n\nGridsterComponent->TasksModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTasksModule -->\n\nOnCreateDirective->TasksModule\n\n\n\n\n\nProcessFormComponent\n\nProcessFormComponent\n\nTasksModule -->\n\nProcessFormComponent->TasksModule\n\n\n\n\n\nProcessListComponent\n\nProcessListComponent\n\nTasksModule -->\n\nProcessListComponent->TasksModule\n\n\n\n\n\nSortOptionsComponent\n\nSortOptionsComponent\n\nTasksModule -->\n\nSortOptionsComponent->TasksModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nTasksModule -->\n\nTaskDetailsComponent->TasksModule\n\n\n\n\n\nTaskEditComponent\n\nTaskEditComponent\n\nTasksModule -->\n\nTaskEditComponent->TasksModule\n\n\n\n\n\nTaskGridComponent\n\nTaskGridComponent\n\nTasksModule -->\n\nTaskGridComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EnvServiceFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            EnvServiceProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            FormioAppConfigFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            FormioAppConfigProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            formioAuthConfigFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            formioAuthConfigProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../filter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/env.service.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EnvServiceFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const env = new EnvService();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (browserWindowEnv.hasOwnProperty(key)) {\n            env[key] = window['__env'][key];\n        }\n    }\n\n    return env;\n}\n                        \n                    \n\n                \n                    \n                        Enviroment Service Factory - Read Window Env Variables and assign them to EnvService\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EnvServiceProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: EnvService,\n    useFactory: EnvServiceFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FormioAppConfigFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FormioAppConfigFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const appConfig = new FormioAppConfig();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (appConfig.hasOwnProperty(key)) {\n            appConfig[key] = window['__env'][key];\n        }\n    }\n\n    return appConfig;\n}\n                        \n                    \n\n                \n                    \n                        FormioAppConfigFactory Factory - Read Window Env Variables and assign them to FormioAppConfig\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FormioAppConfigProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FormioAppConfigProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: FormioAppConfig,\n    useFactory: FormioAppConfigFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formioAuthConfigFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAuthConfigFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const authConfig = new FormioAuthConfig();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (authConfig.hasOwnProperty(key)) {\n            authConfig[key] = window['__env'][key];\n        }\n    }\n\n    return authConfig;\n}\n                        \n                    \n\n                \n                    \n                        formioAuthConfigFactory Factory - Read Window Env Variables and assign them to formioAuthConfig\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formioAuthConfigProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAuthConfigProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: FormioAuthConfig,\n    useFactory: formioAuthConfigFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LoggedInUser'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/filter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'local_filters'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

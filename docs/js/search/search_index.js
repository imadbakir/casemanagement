var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AddRequestButtonComponent.html",[0,0.011,1,0.619]],["body/components/AddRequestButtonComponent.html",[0,0.019,1,1.038,2,0.175,3,0.175,4,0.788,5,0.836,6,0.788,7,0.788,8,0.15,9,5.22,10,1.353,11,4.621,12,2.618,13,0.743,14,1.461,15,1.459,16,1.449,17,2.735,18,1.081,19,4.63,20,1.019,21,4.057,22,0.388,23,0.692,24,1.274,25,2.755,26,1.859,27,0.845,28,2.699,29,1.392,30,0.644,31,2.365,32,2.293,33,2.587,34,0.68,35,3.473,36,0.792,37,0.023,38,0.712,39,0.582,40,0.789,41,4.057,42,3.473,43,1.652,44,0.692,45,3.473,46,3.473,47,0.429,48,0.228,49,0.887,50,1.055,51,1.055,52,0.965,53,2.163,54,2.618,55,0.125,56,0.055,57,0.887,58,2.163,59,2.364,60,2.365,61,2.365,62,0.504,63,1.081,64,1.081,65,0.845,66,1.328,67,0.788,68,1.081,69,0.616,70,0.788,71,0.657,72,0.788,73,0.616,74,1.081,75,0.616,76,0.616,77,0.616,78,1.028,79,0.788,80,0.616,81,1.081,82,0.616,83,0.788,84,0.657,85,1.081,86,0.616,87,1.081,88,0.616,89,0.788,90,0.616,91,0.788,92,0.616,93,0.788,94,0.616,95,0.788,96,0.788,97,0.616,98,0.788,99,0.616,100,0.788,101,0.616,102,0.743,103,0.616,104,0.849,105,0.788,106,0.578,107,0.788,108,0.657,109,0.616,110,0.788,111,0.616,112,0.788,113,0.616,114,0.699,115,0.578,116,0.743,117,0.788,118,0.015,119,0.015]],["title/components/AppComponent.html",[0,0.011,69,0.619]],["body/components/AppComponent.html",[0,0.019,1,0.586,2,0.167,3,0.167,4,0.75,6,0.75,7,0.75,8,0.143,10,0.625,13,0.706,14,1.455,15,1.453,16,0.706,20,0.984,22,0.375,23,0.668,24,1.333,26,1.788,27,0.817,29,1.044,30,0.622,32,2.257,34,0.724,36,0.765,37,0.023,38,0.699,39,0.613,40,0.769,44,0.668,47,0.458,48,0.216,50,1.003,51,1.003,52,0.586,55,0.119,56,0.052,57,1.352,62,0.48,63,1.044,64,1.044,65,0.817,66,1.3,67,0.75,68,1.044,69,1.016,70,0.75,71,0.625,72,0.75,73,0.586,74,1.044,75,0.586,76,1.135,77,0.586,78,1.001,79,0.75,80,0.586,81,1.044,82,0.586,83,0.75,84,0.625,85,1.044,86,0.586,87,1.044,88,0.586,89,0.75,90,0.586,91,0.75,92,0.586,93,0.75,94,0.586,95,0.75,96,0.75,97,0.586,98,0.75,99,0.586,100,0.75,101,0.586,102,0.706,103,0.586,104,0.874,105,0.75,106,0.549,107,0.75,108,0.625,109,0.586,110,0.75,111,0.586,112,0.75,113,0.586,114,0.664,115,0.549,116,0.706,117,0.75,118,0.014,119,0.014,120,2.813,121,1.175,122,1.518,123,2.642,124,4.6,125,5.127,126,4.6,127,1.609,128,2.813,129,1.592,130,2.007,131,2.783,132,3.605,133,3.899,134,3.302,135,4.6,136,3.302,137,3.469,138,0.984,139,3.302,140,3.302,141,3.302,142,3.302,143,1.127,144,1.063,145,2.249,146,1.437,147,1.897,148,1.759,149,1.639,150,1.127,151,1.666,152,2.49,153,3.302,154,3.302,155,2.813,156,3.302,157,3.302,158,3.302,159,3.302,160,4.6,161,3.302,162,3.302,163,3.302,164,1.759,165,3.302,166,1.88,167,3.302,168,3.302,169,3.302,170,3.302,171,3.302]],["title/modules/AppModule.html",[172,1.001,173,2.377]],["body/modules/AppModule.html",[2,0.243,3,0.243,8,0.208,37,0.023,47,0.514,48,0.316,55,0.213,56,0.076,62,0.699,69,1.284,118,0.018,119,0.018,172,1.689,173,4.852,174,2.235,175,2.953,176,3.158,177,2.924,178,4.102,179,4.102,180,4.102,181,4.102,182,4.308,183,2.924,184,2.566,185,2.566,186,4.816,187,3.138,188,5.889,189,5.016,190,4.102,191,4.816,192,5.889,193,4.102,194,4.816,195,4.816,196,4.816]],["title/modules/AppRoutingModule.html",[172,1.001,197,2.173]],["body/modules/AppRoutingModule.html",[2,0.256,3,0.256,8,0.219,37,0.023,47,0.495,48,0.333,55,0.22,56,0.081,57,1.296,76,0.901,104,0.883,118,0.019,119,0.019,144,1.635,172,1.456,187,3.239,197,3.786,198,5.076,199,5.076,200,4.141,201,2.832,202,4.141,203,4.323,204,4.908,205,5.076,206,5.076,207,3.827,208,6.079,209,5.076,210,4.323,211,5.076,212,5.076,213,5.076,214,5.076]],["title/guards/AuthGuard.html",[202,2.377,215,2.631]],["body/guards/AuthGuard.html",[2,0.236,3,0.236,8,0.202,22,0.381,27,1.027,30,0.633,34,0.672,36,0.963,37,0.023,38,0.672,39,0.62,40,0.84,44,0.912,47,0.482,48,0.307,55,0.169,56,0.074,76,1.027,118,0.018,119,0.018,121,1.195,123,2.688,130,2.113,131,3.029,143,1.976,144,1.507,151,1.695,202,3.941,210,5.743,215,3.529,216,4.681,217,3.529,218,4.681,219,4.681,220,6.563,221,6.282,222,6.563,223,4.681,224,4.363,225,4.278,226,5.787,227,3.941,228,3.986,229,3.529,230,2.915,231,3.529,232,4.681,233,1.695,234,4.681,235,1.913]],["title/components/AuthIndexComponent.html",[0,0.011,73,0.619]],["body/components/AuthIndexComponent.html",[0,0.019,1,0.647,2,0.184,3,0.184,4,0.828,5,0.879,6,0.828,7,0.828,8,0.158,10,0.69,13,0.78,14,1.466,15,1.464,16,0.78,18,1.118,20,1.053,22,0.486,23,0.715,24,1.293,25,2.713,26,1.843,27,0.874,29,1.118,30,0.666,32,2.327,33,2.626,34,0.694,36,0.607,37,0.023,38,0.694,39,0.597,40,0.715,44,0.53,47,0.409,48,0.239,49,0.932,50,1.108,51,1.108,52,0.647,55,0.132,56,0.058,62,0.53,63,1.118,64,1.118,65,0.874,66,1.355,67,0.828,68,1.118,69,0.647,70,0.828,71,0.69,72,0.828,73,1.06,74,1.118,75,0.647,76,1.14,77,0.647,78,1.054,79,0.828,80,0.647,81,1.118,82,0.647,83,0.828,84,0.69,85,1.118,86,0.647,87,1.118,88,0.647,89,0.828,90,0.647,91,0.828,92,0.647,93,0.828,94,0.647,95,0.828,96,0.828,97,0.647,98,0.828,99,0.647,100,0.828,101,0.647,102,0.78,103,0.647,104,0.867,105,0.828,106,0.607,107,0.828,108,0.69,109,0.647,110,0.828,111,0.647,112,0.828,113,0.647,114,0.734,115,0.607,116,0.78,117,0.828,118,0.015,119,0.015,121,1.258,122,1.599,127,1.814,138,0.78,236,4.701,237,4.701,238,3.107,239,3.713,240,5.575,241,4.925,242,2.484,243,3.647,244,3.647,245,3.647,246,3.647,247,2.272,248,3.107,249,1.811,250,3.647,251,3.647,252,2.095,253,1.943,254,3.647]],["title/components/AuthLoginComponent.html",[0,0.011,75,0.619]],["body/components/AuthLoginComponent.html",[0,0.017,1,0.46,2,0.131,3,0.131,4,0.588,5,0.624,6,0.588,7,0.588,8,0.112,10,0.49,13,0.554,14,1.423,15,1.42,16,0.554,17,1.488,18,0.877,20,0.826,22,0.315,23,0.561,24,1.256,26,1.823,27,0.685,29,0.877,30,0.522,32,2.078,34,0.71,36,0.642,37,0.023,38,0.636,39,0.586,40,0.67,43,0.787,44,0.561,47,0.421,48,0.17,50,0.787,51,0.787,52,0.46,55,0.094,56,0.041,57,0.662,62,0.376,63,0.877,64,0.877,65,0.685,66,1.162,67,0.588,68,0.877,69,0.46,70,0.588,71,0.49,72,0.588,73,0.46,74,0.877,75,0.908,76,1.084,77,0.46,78,0.968,79,0.588,80,0.46,81,0.877,82,0.46,83,0.588,84,0.49,85,0.877,86,0.46,87,0.877,88,0.46,89,0.588,90,0.46,91,0.588,92,0.46,93,0.588,94,0.46,95,0.588,96,0.588,97,0.46,98,0.588,99,0.46,100,0.588,101,0.46,102,0.554,103,0.46,104,0.743,105,0.588,106,0.431,107,0.588,108,0.49,109,0.46,110,0.588,111,0.46,112,0.588,113,0.46,114,1.155,115,0.431,116,0.554,117,0.588,118,0.012,119,0.012,130,1.848,138,0.826,149,1.286,164,2.057,233,0.938,235,1.887,236,4.707,239,3.858,249,1.917,252,1.488,253,3.254,255,4.707,256,2.207,257,4.616,258,3.861,259,5.737,260,2.54,261,5.116,262,3.861,263,5.116,264,2.207,265,2.206,266,3.861,267,3.861,268,2.591,269,2.591,270,2.591,271,2.591,272,0.93,273,0.93,274,2.591,275,1.917,276,4.66,277,5.472,278,2.591,279,1.203,280,1.127,281,2.591,282,2.591,283,2.591,284,3.861,285,3.861,286,2.591,287,2.591,288,3.861,289,2.591,290,2.591,291,3.861,292,2.591,293,2.591,294,2.591,295,3.861,296,2.591,297,2.591,298,2.591,299,2.591,300,2.591,301,3.861,302,2.63,303,1.954,304,3.295,305,3.484,306,3.186,307,1.614,308,1.765,309,1.954,310,2.63,311,2.218,312,2.63,313,2.405,314,2.875,315,2.875,316,3.144,317,1.765,318,1.38,319,1.614,320,1.614,321,2.912,322,1.765,323,2.63,324,1.954,325,1.38,326,1.765,327,1.954,328,1.38,329,1.954,330,1.954,331,1.954,332,2.218,333,2.218,334,2.63,335,2.63,336,2.218,337,2.057,338,3.254,339,1.954,340,2.651,341,1.488,342,1.488,343,1.614,344,3.142,345,4.126,346,1.614,347,1.765,348,1.765,349,2.63,350,2.63,351,2.63,352,1.765,353,2.218,354,2.63,355,1.765,356,1.765,357,1.765,358,1.954,359,1.954,360,1.954]],["title/modules/AuthModule.html",[172,1.001,361,2.377]],["body/modules/AuthModule.html",[0,0.017,2,0.224,3,0.224,8,0.191,37,0.023,47,0.519,48,0.29,49,1.132,55,0.202,56,0.07,57,1.132,62,0.643,73,1.221,75,1.221,118,0.017,119,0.017,144,1.427,146,2.433,172,1.604,174,2.057,175,2.844,176,2.2,177,3.042,183,2.776,184,2.361,185,2.361,187,2.979,200,3.018,201,2.666,204,4.217,237,3.341,239,3.341,255,3.341,361,4.873,362,3.774,363,3.774,364,3.774,365,5.771,366,3.61,367,4.431,368,4.763,369,4.763,370,4.763,371,3.341,372,3.774,373,3.341,374,5.592,375,4.431,376,4.431,377,3.774,378,3.774,379,3.774]],["title/injectables/AuthService.html",[130,1.124,143,1.191]],["body/injectables/AuthService.html",[2,0.215,3,0.215,8,0.184,22,0.347,23,0.792,27,0.968,30,0.576,34,0.792,36,0.907,37,0.023,38,0.633,39,0.644,40,0.792,44,0.974,47,0.441,48,0.279,55,0.154,56,0.068,57,1.087,118,0.017,119,0.017,123,2.445,130,1.756,131,2.759,132,4.096,133,4.319,138,1.166,143,2.165,144,1.371,145,2.9,146,1.852,147,2.445,148,2.268,151,1.542,152,3.21,227,2.9,230,2.652,231,3.21,272,1.313,273,1.313,275,2.707,380,3.21,381,6.342,382,6.342,383,6.342,384,6.342,385,5.401,386,5.452,387,4.257,388,5.452,389,5.452,390,4.257,391,4.257,392,4.257,393,5.452,394,4.257,395,4.82,396,2.943,397,4.257,398,2.9,399,3.626,400,4.257,401,4.257,402,4.257,403,4.257,404,4.257,405,4.257,406,4.257,407,3.626,408,4.257,409,4.257]],["title/interceptors/BasicAuthInterceptor.html",[410,2.972,411,2.972]],["body/interceptors/BasicAuthInterceptor.html",[2,0.204,3,0.204,8,0.175,10,1.11,16,0.865,22,0.329,23,0.766,24,1.061,27,0.936,30,0.547,34,0.749,36,0.976,37,0.023,38,0.682,39,0.691,40,0.852,44,0.937,47,0.473,48,0.265,55,0.146,56,0.064,57,1.033,76,1.174,118,0.016,119,0.016,121,1.033,123,2.323,130,2.13,143,1.8,151,1.465,164,2.155,166,1.653,217,3.049,224,4.425,225,3.997,227,3.592,229,3.049,230,2.519,233,1.465,235,1.653,272,0.974,273,0.974,410,3.444,411,4.492,412,6.615,413,4.044,414,4.864,415,5.274,416,5.274,417,4.998,418,3.874,419,5.274,420,5.274,421,6.737,422,6.22,423,4.044,424,5.274,425,2.125,426,5.869,427,4.044,428,4.044,429,5.274,430,5.274,431,4.044,432,5.274,433,3.049,434,3.049,435,4.044,436,1.76,437,5.274,438,5.274,439,4.044,440,3.444,441,4.492,442,4.044,443,5.274,444,4.044,445,4.044,446,4.044,447,4.044,448,4.044,449,4.044]],["title/modules/CoreModule.html",[172,1.001,182,2.173]],["body/modules/CoreModule.html",[2,0.2,3,0.2,8,0.171,37,0.023,44,0.576,47,0.529,48,0.26,49,1.013,50,1.582,51,1.205,55,0.223,56,0.063,62,0.576,118,0.016,119,0.016,129,1.68,130,2.119,144,1.277,146,1.725,147,2.277,148,2.112,172,1.493,174,1.84,175,1.84,176,1.968,177,3.182,182,4.431,183,2.584,184,2.112,185,2.112,187,2.774,197,4.097,200,3.546,202,3.546,203,3.377,229,2.99,265,2.529,280,1.725,310,2.7,368,4.434,369,4.434,379,3.377,396,1.84,433,2.99,450,3.377,451,3.377,452,3.377,453,4.097,454,2.99,455,4.95,456,5.206,457,4.434,458,4.434,459,2.99,460,5.206,461,3.377,462,3.965,463,4.434,464,5.206,465,3.377,466,3.965,467,3.377,468,4.434,469,5.206,470,3.377,471,3.965,472,3.925,473,3.965,474,3.965,475,3.965,476,3.965,477,2.277,478,3.377,479,3.965,480,3.965,481,3.377,482,3.965,483,3.965,484,3.965,485,3.965,486,3.965,487,3.965,488,3.965,489,3.965,490,3.965,491,3.965,492,3.377,493,2.99,494,3.377]],["title/classes/EnvService.html",[56,0.055,418,2.173]],["body/classes/EnvService.html",[2,0.246,3,0.246,8,0.21,22,0.396,23,0.861,24,1.436,30,0.864,34,0.792,37,0.023,39,0.684,55,0.176,56,0.094,118,0.018,119,0.018,272,1.602,273,1.642,414,3.669,418,3.691,425,2.511,495,4.144,496,6.651,497,6.651,498,6.651,499,5.926,500,4.866,501,4.866,502,4.144,503,4.866,504,4.144,505,4.866]],["title/injectables/EventsService.html",[129,0.891,143,1.191]],["body/injectables/EventsService.html",[2,0.166,3,0.231,8,0.142,22,0.268,23,0.666,27,0.814,34,0.829,36,1.062,37,0.023,38,0.742,39,0.352,40,0.928,44,0.928,47,0.337,48,0.215,55,0.119,56,0.052,78,0.622,102,0.703,118,0.014,119,0.014,129,1.171,138,1.366,143,1.803,148,1.751,151,2.584,225,3.123,272,1.67,273,1.67,396,3.217,425,2.176,434,2.478,506,2.799,507,5.713,508,5.713,509,5.713,510,5.713,511,4.866,512,5.713,513,5.713,514,5.713,515,5.713,516,5.713,517,5.713,518,5.713,519,5.713,520,5.713,521,4.585,522,4.585,523,4.585,524,4.585,525,4.585,526,4.585,527,4.585,528,4.585,529,3.287,530,3.287,531,4.585,532,3.287,533,4.585,534,3.287,535,2.799,536,4.585,537,3.287,538,2.276,539,4.585,540,3.287,541,3.287,542,4.585,543,4.497,544,3.287,545,4.585,546,3.287,547,4.585,548,3.287,549,6.971,550,3.287,551,4.585,552,3.287,553,3.287,554,4.585,555,3.287,556,3.287,557,4.585,558,3.287,559,3.287,560,4.585,561,3.287,562,3.287,563,4.585,564,3.287,565,3.287,566,4.585,567,3.287,568,3.287,569,3.287,570,2.799,571,2.799,572,3.287,573,3.287,574,3.287,575,3.287,576,3.287,577,3.287,578,3.287,579,3.287]],["title/injectables/ExternalService.html",[143,1.191,453,2.173]],["body/injectables/ExternalService.html",[2,0.2,3,0.2,8,0.171,15,0.798,22,0.323,27,1.032,30,0.536,34,0.717,36,1.066,37,0.023,38,0.717,39,0.686,40,0.896,44,0.974,47,0.47,48,0.26,55,0.143,56,0.063,114,0.798,118,0.02,119,0.016,123,2.277,138,0.848,143,1.984,151,2.382,225,3.546,228,3.377,230,2.469,231,2.99,272,1.254,273,1.254,275,2.584,414,4.654,425,2.321,433,2.99,453,3.242,455,5.257,481,3.377,571,4.95,580,3.377,581,5.206,582,5.206,583,6.579,584,3.965,585,3.965,586,4.434,587,5.206,588,6.172,589,3.965,590,5.206,591,6.41,592,3.965,593,5.812,594,3.965,595,6.172,596,5.206,597,3.965,598,5.206,599,5.206,600,3.965,601,3.965,602,3.965,603,3.965,604,3.965,605,3.965,606,3.965,607,5.206,608,3.965,609,3.965,610,3.965,611,3.965,612,3.965,613,3.377,614,3.965,615,3.965,616,3.377,617,3.965,618,3.965,619,3.965,620,3.965,621,3.965,622,3.965,623,3.965,624,3.965,625,3.965,626,3.965,627,3.965,628,3.965,629,3.965,630,3.965,631,3.965,632,3.965]],["title/components/FilterModalComponent.html",[0,0.011,77,0.619]],["body/components/FilterModalComponent.html",[0,0.014,1,0.328,2,0.093,3,0.093,4,0.419,5,0.445,6,0.419,7,0.419,8,0.08,10,0.349,13,0.395,14,1.368,15,1.362,16,1,18,0.674,20,0.635,22,0.242,23,0.62,24,1.248,26,1.981,27,0.527,29,0.674,30,0.25,34,0.729,36,0.778,37,0.023,38,0.817,39,0.746,40,0.62,43,1.659,44,0.725,47,0.367,48,0.121,49,0.472,52,0.328,55,0.067,56,0.029,57,0.472,62,0.268,63,0.674,64,0.846,65,0.527,66,0.969,67,0.419,68,0.674,69,0.328,70,0.419,71,0.349,72,0.419,73,0.328,74,0.674,75,0.328,76,0.887,77,0.758,78,1.249,79,0.419,80,0.328,81,0.674,82,0.328,83,0.419,84,0.349,85,0.674,86,0.328,87,0.674,88,0.328,89,0.419,90,0.328,91,0.419,92,0.328,93,0.419,94,0.328,95,0.419,96,0.419,97,0.328,98,0.419,99,0.328,100,0.419,101,0.328,102,0.395,103,0.328,104,0.922,105,0.419,106,0.307,107,0.419,108,0.349,109,0.328,110,0.419,111,0.328,112,0.419,113,0.328,114,0.372,115,0.307,116,0.395,117,0.419,118,0.009,119,0.009,121,0.759,122,1.069,127,1.297,129,1.276,130,1.609,138,0.913,149,0.917,150,0.631,166,1.523,217,1.393,227,2.537,233,0.669,253,1.583,260,2.319,265,1.921,272,1.126,273,1.265,275,1.475,279,0.857,280,0.804,425,1.978,436,0.804,477,1.706,538,1.475,633,4.323,634,3.953,635,1.573,636,4.117,637,3.726,638,2.971,639,4.268,640,4.995,641,4.54,642,4.255,643,4.268,644,4.268,645,2.971,646,2.971,647,3.767,648,1.847,649,1.847,650,1.847,651,2.971,652,1.847,653,2.971,654,1.847,655,4.18,656,3.635,657,2.971,658,4.361,659,2.971,660,4.101,661,4.651,662,2.971,663,2.023,664,2.971,665,2.971,666,3.218,667,4.268,668,4.8,669,2.971,670,2.971,671,3.218,672,2.971,673,1.847,674,3.726,675,2.971,676,1.847,677,2.53,678,2.53,679,2.53,680,1.85,681,1.847,682,1.847,683,2.686,684,1.847,685,1.847,686,1.573,687,1.847,688,2.32,689,1.847,690,1.847,691,1.573,692,4.677,693,1.847,694,1.847,695,3.726,696,1.573,697,1.847,698,1.847,699,1.847,700,3.726,701,2.53,702,1.847,703,2.023,704,2.971,705,1.847,706,1.847,707,3.726,708,1.847,709,1.847,710,2.971,711,1.847,712,1.847,713,1.151,714,2.537,715,3.726,716,2.24,717,2.14,718,2.53,719,2.53,720,2.24,721,1.847,722,1.847,723,1.847,724,1.847,725,1.847,726,1.847,727,1.847,728,1.847,729,1.847,730,1.847,731,1.847,732,1.85,733,2.971,734,1.847,735,3.635,736,2.971,737,3.635,738,4.268,739,2.971,740,2.971,741,2.971,742,2.971,743,2.971,744,2.971,745,2.971]],["title/components/FilterOptionsComponent.html",[0,0.011,80,0.619]],["body/components/FilterOptionsComponent.html",[0,0.018,1,0.537,2,0.153,3,0.153,4,0.686,5,0.728,6,0.686,7,0.686,8,0.131,10,0.572,13,0.646,14,1.444,15,1.441,16,0.646,18,0.981,20,0.924,22,0.352,23,0.628,24,1.377,25,2.534,27,0.767,28,2.504,29,0.981,30,0.409,33,2.475,34,0.774,36,0.503,37,0.023,38,0.639,39,0.668,40,0.799,43,1.841,44,0.846,47,0.427,48,0.198,49,0.772,52,0.537,55,0.109,56,0.048,57,0.772,59,2.146,62,0.439,63,0.981,64,0.981,65,0.767,66,1.25,67,0.686,68,0.981,69,0.537,70,0.686,71,0.572,72,0.686,73,0.537,74,0.981,75,0.537,76,0.537,77,0.895,78,1.261,79,0.686,80,0.977,81,0.981,82,0.537,83,0.686,84,0.572,85,0.981,86,0.537,87,0.981,88,0.537,89,0.686,90,0.537,91,0.686,92,0.537,93,0.686,94,0.537,95,0.686,96,0.686,97,0.537,98,0.686,99,0.537,100,0.686,101,0.537,102,0.646,103,0.537,104,0.799,105,0.686,106,0.503,107,0.686,108,0.572,109,0.537,110,0.686,111,0.537,112,0.686,113,0.537,114,0.608,115,0.503,116,0.646,117,0.686,118,0.013,119,0.013,121,1.104,122,1.447,127,1.673,129,1.547,138,1.079,150,1.032,233,1.827,242,2.059,260,2.811,265,2.329,272,0.728,273,0.728,279,1.403,280,1.315,425,1.565,436,1.315,633,4.586,634,1.883,636,2.28,641,5.077,647,5.077,732,1.883,746,4.586,747,2.059,748,3.804,749,3.259,750,3.428,751,4.151,752,6.057,753,4.567,754,3.259,755,2.575,756,3.023,757,3.023,758,3.023,759,3.023,760,3.023,761,3.023,762,2.575,763,2.575,764,2.28,765,3.681,766,2.575,767,2.059,768,3.023,769,3.681,770,2.575,771,2.575,772,2.575,773,2.575,774,2.575,775,2.575,776,2.575]],["title/injectables/FilterService.html",[143,1.191,777,2.377]],["body/injectables/FilterService.html",[2,0.186,3,0.186,8,0.159,22,0.3,23,0.72,24,1.424,27,0.88,30,0.498,34,0.765,36,1.04,37,0.023,38,0.726,39,0.531,40,0.908,44,0.995,47,0.364,48,0.241,55,0.133,56,0.058,57,1.645,78,1.133,104,0.535,118,0.015,119,0.015,123,2.114,132,4.483,133,4.081,138,1.377,143,2.046,145,2.507,146,1.601,147,2.114,148,1.961,151,1.333,166,2.025,230,2.292,233,1.333,235,2.556,272,1.193,273,1.193,396,1.708,398,2.507,538,1.827,683,2.114,696,5.103,720,2.775,777,3.375,778,2.775,779,5.992,780,4.955,781,5.992,782,4.955,783,4.955,784,4.955,785,3.681,786,4.955,787,4.955,788,3.681,789,5.992,790,3.681,791,4.955,792,5.992,793,3.681,794,4.955,795,3.681,796,4.955,797,3.681,798,3.135,799,3.681,800,6.441,801,6.254,802,6.254,803,5.992,804,3.681,805,3.681,806,4.955,807,4.955,808,5.601,809,3.681,810,3.681,811,3.681,812,3.681,813,3.681,814,4.955]],["title/components/FiltersMenuComponent.html",[0,0.011,82,0.619]],["body/components/FiltersMenuComponent.html",[0,0.016,1,0.315,2,0.089,3,0.089,4,0.403,5,0.427,6,0.403,7,0.403,8,0.077,10,0.335,13,0.379,14,1.36,15,1.36,16,0.775,17,1.018,18,0.652,20,0.615,22,0.234,23,0.526,24,1.252,25,1.993,26,1.637,27,0.51,28,2.759,29,0.652,30,0.389,32,1.776,33,2.004,34,0.713,36,0.762,37,0.023,38,0.646,39,0.576,40,0.712,43,1.809,44,0.829,47,0.503,48,0.116,49,0.453,50,0.539,51,0.539,52,0.315,55,0.064,56,0.028,57,1.17,58,1.79,59,2.434,60,1.957,61,1.957,62,0.257,63,0.652,64,0.652,65,0.51,66,1.113,67,0.403,68,0.652,69,0.315,70,0.403,71,0.335,72,0.403,73,0.315,74,0.652,75,0.315,76,0.917,77,0.643,78,1.255,79,0.403,80,0.643,81,0.652,82,0.74,83,0.403,84,0.335,85,0.652,86,0.315,87,0.652,88,0.315,89,0.403,90,0.315,91,0.403,92,0.315,93,0.403,94,0.315,95,0.403,96,0.403,97,0.315,98,0.403,99,0.315,100,0.403,101,0.315,102,0.379,103,0.315,104,0.807,105,0.403,106,0.295,107,0.403,108,0.335,109,0.315,110,0.403,111,0.315,112,0.403,113,0.643,114,0.357,115,0.295,116,0.379,117,0.403,118,0.009,119,0.009,121,0.734,122,1.039,127,1.266,129,1.252,130,1.579,138,0.775,149,0.88,150,0.605,151,0.642,164,1.531,166,1.481,207,1.337,233,1.312,242,1.208,249,3.123,252,2.816,253,3.386,260,1.682,265,1.602,272,0.692,273,0.692,279,0.823,280,0.771,302,1.957,303,1.337,304,2.816,305,2.468,306,3.216,307,1.104,308,1.208,309,1.337,310,1.957,311,2.63,312,1.957,313,2.595,314,2.852,315,2.852,316,2.838,317,1.208,318,0.945,319,1.79,320,1.79,321,4.19,322,1.957,323,1.957,324,1.337,325,3.225,326,1.208,327,1.337,328,2.751,329,1.337,330,1.337,331,2.167,332,2.63,333,2.393,334,2.468,335,1.957,336,2.081,337,2.22,338,3.314,339,1.337,340,2.63,341,1.65,342,1.65,343,1.104,344,3.088,345,3.453,346,1.104,347,1.208,348,1.208,349,1.957,350,1.957,351,1.957,352,1.208,353,1.65,354,1.957,355,1.208,356,1.208,357,1.208,358,1.337,359,2.732,360,1.337,425,1.041,477,1.018,538,2.273,633,4.237,634,1.104,636,1.337,642,1.51,647,4.489,658,1.337,660,1.208,663,3.339,677,1.51,678,3.086,679,1.51,680,2.595,688,2.595,691,2.448,716,1.337,717,1.018,718,1.51,719,1.51,720,2.732,732,1.104,735,2.448,746,1.208,750,1.79,764,1.337,770,1.51,771,1.51,772,1.51,773,1.51,774,1.51,775,3.549,776,1.51,815,4.69,816,1.51,817,2.874,818,3.624,819,2.874,820,4.58,821,2.874,822,2.874,823,4.167,824,2.874,825,2.874,826,2.874,827,2.874,828,1.773,829,2.874,830,1.773,831,1.773,832,1.773,833,2.874,834,1.773,835,2.874,836,1.773,837,1.773,838,1.773,839,1.773,840,1.773,841,1.773,842,1.773,843,1.773,844,1.208,845,2.167,846,2.874,847,1.773,848,3.624,849,1.773,850,3.624,851,1.773,852,1.773,853,2.874,854,1.773,855,1.773,856,1.773,857,1.773,858,1.773,859,2.874,860,1.773,861,1.773,862,1.773,863,1.773,864,1.773,865,2.874,866,2.874,867,2.874,868,1.957,869,1.957,870,1.51,871,3.119,872,1.51,873,1.51,874,2.448,875,2.468,876,3.086,877,2.448,878,2.448,879,2.448,880,1.51,881,1.337,882,1.337,883,2.448,884,1.51,885,1.51,886,1.337,887,1.51,888,1.337,889,1.51,890,4.863,891,3.549,892,1.51,893,1.51,894,1.51,895,2.081,896,2.448,897,3.549,898,2.167,899,1.51,900,1.51,901,1.51,902,1.51,903,1.51]],["title/modules/FormModule.html",[172,1.001,904,2.173]],["body/modules/FormModule.html",[2,0.218,3,0.218,8,0.187,37,0.023,38,0.503,47,0.517,48,0.284,55,0.231,56,0.069,62,0.629,71,1.349,78,0.819,84,1.349,104,0.629,114,0.871,118,0.017,119,0.017,146,2.637,172,1.58,174,2.009,175,2.814,176,2.149,177,3.009,183,2.736,184,2.306,185,2.306,187,2.936,235,1.769,247,2.696,366,3.589,370,4.693,371,3.264,372,3.687,373,3.264,441,3.687,904,4.48,905,3.687,906,3.687,907,3.687,908,3.687,909,5.901,910,4.329,911,5.51,912,4.329,913,4.329,914,4.329,915,5.51,916,4.155,917,4.155,918,4.329,919,4.329,920,4.329,921,4.329,922,4.329,923,3.264]],["title/components/GridComponent.html",[0,0.011,86,0.619]],["body/components/GridComponent.html",[0,0.019,1,0.583,2,0.166,3,0.166,4,0.746,5,0.792,6,0.746,7,0.746,8,0.142,10,0.622,13,0.703,14,1.455,15,1.452,16,0.703,18,1.041,20,0.981,22,0.374,23,0.666,24,1.311,25,2.708,26,1.869,27,0.814,28,2.621,29,1.297,30,0.444,32,2.254,33,2.544,34,0.723,36,0.763,37,0.023,38,0.698,39,0.612,40,0.767,41,3.905,43,1.98,44,0.767,47,0.469,48,0.215,49,0.839,50,0.999,51,0.999,52,0.937,53,2.047,54,2.478,55,0.119,56,0.052,57,0.839,58,2.047,59,2.276,60,2.239,61,2.239,62,0.477,63,1.041,64,1.041,65,0.814,66,1.297,67,0.746,68,1.041,69,0.583,70,0.746,71,0.622,72,0.746,73,0.583,74,1.041,75,0.583,76,0.583,77,0.583,78,0.999,79,0.746,80,0.583,81,1.041,82,0.583,83,0.746,84,0.622,85,1.041,86,1.014,87,1.041,88,0.583,89,0.746,90,0.583,91,0.746,92,0.583,93,0.746,94,0.583,95,0.746,96,0.746,97,0.583,98,0.746,99,0.583,100,0.746,101,0.583,102,0.703,103,0.583,104,0.904,105,0.746,106,0.547,107,0.746,108,0.622,109,0.583,110,0.746,111,0.583,112,0.746,113,0.583,114,0.661,115,0.547,116,0.703,117,0.746,118,0.014,119,0.014,121,1.171,122,1.514,127,1.736,129,1.59,138,0.703,150,1.122,249,1.632,253,2.443,304,3.575,308,2.239,311,1.888,328,1.751,337,1.751,338,1.751,340,1.888,341,1.888,436,1.43,871,3.123,888,3.457,895,1.888,924,2.799,925,5.28,926,4.585,927,2.239,928,3.287,929,3.287,930,3.287,931,3.287,932,3.287,933,3.287,934,2.799,935,3.287,936,3.287,937,3.287,938,3.905,939,3.287,940,2.239,941,2.799,942,2.799,943,2.799]],["title/components/GridsterComponent.html",[0,0.011,88,0.619]],["body/components/GridsterComponent.html",[0,0.015,1,0.378,2,0.107,3,0.107,4,0.483,5,0.513,6,0.483,7,0.483,8,0.092,10,0.403,13,0.455,14,1.393,15,1.388,16,0.455,18,0.755,20,0.711,22,0.271,23,0.483,24,1.237,25,2.311,26,1.523,27,0.59,29,0.755,30,0.288,32,1.923,33,2.171,34,0.735,36,0.834,37,0.023,38,0.667,39,0.594,40,0.876,43,1.614,44,0.771,47,0.465,48,0.14,49,0.544,50,0.647,51,0.647,52,0.378,55,0.077,56,0.034,62,0.309,63,0.755,64,0.755,65,0.59,66,1.339,67,0.483,68,0.755,69,0.378,70,0.483,71,0.403,72,0.483,73,0.378,74,0.755,75,0.378,76,0.378,77,0.378,78,0.948,79,0.483,80,0.378,81,0.755,82,0.378,83,0.483,84,0.403,85,0.755,86,0.378,87,0.755,88,0.82,89,0.483,90,0.378,91,0.483,92,0.378,93,0.483,94,0.378,95,0.483,96,0.483,97,0.378,98,0.483,99,0.378,100,0.483,101,0.378,102,0.455,103,0.378,104,0.771,105,0.483,106,0.354,107,0.483,108,0.403,109,0.378,110,0.483,111,0.378,112,0.483,113,0.378,114,0.428,115,0.354,116,0.455,117,0.483,118,0.01,119,0.01,121,0.849,122,1.437,127,1.404,129,1.356,131,2.414,137,2.506,138,1.136,144,0.685,146,0.926,150,0.727,151,1.204,166,2.787,201,1.779,233,2.137,235,2.729,249,2.03,272,0.513,273,0.513,275,1.65,306,2.546,307,1.326,311,1.909,313,1.326,314,2.878,315,2.07,319,1.326,320,1.326,325,2.956,328,1.134,332,2.878,333,1.222,336,2.654,337,2.462,338,1.134,340,1.222,341,1.222,342,1.909,343,1.326,344,1.222,346,1.326,353,1.222,436,0.926,511,2.83,538,2.488,543,4.524,616,1.813,680,3.308,683,1.222,703,3.413,777,3.617,871,3.147,875,1.45,881,3.484,882,3.484,895,1.909,927,1.45,940,1.45,941,3.482,942,1.813,943,1.813,944,1.813,945,5.012,946,4.089,947,3.323,948,5.311,949,3.935,950,4.62,951,3.323,952,4.089,953,3.323,954,3.147,955,2.128,956,2.128,957,3.323,958,2.128,959,3.323,960,2.128,961,2.128,962,3.323,963,2.128,964,2.128,965,3.323,966,2.128,967,2.128,968,2.128,969,4.62,970,2.128,971,5.549,972,4.62,973,6.033,974,4.089,975,3.323,976,2.128,977,2.128,978,2.128,979,2.83,980,3.323,981,3.323,982,3.323,983,1.605,984,2.128,985,2.128,986,2.128,987,2.128,988,3.323,989,2.128,990,2.128,991,3.323,992,2.128,993,3.323,994,2.128,995,2.128,996,2.128,997,2.128,998,2.128,999,2.128,1000,1.813,1001,1.813,1002,2.128,1003,2.128,1004,3.482,1005,2.128,1006,2.128,1007,2.128,1008,2.128,1009,2.128,1010,2.128,1011,2.128,1012,2.128,1013,2.128,1014,2.128,1015,2.128,1016,2.128,1017,2.128,1018,2.128,1019,2.128,1020,2.128,1021,2.128,1022,2.128,1023,2.128,1024,2.128,1025,2.128,1026,2.128,1027,2.128,1028,2.128,1029,2.128,1030,2.128,1031,3.323,1032,2.128,1033,2.128,1034,2.128,1035,3.323,1036,2.128,1037,2.128,1038,2.128,1039,2.128,1040,2.128,1041,2.128,1042,2.128,1043,2.128,1044,2.128,1045,2.128,1046,2.128,1047,2.128,1048,2.128,1049,2.128,1050,2.128,1051,2.128,1052,2.128,1053,2.128,1054,3.935,1055,3.323,1056,2.128,1057,2.128,1058,2.128,1059,3.323,1060,2.128,1061,2.128,1062,3.323,1063,3.323,1064,2.128,1065,2.128,1066,2.128,1067,2.128,1068,3.935,1069,3.323,1070,2.128,1071,2.128,1072,4.089,1073,2.128,1074,1.813,1075,1.813,1076,1.813,1077,2.128,1078,3.323,1079,2.128,1080,2.128,1081,2.128,1082,2.128,1083,1.605,1084,2.128,1085,3.323,1086,2.128,1087,2.128,1088,2.128,1089,2.128,1090,2.128]],["title/components/HeaderComponent.html",[0,0.011,90,0.619]],["body/components/HeaderComponent.html",[0,0.019,1,0.696,2,0.198,3,0.198,4,0.89,5,0.944,6,0.89,7,0.89,8,0.169,10,0.742,13,0.838,14,1.474,15,1.472,16,0.838,18,1.173,20,1.105,22,0.421,23,0.75,24,1.04,26,1.918,29,1.173,30,0.53,31,2.67,32,2.375,34,0.672,36,0.652,37,0.022,38,0.714,39,0.553,40,0.75,47,0.379,48,0.257,50,1.191,51,1.191,52,0.696,55,0.142,56,0.062,62,0.569,63,1.173,64,1.173,65,0.917,66,1.395,67,0.89,68,1.173,69,0.696,70,0.89,71,0.742,72,0.89,73,0.696,74,1.173,75,0.696,76,0.696,77,0.696,78,1.093,79,0.89,80,0.696,81,1.173,82,0.696,83,0.89,84,0.742,85,1.173,86,0.696,87,1.173,88,0.696,89,0.89,90,1.091,91,0.89,92,0.696,93,0.89,94,0.696,95,0.89,96,0.89,97,0.696,98,0.89,99,0.696,100,0.89,101,0.696,102,0.838,103,0.696,104,0.892,105,0.89,106,0.652,107,0.89,108,0.742,109,0.696,110,0.89,111,0.696,112,0.89,113,0.696,114,0.789,115,0.652,116,0.838,117,0.89,118,0.016,119,0.016,164,2.753,318,3.274,436,1.706,1091,3.339,1092,5.781,1093,5.168,1094,5.44,1095,5.168,1096,3.921]],["title/components/LanguageComponent.html",[0,0.011,92,0.619]],["body/components/LanguageComponent.html",[0,0.019,1,0.606,2,0.172,3,0.172,4,0.775,5,0.822,6,0.775,7,0.775,8,0.148,10,0.646,13,0.73,14,1.459,15,1.457,16,0.73,18,1.069,20,1.007,22,0.383,23,0.684,24,1.226,26,1.747,27,0.836,29,1.069,30,0.462,31,2.325,32,2.281,33,2.574,34,0.732,36,0.783,37,0.023,38,0.708,39,0.622,40,0.782,44,0.684,47,0.426,48,0.224,49,0.872,50,1.037,51,1.037,52,0.606,55,0.123,56,0.054,58,3.922,62,0.496,63,1.069,64,1.069,65,0.836,66,1.319,67,0.775,68,1.069,69,0.606,70,0.775,71,0.646,72,0.775,73,0.606,74,1.069,75,0.606,76,0.606,77,0.606,78,1.019,79,0.775,80,0.606,81,1.069,82,0.606,83,0.775,84,0.646,85,1.069,86,0.606,87,1.069,88,0.606,89,0.775,90,0.606,91,0.775,92,1.031,93,0.775,94,0.606,95,1.465,96,0.775,97,0.606,98,0.775,99,0.606,100,0.775,101,0.606,102,0.73,103,0.606,104,0.843,105,0.775,106,0.568,107,0.775,108,0.646,109,0.606,110,0.775,111,0.606,112,0.775,113,0.606,114,0.687,115,0.568,116,0.73,117,0.775,118,0.015,119,0.015,121,1.202,122,1.545,127,1.765,132,3.669,133,3.955,138,1.007,143,1.165,145,2.325,146,1.485,147,1.961,148,1.819,151,1.236,152,2.574,155,4.009,272,0.822,273,0.822,436,1.485,655,3.617,1097,2.908,1098,5.388,1099,4.707,1100,3.549,1101,3.414,1102,3.414,1103,4.707,1104,3.414,1105,6.298,1106,4.707,1107,4.707,1108,3.414,1109,4.707,1110,3.414,1111,3.414,1112,3.414,1113,4.707]],["title/components/LanguageSwitchComponent.html",[0,0.011,94,0.619]],["body/components/LanguageSwitchComponent.html",[0,0.019,1,0.635,2,0.181,3,0.181,4,0.812,5,0.862,6,0.812,7,0.812,8,0.155,10,0.677,13,0.765,14,1.464,15,1.462,16,0.765,18,1.104,20,1.04,22,0.396,23,0.706,24,1.285,25,2.779,26,1.776,27,0.863,28,2.741,29,1.104,30,0.657,31,2.437,32,2.313,33,2.611,34,0.688,36,0.809,37,0.023,38,0.719,39,0.591,40,0.802,43,1.678,44,0.706,47,0.435,48,0.235,49,0.914,50,1.087,51,1.087,52,0.635,55,0.129,56,0.057,57,0.914,58,2.229,59,2.413,60,2.437,61,2.437,62,0.52,63,1.104,64,1.104,65,0.863,66,1.345,67,0.812,68,1.104,69,0.635,70,0.812,71,0.677,72,0.812,73,0.635,74,1.104,75,0.635,76,0.635,77,0.635,78,1.044,79,0.812,80,0.635,81,1.104,82,0.635,83,0.812,84,0.677,85,1.104,86,0.635,87,1.104,88,0.635,89,0.812,90,0.635,91,0.812,92,0.98,93,0.812,94,1.051,95,1.548,96,0.812,97,0.635,98,0.812,99,0.635,100,0.812,101,0.635,102,0.765,103,0.635,104,0.86,105,0.812,106,0.595,107,0.812,108,0.677,109,0.635,110,0.812,111,0.635,112,0.812,113,0.635,114,0.72,115,0.595,116,0.765,117,0.812,118,0.015,119,0.015,713,3.028,1114,5.275,1115,4.67,1116,3.048,1117,5.521,1118,4.861,1119,3.578,1120,4.861,1121,3.578,1122,3.578,1123,3.578,1124,3.578,1125,4.861]],["title/components/NotificationsButtonComponent.html",[0,0.011,97,0.619]],["body/components/NotificationsButtonComponent.html",[0,0.02,1,0.727,2,0.207,3,0.207,4,0.93,5,0.987,6,0.93,7,0.93,8,0.177,10,0.775,12,3.089,13,0.876,14,1.478,15,1.477,16,0.876,17,3.055,18,1.208,19,5.03,20,1.137,21,4.53,22,0.334,29,1.208,30,0.798,34,0.476,37,0.022,38,0.686,40,0.595,47,0.301,48,0.269,52,0.727,55,0.148,56,0.065,62,0.595,63,1.208,64,1.208,65,0.944,66,1.419,67,0.93,68,1.208,69,0.727,70,0.93,71,0.775,72,0.93,73,0.727,74,1.208,75,0.727,76,0.727,77,0.727,78,1.117,79,0.93,80,0.727,81,1.208,82,0.727,83,0.93,84,0.775,85,1.208,86,0.727,87,1.208,88,0.727,89,0.93,90,0.727,91,0.93,92,0.727,93,0.93,94,0.727,95,0.93,96,0.93,97,1.11,98,1.555,99,0.727,100,0.93,101,0.727,102,0.876,103,0.727,104,0.908,105,0.93,106,0.682,107,0.93,108,0.775,109,0.727,110,0.93,111,0.727,112,0.93,113,0.727,114,0.824,115,0.682,116,0.876,117,0.93,118,0.017,119,0.017,1126,4.53,1127,4.01,1128,4.097,1129,5.319]],["title/directives/OnCreateDirective.html",[65,0.619,115,0.581]],["body/directives/OnCreateDirective.html",[2,0.253,3,0.253,8,0.217,13,1.072,14,1.214,22,0.408,27,1.071,30,0.875,34,0.752,37,0.023,39,0.537,43,1.523,44,0.728,47,0.368,48,0.329,55,0.181,56,0.08,65,1.149,115,1.144,116,1.29,118,0.019,119,0.019,121,1.541,122,1.857,127,2.042,138,1.072,318,2.671,395,4.576,396,2.327,1130,5.722,1131,4.269,1132,5.722,1133,6.034,1134,5.013,1135,5.013,1136,5.013]],["title/classes/ProcessDefinition.html",[56,0.055,1137,2.377]],["body/classes/ProcessDefinition.html",[2,0.265,3,0.265,8,0.227,22,0.428,23,0.901,34,0.767,37,0.022,38,0.793,39,0.707,55,0.19,56,0.098,118,0.019,119,0.019,425,2.616,655,4.25,750,4.25,1137,4.227,1138,4.476,1139,5.255,1140,5.255,1141,5.255]],["title/components/ProcessFormComponent.html",[0,0.011,99,0.619]],["body/components/ProcessFormComponent.html",[0,0.018,1,0.559,2,0.159,3,0.159,4,0.715,5,0.759,6,0.715,7,0.715,8,0.136,10,0.596,13,0.674,14,1.45,15,1.447,16,0.674,18,1.011,20,0.952,22,0.363,23,0.646,24,1.365,27,0.79,29,1.488,30,0.602,34,0.749,36,0.74,37,0.023,38,0.687,39,0.69,40,0.75,43,1.866,44,0.646,47,0.412,48,0.207,52,0.559,55,0.114,56,0.05,62,0.458,63,1.011,64,1.011,65,0.79,66,1.273,67,0.715,68,1.011,69,0.559,70,0.715,71,0.596,72,0.715,73,0.559,74,1.011,75,0.559,76,0.559,77,0.559,78,0.976,79,0.715,80,0.559,81,1.011,82,0.559,83,0.715,84,0.596,85,1.011,86,0.559,87,1.011,88,0.559,89,0.715,90,0.559,91,0.715,92,0.559,93,0.715,94,0.559,95,0.715,96,0.715,97,0.559,98,0.715,99,0.996,100,0.715,101,0.559,102,0.674,103,0.559,104,0.814,105,0.715,106,0.524,107,0.715,108,0.596,109,0.559,110,0.715,111,0.559,112,0.715,113,0.559,114,0.634,115,0.524,116,0.674,117,0.715,118,0.014,119,0.014,121,1.137,122,1.48,127,1.704,129,1.568,131,2.952,138,0.952,144,1.015,150,1.076,201,2.574,247,2.772,260,2.85,265,2.361,272,0.759,273,1.243,275,2.21,279,1.463,280,1.371,425,1.612,732,1.963,954,4.182,1142,4.943,1143,4.943,1144,2.684,1145,5.161,1146,4.451,1147,5.609,1148,3.791,1149,3.151,1150,4.451,1151,3.151,1152,3.357,1153,3.151,1154,2.684,1155,3.151,1156,3.151,1157,3.151,1158,3.151,1159,3.151,1160,3.151,1161,3.151,1162,4.451,1163,3.151,1164,4.451,1165,3.357,1166,3.151,1167,3.151,1168,3.151,1169,2.376,1170,3.151,1171,3.151,1172,3.151,1173,3.151,1174,3.151,1175,2.684]],["title/components/ProcessListComponent.html",[0,0.011,52,0.619]],["body/components/ProcessListComponent.html",[0,0.018,1,0.568,2,0.162,3,0.162,4,0.727,5,0.771,6,0.727,7,0.727,8,0.138,10,0.605,13,0.685,14,1.451,15,1.449,16,0.685,18,1.022,20,0.963,22,0.367,23,0.654,24,1.356,25,2.685,26,1.291,27,0.799,29,1.494,30,0.433,33,2.522,34,0.752,36,0.749,37,0.023,38,0.691,39,0.661,40,0.756,43,1.876,44,0.654,47,0.453,48,0.21,49,0.818,52,1.003,53,4.097,55,0.116,56,0.051,62,0.465,63,1.022,64,1.022,65,0.799,66,1.282,67,0.727,68,1.022,69,0.568,70,0.727,71,0.605,72,0.727,73,0.568,74,1.022,75,0.568,76,0.568,77,0.568,78,0.985,79,0.727,80,0.568,81,1.022,82,0.568,83,0.727,84,0.605,85,1.022,86,0.568,87,1.022,88,0.568,89,0.727,90,0.568,91,0.727,92,0.568,93,0.727,94,0.568,95,0.727,96,0.727,97,0.568,98,0.727,99,0.568,100,0.727,101,0.568,102,0.685,103,0.568,104,0.82,105,0.727,106,0.533,107,0.727,108,0.605,109,0.568,110,0.727,111,0.568,112,0.727,113,0.568,114,0.644,115,0.533,116,0.685,117,0.727,118,0.014,119,0.014,121,1.15,122,1.493,127,1.716,129,1.576,131,2.96,138,0.963,144,1.031,150,1.093,260,2.762,264,2.727,265,2.373,272,0.771,273,0.771,279,1.486,280,1.393,325,2.398,355,2.18,436,1.393,538,1.589,767,2.18,898,3.394,1137,4.481,1142,4.961,1175,2.727,1176,2.727,1177,5.206,1178,4.501,1179,4.501,1180,4.501,1181,3.201,1182,4.501,1183,3.201,1184,3.201,1185,3.201,1186,3.201,1187,3.201,1188,3.201,1189,3.201,1190,3.201,1191,3.201,1192,4.501,1193,3.201,1194,3.201,1195,2.414,1196,2.727]],["title/modules/SharedModule.html",[172,1.001,366,1.859]],["body/modules/SharedModule.html",[2,0.211,3,0.211,8,0.18,37,0.023,47,0.518,48,0.274,49,1.066,50,1.269,51,1.269,55,0.227,56,0.066,62,0.606,90,1.26,92,1.271,94,1.26,97,1.26,113,1.271,118,0.017,119,0.017,172,1.544,174,1.938,175,2.766,176,2.073,177,2.073,183,2.673,184,2.225,185,2.225,187,2.869,366,3.871,463,5.076,465,5.076,844,2.844,845,3.149,1115,3.149,1127,3.149,1197,3.556,1198,3.556,1199,3.556,1200,4.176,1201,4.586,1202,4.176,1203,5.96,1204,3.556,1205,4.176,1206,4.176,1207,4.176,1208,4.176,1209,4.176,1210,3.556,1211,5.384,1212,3.556]],["title/components/SortOptionsComponent.html",[0,0.011,101,0.619]],["body/components/SortOptionsComponent.html",[0,0.018,1,0.538,2,0.153,3,0.153,4,0.689,5,0.731,6,0.689,7,0.689,8,0.131,10,0.574,13,0.649,14,1.445,15,1.442,16,0.649,18,0.984,20,0.926,22,0.353,23,0.629,24,1.173,25,2.537,26,1.242,27,0.769,29,0.984,30,0.41,33,2.478,34,0.725,36,0.721,37,0.023,38,0.816,39,0.746,40,0.847,44,0.629,47,0.371,48,0.199,49,0.775,52,0.538,55,0.11,56,0.048,57,0.775,62,0.44,63,0.984,64,0.984,65,1.215,66,1.252,67,0.689,68,0.984,69,0.538,70,0.689,71,0.574,72,0.689,73,0.538,74,0.984,75,0.538,76,0.538,77,0.538,78,0.956,79,0.689,80,0.538,81,0.984,82,0.538,83,0.689,84,0.574,85,0.984,86,0.538,87,0.984,88,0.538,89,0.689,90,0.538,91,0.689,92,0.538,93,0.689,94,0.538,95,0.689,96,0.689,97,0.538,98,0.689,99,0.538,100,0.689,101,0.979,102,1.502,103,0.538,104,0.801,105,0.689,106,0.505,107,0.689,108,0.574,109,0.538,110,0.689,111,0.538,112,0.689,113,0.538,114,0.61,115,0.505,116,0.649,117,0.689,118,0.013,119,0.013,122,0.87,129,1.721,137,3.266,138,0.926,150,1.035,166,1.77,242,2.066,272,1.043,273,1.043,353,3.482,436,1.32,658,3.266,660,2.95,661,4.695,666,3.266,671,3.266,683,3.869,716,3.266,747,2.066,748,3.811,749,3.266,751,4.157,754,2.287,767,2.066,769,2.583,1213,5.436,1214,4.813,1215,4.332,1216,3.033,1217,3.033,1218,4.332,1219,3.033,1220,4.332,1221,3.033,1222,5.513,1223,3.033,1224,3.033,1225,3.033,1226,4.332]],["title/classes/Task.html",[56,0.055,104,0.507]],["body/classes/Task.html",[2,0.265,3,0.265,8,0.227,22,0.428,23,0.901,34,0.767,37,0.022,38,0.793,39,0.707,55,0.19,56,0.098,104,0.901,118,0.019,119,0.019,425,2.616,655,4.25,750,4.25,1227,4.476,1228,5.255,1229,5.255,1230,5.255]],["title/components/TaskDetailsComponent.html",[0,0.011,103,0.619]],["body/components/TaskDetailsComponent.html",[0,0.018,1,0.537,2,0.153,3,0.153,4,0.686,5,0.728,6,0.686,7,0.686,8,0.131,10,0.572,13,0.646,14,1.444,15,1.441,16,0.646,17,1.736,18,0.981,20,0.924,22,0.352,23,0.628,24,1.219,27,0.767,29,0.981,30,0.584,34,0.741,36,0.503,37,0.023,38,0.639,39,0.54,40,0.628,43,1.841,44,0.628,47,0.37,48,0.198,52,0.537,55,0.109,56,0.048,62,0.439,63,0.981,64,0.981,65,0.767,66,1.25,67,0.686,68,0.981,69,0.537,70,0.686,71,0.572,72,0.686,73,0.537,74,0.981,75,0.537,76,0.537,77,0.537,78,0.954,79,0.686,80,0.537,81,0.981,82,0.537,83,0.686,84,0.572,85,0.981,86,0.537,87,0.981,88,0.537,89,0.686,90,0.537,91,0.686,92,0.537,93,0.686,94,0.537,95,0.686,96,0.686,97,0.537,98,0.981,99,0.537,100,0.686,101,0.537,102,0.646,103,0.977,104,1,105,0.686,106,0.503,107,0.686,108,0.572,109,0.537,110,0.686,111,0.537,112,0.686,113,0.537,114,0.608,115,0.503,116,0.646,117,0.686,118,0.013,119,0.013,121,1.104,122,1.447,127,1.673,129,1.547,131,2.929,138,0.924,144,0.974,150,1.032,164,2.303,166,1.766,183,1.501,224,2.28,233,1.565,235,1.236,248,2.575,249,2.146,252,1.736,272,0.728,273,0.728,302,3.436,304,1.736,317,2.059,318,2.933,325,3.459,328,1.611,332,1.736,333,1.736,336,2.482,337,1.611,338,2.688,342,1.736,344,1.736,395,3.436,396,2.006,535,2.575,663,2.944,683,2.482,703,2.059,869,2.059,875,2.059,895,1.736,927,2.059,938,2.575,940,2.059,949,4.297,979,3.681,1000,2.575,1001,2.575,1004,2.575,1083,2.28,1094,2.575,1195,4.151,1231,4.043,1232,4.895,1233,2.575,1234,5.045,1235,4.322,1236,5.505,1237,5.505,1238,4.322,1239,3.023,1240,3.023,1241,3.023,1242,3.023,1243,3.023,1244,3.023,1245,3.023,1246,3.023,1247,3.023,1248,3.023,1249,5.505,1250,3.023,1251,3.023,1252,3.023,1253,2.28,1254,3.023,1255,3.023,1256,3.023,1257,3.023,1258,3.023,1259,3.023,1260,3.023,1261,2.575,1262,3.023,1263,3.023]],["title/components/TaskEditComponent.html",[0,0.011,106,0.581]],["body/components/TaskEditComponent.html",[0,0.016,1,0.402,2,0.114,3,0.114,4,0.515,5,0.546,6,0.515,7,0.515,8,0.098,10,0.429,13,0.485,14,1.403,15,1.399,16,0.485,18,0.792,20,0.746,22,0.284,23,0.507,24,1.276,26,1.563,27,0.619,28,2.705,29,0.792,30,0.472,32,1.974,34,0.761,36,0.708,37,0.023,38,0.633,39,0.628,40,0.694,43,1.656,44,0.892,47,0.417,48,0.149,49,0.579,50,0.689,51,0.689,52,0.402,55,0.082,56,0.036,57,1.318,59,2.112,62,0.329,63,0.792,64,0.792,65,0.619,66,1.085,67,0.515,68,0.792,69,0.402,70,0.515,71,0.429,72,0.515,73,0.402,74,0.792,75,0.402,76,0.848,77,0.402,78,0.805,79,0.515,80,0.402,81,0.792,82,0.402,83,0.515,84,0.429,85,0.792,86,0.402,87,0.792,88,0.402,89,0.515,90,0.402,91,0.515,92,0.402,93,0.515,94,0.402,95,0.515,96,0.515,97,0.402,98,0.515,99,0.402,100,0.515,101,0.402,102,0.485,103,0.402,104,0.98,105,0.515,106,0.795,107,0.515,108,0.429,109,0.402,110,0.515,111,0.402,112,0.515,113,0.402,114,0.456,115,0.377,116,0.485,117,0.515,118,0.013,119,0.011,121,0.891,122,1.22,127,1.452,129,1.392,130,1.539,131,2.759,138,1.103,144,0.73,149,1.125,150,0.774,151,1.541,166,1.426,175,1.052,201,2.371,233,1.541,235,1.426,247,2.976,260,1.975,265,1.837,272,1.025,273,1.025,275,1.732,279,1.052,280,0.986,688,2.173,713,1.412,714,1.544,717,1.302,753,2.631,868,2.898,923,2.631,927,1.544,954,3.712,1100,1.709,1148,2.972,1152,2.631,1154,1.93,1165,3.208,1169,2.631,1231,4.117,1253,2.631,1264,4.502,1265,1.709,1266,3.624,1267,3.624,1268,2.972,1269,3.603,1270,4.07,1271,4.07,1272,4.07,1273,3.49,1274,3.603,1275,4.281,1276,3.49,1277,2.267,1278,2.267,1279,2.267,1280,2.972,1281,2.267,1282,2.267,1283,2.267,1284,2.267,1285,2.972,1286,2.972,1287,2.972,1288,2.972,1289,2.267,1290,2.267,1291,2.972,1292,2.267,1293,2.267,1294,2.267,1295,2.267,1296,1.93,1297,1.412,1298,1.412,1299,1.93,1300,1.93,1301,1.93,1302,3.208,1303,1.709,1304,1.709,1305,2.631,1306,2.004,1307,2.972,1308,2.972,1309,2.972,1310,2.972,1311,2.972,1312,1.93,1313,3.624,1314,1.93,1315,1.93,1316,1.709,1317,1.93,1318,1.93,1319,1.93,1320,1.93,1321,2.972,1322,1.93,1323,2.972,1324,2.972,1325,2.972,1326,2.972,1327,3.624,1328,2.972,1329,1.93,1330,2.972,1331,1.93,1332,1.93,1333,3.624,1334,1.93,1335,1.93,1336,1.93,1337,1.93,1338,1.93,1339,1.93,1340,1.93,1341,1.93,1342,1.93,1343,1.93,1344,1.93,1345,1.93,1346,1.93,1347,1.93,1348,1.93,1349,1.93,1350,1.93,1351,1.93,1352,1.93,1353,1.93,1354,1.93,1355,1.93,1356,1.93,1357,1.93,1358,1.93,1359,1.93,1360,3.49,1361,3.49]],["title/components/TaskItemComponent.html",[0,0.011,109,0.619]],["body/components/TaskItemComponent.html",[0,0.015,1,0.357,2,0.101,3,0.101,4,0.456,5,0.765,6,0.456,7,0.456,8,0.087,10,0.38,13,0.43,14,1.383,15,1.392,16,0.842,18,0.721,20,0.679,22,0.259,23,0.461,24,0.793,26,1.614,27,0.564,28,1.955,29,0.721,30,0.429,34,0.726,36,0.745,37,0.023,38,0.726,39,0.479,40,0.788,43,1.36,44,0.817,47,0.413,48,0.132,49,0.513,52,0.357,55,0.073,56,0.032,57,0.513,59,1.577,62,0.292,63,0.721,64,0.721,65,0.564,66,1.016,67,0.456,68,0.721,69,0.357,70,0.456,71,0.38,72,0.456,73,0.357,74,0.721,75,0.357,76,0.964,77,0.357,78,0.745,79,0.456,80,0.357,81,0.721,82,0.357,83,0.456,84,0.38,85,0.721,86,0.357,87,0.721,88,0.357,89,0.456,90,0.357,91,0.456,92,0.357,93,0.456,94,0.357,95,0.456,96,0.456,97,0.357,98,0.456,99,0.357,100,0.456,101,0.357,102,0.43,103,0.357,104,0.938,105,0.456,106,0.334,107,0.456,108,0.38,109,0.795,110,0.456,111,0.357,112,0.456,113,0.357,114,0.981,115,0.334,116,0.43,117,0.456,118,0.01,119,0.01,121,0.811,122,1.13,127,1.197,129,1.143,130,1.669,131,2.449,138,0.957,144,0.647,149,0.997,150,0.686,151,1.621,233,1.621,235,0.821,249,1.577,252,1.154,253,3.161,260,1.828,265,1.721,272,0.484,273,1.429,276,4.415,279,0.932,280,0.874,304,3.327,305,3.048,306,3.036,307,1.251,311,2.262,312,1.368,313,2.453,314,2.453,315,1.978,316,2.163,318,2.998,319,1.251,320,1.251,322,2.163,323,1.368,325,2.892,326,1.368,328,1.07,332,2.977,333,2.262,334,1.368,335,2.682,336,2.262,337,3.28,338,3.225,340,2.571,341,1.824,342,2.571,343,1.978,344,3.408,346,1.978,347,2.163,348,2.163,349,2.682,350,2.682,351,2.682,352,1.368,353,1.824,354,1.368,356,2.163,357,1.368,395,2.682,396,0.932,407,1.711,425,1.15,538,1.955,656,1.711,660,3.946,668,4.152,671,2.97,680,2.788,688,1.251,713,1.251,714,3.697,717,2.977,732,1.251,737,2.705,868,3.697,869,1.368,886,2.395,895,1.154,940,1.368,1054,3.354,1068,1.711,1074,2.705,1075,4.152,1076,3.354,1083,1.515,1132,3.812,1195,1.515,1196,1.711,1231,3.94,1269,1.515,1274,3.375,1275,3.908,1302,3.375,1303,1.515,1304,1.515,1305,1.515,1306,1.154,1316,1.515,1362,4.77,1363,1.711,1364,3.938,1365,3.176,1366,3.176,1367,3.176,1368,3.176,1369,4.476,1370,3.938,1371,2.009,1372,2.009,1373,2.009,1374,2.009,1375,3.176,1376,2.009,1377,2.009,1378,3.176,1379,2.009,1380,2.009,1381,2.009,1382,2.009,1383,2.009,1384,2.009,1385,2.009,1386,2.009,1387,3.176,1388,2.009,1389,4.476,1390,4.476,1391,4.476,1392,2.009,1393,2.009,1394,2.009,1395,3.176,1396,2.009,1397,3.176,1398,2.009,1399,3.176,1400,2.009,1401,2.009,1402,2.009,1403,2.009,1404,3.176,1405,3.938,1406,2.009,1407,3.176,1408,2.009,1409,3.176,1410,3.176,1411,2.009,1412,3.938,1413,3.176,1414,3.176,1415,3.176,1416,4.476,1417,3.176,1418,3.176,1419,3.176,1420,2.009,1421,2.009,1422,2.009,1423,2.009,1424,3.176,1425,2.009,1426,2.009,1427,2.009,1428,2.009,1429,2.009,1430,2.009,1431,2.009,1432,2.009,1433,2.009,1434,2.009,1435,2.009,1436,2.009,1437,2.009,1438,2.009,1439,2.009,1440,2.009,1441,2.009,1442,4.875,1443,2.009,1444,2.009,1445,3.176,1446,2.009,1447,2.009,1448,2.009]],["title/components/TasksComponent.html",[0,0.011,111,0.619]],["body/components/TasksComponent.html",[0,0.017,1,0.467,2,0.133,3,0.133,4,0.598,5,0.634,6,0.598,7,0.598,8,0.114,10,0.498,13,0.563,14,1.426,15,1.426,16,0.563,17,1.511,18,0.887,20,0.835,22,0.214,29,0.887,30,0.63,34,0.306,37,0.023,38,0.541,40,0.382,47,0.514,48,0.173,52,0.467,55,0.095,56,0.042,62,0.382,63,0.887,64,0.887,65,0.694,66,1.31,67,0.598,68,0.887,69,0.467,70,0.598,71,0.498,72,0.598,73,0.467,74,0.887,75,0.467,76,0.467,77,0.467,78,0.975,79,0.598,80,0.467,81,0.887,82,0.467,83,0.598,84,0.498,85,0.887,86,0.467,87,0.887,88,0.467,89,0.598,90,0.467,91,0.598,92,0.467,93,0.598,94,0.467,95,0.598,96,0.598,97,0.467,98,0.598,99,0.467,100,0.598,101,0.467,102,0.563,103,0.467,104,0.868,105,0.598,106,0.438,107,0.598,108,0.498,109,0.467,110,0.598,111,0.915,112,0.598,113,0.467,114,0.53,115,0.438,116,0.563,117,0.598,118,0.012,119,0.012,164,2.081,207,1.984,249,3.367,252,3.314,253,3.636,302,2.661,303,1.984,304,3.314,305,3.173,306,3.721,307,1.639,308,1.792,309,1.984,310,2.661,311,3.163,312,2.661,313,3.211,314,3.43,315,3.43,316,3.511,317,1.792,318,1.402,319,2.433,320,2.433,321,4.727,322,2.661,323,2.661,324,1.984,325,3.528,326,1.792,327,1.984,328,3.183,329,1.984,330,1.984,331,2.946,332,3.163,333,2.961,334,3.173,335,2.661,336,2.676,337,2.747,338,3.588,339,1.984,340,3.163,341,2.244,342,2.244,343,1.639,344,3.524,345,4.153,346,1.639,347,1.792,348,1.792,349,2.661,350,2.661,351,2.661,352,1.792,353,2.244,354,2.661,355,1.792,356,1.792,357,1.792,358,1.984,359,3.513,360,1.984,538,1.307,663,3.93,680,2.902,717,1.511,869,2.661,870,2.242,871,3.751,872,2.242,873,2.242,874,3.327,875,3.173,876,3.968,877,3.327,878,3.327,879,3.327,880,2.242,881,1.984,882,1.984,883,3.327,884,2.242,885,2.242,886,1.984,887,2.242,888,1.984,889,2.242,890,5.433,891,4.391,892,2.242,893,2.242,894,2.242,895,2.676,896,3.327,897,4.391,898,2.946,899,2.242,900,2.242,901,2.242,902,2.242,903,2.242,1449,2.242,1450,4.659,1451,3.907,1452,2.632]],["title/modules/TasksModule.html",[172,1.001,1453,2.377]],["body/modules/TasksModule.html",[0,0.016,1,1.113,2,0.17,3,0.17,8,0.145,10,0.881,11,2.534,37,0.023,47,0.527,48,0.22,52,1.163,53,2.093,54,2.534,55,0.168,56,0.053,57,0.858,62,0.488,77,1.163,80,1.163,82,1.113,86,1.113,88,1.113,99,1.141,101,1.163,103,1.113,106,1.069,108,1.185,109,1.113,111,1.141,115,1.043,118,0.014,119,0.014,144,1.082,146,1.462,172,1.336,174,1.56,175,2.48,176,1.669,177,1.669,183,2.312,184,1.791,185,1.791,187,2.481,200,2.289,201,2.325,204,4.029,366,3.339,373,2.534,377,2.863,378,2.863,457,3.966,458,3.966,459,2.534,634,2.093,746,2.289,764,2.534,815,2.534,845,3.511,904,3.904,934,3.966,983,2.534,1143,2.534,1201,3.966,1210,2.863,1214,2.534,1232,2.534,1264,2.289,1362,2.534,1453,4.996,1454,2.863,1455,2.863,1456,3.361,1457,3.361,1458,4.657,1459,4.657,1460,4.657,1461,3.361,1462,3.361,1463,3.361,1464,5.344,1465,3.361,1466,3.361,1467,3.361,1468,3.361,1469,3.361,1470,5.769,1471,3.361,1472,3.361,1473,2.863,1474,3.361,1475,3.361,1476,3.361,1477,3.361,1478,3.361,1479,3.361]],["title/components/UserOptionsComponent.html",[0,0.011,113,0.619]],["body/components/UserOptionsComponent.html",[0,0.018,1,0.556,2,0.158,3,0.158,4,0.711,5,0.754,6,0.711,7,0.711,8,0.135,10,0.592,13,0.669,14,1.449,15,1.446,16,0.669,18,1.006,20,0.947,22,0.361,23,0.643,24,1.384,25,2.666,26,1.903,27,0.786,29,1.006,30,0.423,32,2.219,33,2.504,34,0.771,36,0.521,37,0.023,38,0.65,39,0.675,40,0.812,44,0.747,47,0.433,48,0.205,49,0.799,50,0.951,51,0.951,52,0.556,55,0.113,56,0.05,62,0.455,63,1.006,64,1.006,65,0.786,66,1.27,67,0.711,68,1.006,69,0.556,70,0.711,71,0.592,72,0.711,73,0.556,74,1.006,75,0.556,76,1.118,77,0.556,78,0.973,79,0.711,80,0.556,81,1.006,82,0.556,83,0.711,84,0.592,85,1.006,86,0.556,87,1.006,88,0.556,89,0.711,90,0.556,91,0.711,92,0.556,93,0.711,94,0.556,95,0.711,96,0.711,97,0.556,98,0.711,99,0.556,100,0.711,101,0.556,102,0.669,103,0.556,104,0.812,105,0.711,106,0.521,107,0.711,108,0.592,109,0.556,110,0.711,111,0.556,112,0.711,113,0.993,114,1.295,115,0.521,116,0.669,117,0.711,118,0.014,119,0.014,121,1.132,122,1.475,125,5.026,127,1.699,128,2.666,129,1.565,130,1.973,138,1.1,149,1.554,150,1.069,272,0.754,273,0.754,385,5.219,425,1.604,436,1.362,641,5.109,747,2.132,748,3.878,749,3.341,750,3.483,751,4.216,754,3.341,755,2.666,762,4.38,763,3.774,765,2.666,766,2.666,767,3.017,844,4.571,1480,5.716,1481,3.13,1482,3.13,1483,3.13,1484,4.431]],["title/interfaces/Window.html",[1297,2.173,1298,2.173]],["body/interfaces/Window.html",[0,0.014,2,0.165,3,0.165,8,0.142,14,0.66,15,0.66,18,0.745,20,0.701,22,0.267,23,0.665,24,1.149,26,0.94,28,2.273,30,0.443,32,1.658,37,0.023,39,0.351,43,0.997,44,0.829,47,0.468,48,0.215,49,0.837,50,0.997,51,0.997,55,0.118,56,0.052,57,1.533,59,2.618,76,0.582,104,0.903,106,0.545,118,0.016,119,0.014,121,0.837,122,1.313,127,0.997,129,1.169,130,1.474,131,2.295,138,0.701,144,1.056,149,1.628,150,1.12,151,1.91,166,1.871,175,1.522,201,1.427,233,1.91,235,1.34,247,2.042,260,1.522,265,1.76,279,1.522,280,1.427,688,2.851,713,2.042,714,2.233,717,1.883,753,2.473,868,3.592,923,3.452,954,3.118,1100,4.304,1152,2.473,1165,3.977,1169,3.452,1231,2.042,1253,3.452,1264,2.233,1265,2.473,1266,3.899,1267,2.793,1268,2.793,1269,2.473,1270,2.793,1271,2.793,1272,2.793,1274,2.473,1275,3.977,1280,2.793,1285,2.793,1286,2.793,1287,2.793,1288,2.793,1291,2.793,1296,2.793,1297,2.851,1298,2.851,1299,2.793,1300,2.793,1301,2.793,1302,3.977,1303,2.473,1304,2.473,1305,3.452,1306,2.629,1307,3.899,1308,3.899,1309,3.899,1310,3.899,1311,3.899,1312,2.793,1313,4.492,1314,2.793,1315,2.793,1316,2.473,1317,2.793,1318,2.793,1319,2.793,1320,2.793,1321,3.899,1322,2.793,1323,3.899,1324,3.899,1325,3.899,1326,3.899,1327,4.492,1328,3.899,1329,2.793,1330,3.899,1331,2.793,1332,2.793,1333,4.492,1334,2.793,1335,2.793,1336,2.793,1337,2.793,1338,2.793,1339,2.793,1340,2.793,1341,2.793,1342,2.793,1343,2.793,1344,2.793,1345,2.793,1346,2.793,1347,2.793,1348,2.793,1349,2.793,1350,2.793,1351,2.793,1352,2.793,1353,2.793,1354,2.793,1355,2.793,1356,2.793,1357,2.793,1358,2.793,1359,2.793]],["title/coverage.html",[1485,4.07]],["body/coverage.html",[0,0.022,1,0.621,8,0.151,9,2.98,10,0.905,11,2.638,12,3.61,37,0.023,39,0.375,52,0.621,53,2.179,56,0.087,65,0.621,69,0.621,71,0.662,73,0.621,75,0.621,77,0.621,80,0.621,82,0.621,84,0.662,86,0.621,88,0.621,90,0.621,92,0.621,94,0.621,97,0.621,99,0.621,101,0.621,103,0.621,104,0.508,106,0.582,108,0.662,109,0.621,111,0.621,113,0.621,115,0.582,118,0.015,119,0.015,120,2.98,129,0.893,130,1.127,143,2.098,166,3.015,236,3.61,237,2.638,238,2.98,255,2.638,256,2.98,265,1.345,380,3.61,396,1.624,398,3.26,418,2.179,453,2.179,454,2.638,472,2.638,477,2.009,493,2.638,495,2.98,506,2.98,580,2.98,633,3.717,634,2.179,635,2.98,703,2.383,746,2.383,747,3.717,777,2.383,778,3.61,815,2.638,816,2.98,844,2.383,916,2.638,917,2.638,924,2.98,944,2.98,1091,2.98,1097,2.98,1114,2.98,1115,2.638,1116,2.98,1126,2.98,1127,2.638,1130,2.98,1131,2.98,1137,2.383,1138,2.98,1142,3.61,1143,2.638,1144,2.98,1176,2.98,1213,2.98,1214,2.638,1227,2.98,1231,3.827,1232,2.638,1233,2.98,1261,2.98,1264,3.26,1265,3.61,1297,2.179,1298,2.179,1306,3.898,1362,2.638,1363,2.98,1449,2.98,1473,2.98,1480,2.98,1485,2.98,1486,3.498,1487,3.498,1488,3.498,1489,5.457,1490,5.868,1491,5.868,1492,6.852,1493,5.868,1494,5.457,1495,3.498,1496,3.498,1497,3.498,1498,5.404,1499,2.98,1500,2.98,1501,2.98,1502,3.498,1503,3.498,1504,3.498,1505,3.498,1506,3.498,1507,3.498,1508,5.457,1509,3.498,1510,4.787,1511,3.498,1512,3.498,1513,4.787,1514,3.498,1515,3.498,1516,2.98,1517,4.077,1518,2.98,1519,3.498,1520,3.498]],["title/dependencies.html",[174,1.95,1521,2.906]],["body/dependencies.html",[37,0.023,43,1.372,48,0.296,49,1.153,50,1.72,51,1.372,55,0.163,118,0.018,119,0.018,144,1.454,146,2.819,147,2.594,148,2.406,174,2.096,176,2.242,189,5.264,190,3.846,193,3.846,371,4.267,434,4.267,459,4.267,461,4.82,467,3.846,468,3.846,470,3.846,570,3.846,686,4.82,983,3.405,1204,3.846,1212,3.846,1522,4.516,1523,4.516,1524,4.516,1525,6.181,1526,6.909,1527,4.516,1528,4.516,1529,4.267,1530,4.516,1531,4.516,1532,6.181,1533,6.181,1534,4.516,1535,4.516,1536,4.516,1537,4.516,1538,4.516,1539,4.516,1540,5.659,1541,4.516,1542,4.516,1543,4.516,1544,4.516,1545,4.516,1546,4.516,1547,5.659,1548,4.516,1549,4.516,1550,4.516,1551,4.516,1552,4.516,1553,4.516,1554,4.516,1555,4.516,1556,4.516,1557,4.516,1558,4.516,1559,4.516,1560,5.659,1561,4.516,1562,4.516,1563,4.516,1564,4.516,1565,4.516,1566,4.516]],["title/miscellaneous/functions.html",[477,2.413,1567,1.98]],["body/miscellaneous/functions.html",[22,0.457,36,0.933,37,0.021,38,0.652,40,0.815,118,0.02,119,0.02,454,4.23,477,3.222,478,4.778,493,4.861,586,4.778,1567,3.821,1568,5.61]],["title/index.html",[22,0.284,1569,2.972]],["body/index.html",[0,0.011,1,0.967,37,0.023,52,0.967,55,0.126,56,0.055,62,0.507,65,0.619,69,1.152,71,1.228,73,0.967,75,0.967,77,0.967,80,0.967,82,0.967,84,1.228,86,0.967,88,0.967,90,1.152,92,1.152,94,1.152,97,1.152,99,0.967,101,0.967,103,0.967,106,0.907,108,1.031,109,0.967,111,0.967,113,1.152,115,0.907,118,0.015,119,0.015,129,1.392,130,1.755,143,1.191,172,1.371,173,4.421,174,1.62,175,1.62,176,1.732,177,1.732,178,2.972,179,2.972,180,2.972,181,2.972,182,4.33,183,2.372,184,1.859,185,1.859,197,3.394,201,1.518,215,2.631,265,2.095,361,4.62,362,2.972,363,2.972,364,2.972,365,4.642,366,3.814,450,2.972,451,2.972,452,2.972,453,3.394,683,3.13,701,2.972,904,4.33,905,2.972,906,2.972,907,2.972,908,2.972,909,4.642,1197,2.972,1198,2.972,1199,2.972,1297,2.174,1453,4.999,1454,2.972,1455,2.972,1569,2.972,1570,4.779,1571,3.49,1572,3.49]],["title/modules.html",[172,1.371]],["body/modules.html",[37,0.02,118,0.02,119,0.02,172,1.542,173,3.661,182,3.348,197,3.348,361,3.661,366,2.864,440,4.578,904,3.348,1453,3.661,1529,5.349,1573,7.094,1574,7.094,1575,7.159,1576,5.375]],["title/routes.html",[201,2.079]],["body/routes.html",[37,0.02,118,0.02,119,0.02,201,2.5]],["title/miscellaneous/variables.html",[1306,2.413,1567,1.98]],["body/miscellaneous/variables.html",[22,0.276,23,0.912,37,0.023,39,0.69,44,0.779,57,1.754,118,0.015,119,0.015,121,1.37,177,2.663,233,1.226,235,1.384,272,1.667,273,1.624,275,3.348,380,2.553,396,2.49,398,4.278,399,2.883,417,5.589,418,3.783,425,2.096,472,4.044,492,4.568,494,4.568,502,4.568,504,4.568,613,4.568,655,3.341,666,4.044,778,2.553,798,2.883,916,4.044,917,4.044,1298,4.149,1306,3.698,1498,2.883,1499,4.928,1500,4.928,1501,4.928,1516,2.883,1517,5.851,1518,2.883,1529,4.736,1567,2.306,1577,3.385,1578,3.385,1579,6.282,1580,3.385,1581,3.385,1582,4.68,1583,5.364,1584,5.364,1585,6.282,1586,5.364,1587,5.364,1588,5.364,1589,6.282,1590,5.364,1591,5.364,1592,6.282,1593,5.364,1594,3.385,1595,3.385,1596,5.364,1597,4.68,1598,4.68,1599,3.385,1600,3.385,1601,4.68,1602,4.68,1603,3.385,1604,3.385]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["0.0.2",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1077,"title":{},"body":{"components/GridsterComponent.html":{}}}],["0.14",{"_index":1073,"title":{},"body":{"components/GridsterComponent.html":{}}}],["0.2",{"_index":1075,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["0.3",{"_index":1255,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["0.3.0",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":1422,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.5",{"_index":875,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["0.50",{"_index":1427,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["0.8",{"_index":1196,"title":{},"body":{"components/ProcessListComponent.html":{},"components/TaskItemComponent.html":{}}}],["0.8.26",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["0.8em",{"_index":885,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["0/1",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["0/52",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":337,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["1",{"_index":683,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"index.html":{}}}],["1.0.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":1429,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1.2",{"_index":1442,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["1/39",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1011,"title":{},"body":{"components/GridsterComponent.html":{}}}],["10.0.2",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":311,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["100px",{"_index":938,"title":{},"body":{"components/GridComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["100vh",{"_index":879,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":305,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["11",{"_index":1129,"title":{},"body":{"components/NotificationsButtonComponent.html":{}}}],["1140px",{"_index":889,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["120px",{"_index":878,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["12px",{"_index":334,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["13px",{"_index":330,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["14px",{"_index":1071,"title":{},"body":{"components/GridsterComponent.html":{}}}],["150",{"_index":1066,"title":{},"body":{"components/GridsterComponent.html":{}}}],["16px",{"_index":1259,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["17px",{"_index":1433,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["18px",{"_index":339,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["1px",{"_index":314,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["1s",{"_index":345,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["2",{"_index":703,"title":{},"body":{"components/FilterModalComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["2.22.2",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1261,"title":{},"body":{"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["200",{"_index":1403,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["2000",{"_index":987,"title":{},"body":{"components/GridsterComponent.html":{}}}],["20px",{"_index":308,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TasksComponent.html":{}}}],["22px",{"_index":1263,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["23px",{"_index":1258,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["24",{"_index":1571,"title":{},"body":{"index.html":{}}}],["25",{"_index":1409,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["2500",{"_index":1028,"title":{},"body":{"components/GridsterComponent.html":{}}}],["262626",{"_index":1067,"title":{},"body":{"components/GridsterComponent.html":{}}}],["2px",{"_index":1068,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["3",{"_index":701,"title":{},"body":{"components/FilterModalComponent.html":{},"index.html":{}}}],["3.0.0",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["3.9.4",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":887,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["300px",{"_index":357,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["34px",{"_index":1441,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["3px",{"_index":1074,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["4",{"_index":973,"title":{},"body":{"components/GridsterComponent.html":{}}}],["4.0.0",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":891,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["401",{"_index":285,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["40px",{"_index":937,"title":{},"body":{"components/GridComponent.html":{}}}],["49px",{"_index":897,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["4px",{"_index":872,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["5",{"_index":1572,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1407,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["500",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["500px",{"_index":250,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["50px",{"_index":1262,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["53px",{"_index":1257,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["550px",{"_index":1423,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["55px",{"_index":1087,"title":{},"body":{"components/GridsterComponent.html":{}}}],["5px",{"_index":1076,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["6",{"_index":1021,"title":{},"body":{"components/GridsterComponent.html":{}}}],["6.0.5",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":943,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["7",{"_index":1570,"title":{},"body":{"index.html":{}}}],["740",{"_index":1019,"title":{},"body":{"components/GridsterComponent.html":{}}}],["75",{"_index":1404,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["80px",{"_index":939,"title":{},"body":{"components/GridComponent.html":{}}}],["_moment",{"_index":685,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["_moment(element.value).format('yyyi",{"_index":724,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["account",{"_index":1484,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["action",{"_index":358,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["activ",{"_index":656,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["activatedrout",{"_index":954,"title":{},"body":{"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["activatedroutesnapshot",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":117,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["adapt",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["addrequestbuttoncompon",{"_index":1,"title":{"components/AddRequestButtonComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["ahmad",{"_index":1389,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["aim",{"_index":740,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["alert('thi",{"_index":1358,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["align",{"_index":1435,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["allcriteria",{"_index":639,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["angular",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/FilterService.html":{},"modules/FormModule.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1204,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":433,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["angular/cor",{"_index":48,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["angular/form",{"_index":1212,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":459,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":461,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"modules/TasksModule.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["anim",{"_index":773,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["announcearch",{"_index":521,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcearchive(arch",{"_index":528,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefilt",{"_index":522,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefilter(filt",{"_index":531,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefiltersrefresh",{"_index":523,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcefiltersrefresh(data",{"_index":533,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceitem",{"_index":524,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceitem(item",{"_index":536,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcemenuchang",{"_index":525,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcemenuchange(chang",{"_index":539,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceres",{"_index":526,"title":{},"body":{"injectables/EventsService.html":{}}}],["announceresize(item",{"_index":542,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcesort",{"_index":527,"title":{},"body":{"injectables/EventsService.html":{}}}],["announcesorting(sort",{"_index":545,"title":{},"body":{"injectables/EventsService.html":{}}}],["antialias",{"_index":1061,"title":{},"body":{"components/GridsterComponent.html":{}}}],["api",{"_index":505,"title":{},"body":{"classes/EnvService.html":{}}}],["apical",{"_index":581,"title":{},"body":{"injectables/ExternalService.html":{}}}],["apicall(method",{"_index":587,"title":{},"body":{"injectables/ExternalService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["app.compon",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":69,"title":{"components/AppComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["appconfig",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig.hasownproperty(key",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appconfig[key",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appformiocompon",{"_index":71,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["appmodul",{"_index":173,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apponcr",{"_index":116,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["approutingmodul",{"_index":197,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["ar",{"_index":1106,"title":{},"body":{"components/LanguageComponent.html":{}}}],["archiv",{"_index":530,"title":{},"body":{"injectables/EventsService.html":{}}}],["archiveannounc",{"_index":507,"title":{},"body":{"injectables/EventsService.html":{}}}],["archivesoruc",{"_index":508,"title":{},"body":{"injectables/EventsService.html":{}}}],["array",{"_index":800,"title":{},"body":{"injectables/FilterService.html":{}}}],["array.prototype.map.call(this.auth.getuser().group",{"_index":719,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["arrow",{"_index":489,"title":{},"body":{"modules/CoreModule.html":{}}}],["assets/i18n",{"_index":480,"title":{},"body":{"modules/CoreModule.html":{}}}],["assign",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigne",{"_index":716,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{}}}],["async",{"_index":28,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["attr(data",{"_index":1437,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["auth",{"_index":76,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["auth.getuser()?.profile.firstnam",{"_index":865,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["auth.getuser()?.profile.lastnam",{"_index":866,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["auth.interceptor.t",{"_index":413,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:11",{"_index":419,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:12",{"_index":428,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:14",{"_index":423,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth.interceptor.ts:27",{"_index":427,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["auth/auth.module#authmodul",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authconfig",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authconfig.hasownproperty(key",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authconfig[key",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":202,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/CoreModule.html":{}}}],["authindexcompon",{"_index":73,"title":{"components/AuthIndexComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["authlogincompon",{"_index":75,"title":{"components/AuthLoginComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["authmodul",{"_index":361,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authobj.statu",{"_index":284,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["author",{"_index":437,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["authserivc",{"_index":259,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["authservic",{"_index":130,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["auto",{"_index":252,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["avail",{"_index":440,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"modules.html":{}}}],["await",{"_index":59,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["back",{"_index":490,"title":{},"body":{"modules/CoreModule.html":{}}}],["backbuttonicon",{"_index":487,"title":{},"body":{"modules/CoreModule.html":{}}}],["backbuttontext",{"_index":484,"title":{},"body":{"modules/CoreModule.html":{}}}],["backdropdismiss",{"_index":772,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["background",{"_index":1054,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{}}}],["badg",{"_index":326,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["bar",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["base",{"_index":1062,"title":{},"body":{"components/GridsterComponent.html":{}}}],["basic",{"_index":438,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["basicauthinterceptor",{"_index":411,"title":{"interceptors/BasicAuthInterceptor.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["befor",{"_index":667,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["beforesubmit",{"_index":262,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["beforesubmit(ev",{"_index":267,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["behaviorsubject",{"_index":549,"title":{},"body":{"injectables/EventsService.html":{}}}],["beta.12",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["beta.14",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":614,"title":{},"body":{"injectables/ExternalService.html":{}}}],["bg",{"_index":1405,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["block",{"_index":940,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{}}}],["bodi",{"_index":606,"title":{},"body":{"injectables/ExternalService.html":{}}}],["boolean",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{}}}],["bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootswatch",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":306,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["bottom",{"_index":323,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["box",{"_index":319,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["break",{"_index":717,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"interfaces/Window.html":{}}}],["brows",{"_index":1575,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1529,"title":{},"body":{"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/anim",{"_index":462,"title":{},"body":{"modules/CoreModule.html":{}}}],["browserwindow",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindow['__env",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv.hasownproperty(key",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btoa(object.usernam",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["buffer",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":17,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["button'},{'nam",{"_index":68,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["button.compon",{"_index":1210,"title":{},"body":{"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["button.component.html",{"_index":21,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{}}}],["button.component.scss",{"_index":19,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{}}}],["button.component.t",{"_index":12,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/NotificationsButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":35,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:13",{"_index":46,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:14",{"_index":45,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:18",{"_index":42,"title":{},"body":{"components/AddRequestButtonComponent.html":{}}}],["button.component.ts:8",{"_index":1128,"title":{},"body":{"components/NotificationsButtonComponent.html":{}}}],["button/add",{"_index":11,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["button/notif",{"_index":1127,"title":{},"body":{"components/NotificationsButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["calc(100",{"_index":895,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["calc(100vh",{"_index":877,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["camundarestservic",{"_index":265,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["camundaservic",{"_index":260,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["canactiv",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":744,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["candidategroup",{"_index":718,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["card.card",{"_index":1420,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card:focu",{"_index":1445,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["card:hov",{"_index":1444,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["case",{"_index":714,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["catch",{"_index":1312,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["catcherror",{"_index":601,"title":{},"body":{"injectables/ExternalService.html":{}}}],["chang",{"_index":541,"title":{},"body":{"injectables/EventsService.html":{}}}],["changedopt",{"_index":950,"title":{},"body":{"components/GridsterComponent.html":{}}}],["child:not(.ful",{"_index":894,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["children",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["choic",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["choices[i].setattribute('dir",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["choos",{"_index":1361,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["chooseitem",{"_index":1366,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["chooseitem(item",{"_index":1375,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["claim",{"_index":1418,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["class",{"_index":56,"title":{"classes/EnvService.html":{},"classes/ProcessDefinition.html":{},"classes/Task.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["close",{"_index":751,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["cluster_appmodul",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_import",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodul",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_declar",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_import",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_coremodul",{"_index":450,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_import",{"_index":451,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_provid",{"_index":452,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_formmodul",{"_index":905,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_declar",{"_index":906,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_export",{"_index":908,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_formmodule_import",{"_index":907,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["cluster_sharedmodul",{"_index":1197,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declar",{"_index":1198,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_export",{"_index":1199,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_tasksmodul",{"_index":1454,"title":{},"body":{"modules/TasksModule.html":{},"index.html":{}}}],["cluster_tasksmodule_declar",{"_index":1455,"title":{},"body":{"modules/TasksModule.html":{},"index.html":{}}}],["cluster_tasksmodule_import",{"_index":1456,"title":{},"body":{"modules/TasksModule.html":{}}}],["col",{"_index":971,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col.collaps",{"_index":903,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["col.fullscreen",{"_index":1079,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col:focu",{"_index":1082,"title":{},"body":{"components/GridsterComponent.html":{}}}],["col:hov",{"_index":1081,"title":{},"body":{"components/GridsterComponent.html":{}}}],["collaps",{"_index":896,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["collect",{"_index":736,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["color",{"_index":680,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["column",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":572,"title":{},"body":{"injectables/EventsService.html":{}}}],["commonmodul",{"_index":1203,"title":{},"body":{"modules/SharedModule.html":{}}}],["compacttyp",{"_index":980,"title":{},"body":{"components/GridsterComponent.html":{}}}],["compacttype.compactupandleft",{"_index":1010,"title":{},"body":{"components/GridsterComponent.html":{}}}],["compat",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":868,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["compon",{"_index":0,"title":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":67,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["componentprop",{"_index":774,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["components/add",{"_index":1463,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/auth",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/filt",{"_index":1464,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/form/form.compon",{"_index":913,"title":{},"body":{"modules/FormModule.html":{}}}],["components/formio/formio.compon",{"_index":914,"title":{},"body":{"modules/FormModule.html":{}}}],["components/grid/grid.compon",{"_index":1466,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/gridster/gridster.compon",{"_index":1467,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/header/header.compon",{"_index":1205,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/languag",{"_index":1206,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/language/language.compon",{"_index":1208,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/notif",{"_index":1209,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/process",{"_index":934,"title":{},"body":{"components/GridComponent.html":{},"modules/TasksModule.html":{}}}],["components/sort",{"_index":1469,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/task",{"_index":1470,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/us",{"_index":1202,"title":{},"body":{"modules/SharedModule.html":{}}}],["consol",{"_index":612,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.error(error",{"_index":611,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.log(err",{"_index":1314,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["console.log(messag",{"_index":632,"title":{},"body":{"injectables/ExternalService.html":{}}}],["console.log(resourc",{"_index":1356,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["console.log(submiss",{"_index":1159,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["console.log(taskdefinition[0].$['camunda:formkey",{"_index":1347,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["console.log(this.filt",{"_index":704,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["console.log(this.form",{"_index":1334,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["console.log(this.form.resourcenam",{"_index":1357,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["const",{"_index":57,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"modules/TasksModule.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["constructor(@inject(local_storag",{"_index":799,"title":{},"body":{"injectables/FilterService.html":{}}}],["constructor(auth",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{}}}],["constructor(camundaservic",{"_index":264,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/ProcessListComponent.html":{}}}],["constructor(ev",{"_index":927,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{}}}],["constructor(eventservic",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/UserOptionsComponent.html":{}}}],["constructor(http",{"_index":584,"title":{},"body":{"injectables/ExternalService.html":{}}}],["constructor(loadingcontrol",{"_index":1371,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["constructor(myrout",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(popoverctrl",{"_index":242,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{}}}],["constructor(priv",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExternalService.html":{}}}],["constructor(publ",{"_index":436,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["constructor(rout",{"_index":1149,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["constructor(storag",{"_index":785,"title":{},"body":{"injectables/FilterService.html":{}}}],["constructor(transl",{"_index":31,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["consumpt",{"_index":617,"title":{},"body":{"injectables/ExternalService.html":{}}}],["contain",{"_index":248,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["content",{"_index":869,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["contenteditable=true]:empty:not(:focus):befor",{"_index":1436,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["contrast",{"_index":1063,"title":{},"body":{"components/GridsterComponent.html":{}}}],["core",{"_index":470,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/core.modul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["core/directives/on",{"_index":1461,"title":{},"body":{"modules/TasksModule.html":{}}}],["core/schemas/processdefinit",{"_index":1189,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["core/services/auth.servic",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["core/services/camunda",{"_index":279,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["core/services/env.service.provid",{"_index":918,"title":{},"body":{"modules/FormModule.html":{}}}],["core/services/events.servic",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["core/services/filter.servic",{"_index":984,"title":{},"body":{"components/GridsterComponent.html":{}}}],["coremodul",{"_index":182,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["coverag",{"_index":1485,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":666,"title":{},"body":{"components/FilterModalComponent.html":{},"components/SortOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["create.direct",{"_index":1462,"title":{},"body":{"modules/TasksModule.html":{}}}],["create.directive.t",{"_index":1131,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["create.directive.ts:11",{"_index":1133,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["create.directive.ts:13",{"_index":1134,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["createdaft",{"_index":669,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["createdbefor",{"_index":665,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["createtranslateload",{"_index":493,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":478,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["credenti",{"_index":439,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["criteria",{"_index":640,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["criterion",{"_index":738,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["criterion.nam",{"_index":743,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["critic",{"_index":1411,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["current",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentfilterlist",{"_index":802,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.push(griditem",{"_index":805,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.splice(currentfilterlist.indexof(temp",{"_index":810,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.tasks.filt",{"_index":811,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentfilterlist.tasks.filters.filter(funct",{"_index":812,"title":{},"body":{"injectables/FilterService.html":{}}}],["currentus",{"_index":441,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"modules/FormModule.html":{}}}],["currentuser.token",{"_index":443,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["cursor",{"_index":1193,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["danger",{"_index":1406,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["dark",{"_index":873,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["data",{"_index":535,"title":{},"body":{"injectables/EventsService.html":{},"components/TaskDetailsComponent.html":{}}}],["data.count",{"_index":849,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["date",{"_index":668,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["datetim",{"_index":1222,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["dcdcdc",{"_index":1421,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["ddthh:mm:ss.ssszz",{"_index":726,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["declar",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"interfaces/Window.html":{},"index.html":{}}}],["decor",{"_index":1386,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["deep",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":272,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":34,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["delet",{"_index":752,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["deletefromlocalstorag",{"_index":780,"title":{},"body":{"injectables/FilterService.html":{}}}],["deletefromlocalstorage(griditem",{"_index":787,"title":{},"body":{"injectables/FilterService.html":{}}}],["dep",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":174,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["descript",{"_index":658,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{}}}],["descriptionlik",{"_index":659,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["destoy",{"_index":1370,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["detail",{"_index":336,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["details'},{'nam",{"_index":105,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["details.compon",{"_index":1471,"title":{},"body":{"modules/TasksModule.html":{}}}],["details.component.html",{"_index":1235,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.scss",{"_index":1234,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.t",{"_index":1233,"title":{},"body":{"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:10",{"_index":1239,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:12",{"_index":1243,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1238,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":1242,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1244,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1241,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1240,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details/task",{"_index":1232,"title":{},"body":{"components/TaskDetailsComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["dir",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{}}}],["direct",{"_index":65,"title":{"directives/OnCreateDirective.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["disablepushondrag",{"_index":1047,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablepushonres",{"_index":1048,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablewarn",{"_index":1052,"title":{},"body":{"components/GridsterComponent.html":{}}}],["disablewindowres",{"_index":1051,"title":{},"body":{"components/GridsterComponent.html":{}}}],["dismissload",{"_index":1271,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["display",{"_index":328,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["displaygrid",{"_index":981,"title":{},"body":{"components/GridsterComponent.html":{}}}],["displaygrid.non",{"_index":1050,"title":{},"body":{"components/GridsterComponent.html":{}}}],["div",{"_index":360,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["document",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["document.getelementsbyclassname('choic",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementsbyclassname('formio",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementsbyclassname('head",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["draggabl",{"_index":1030,"title":{},"body":{"components/GridsterComponent.html":{}}}],["draghandleclass",{"_index":1033,"title":{},"body":{"components/GridsterComponent.html":{}}}],["due",{"_index":671,"title":{},"body":{"components/FilterModalComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskItemComponent.html":{}}}],["dueafter",{"_index":672,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["duebefor",{"_index":670,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["dynam",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1038,"title":{},"body":{"components/GridsterComponent.html":{}}}],["e2e2e2",{"_index":1078,"title":{},"body":{"components/GridsterComponent.html":{}}}],["edit",{"_index":753,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["edit'},{'nam",{"_index":107,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["edit.compon",{"_index":1472,"title":{},"body":{"modules/TasksModule.html":{}}}],["edit.component.html",{"_index":1268,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["edit.component.scss",{"_index":1267,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["edit.component.t",{"_index":1265,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["edit.component.ts:21",{"_index":1294,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:22",{"_index":1290,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:23",{"_index":1289,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:29",{"_index":1276,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:31",{"_index":1284,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:32",{"_index":1292,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:33",{"_index":1293,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:37",{"_index":1295,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:44",{"_index":1281,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:75",{"_index":1282,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:77",{"_index":1278,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:79",{"_index":1283,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:83",{"_index":1277,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit.component.ts:89",{"_index":1279,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["edit/:taskid",{"_index":1478,"title":{},"body":{"modules/TasksModule.html":{}}}],["edit/task",{"_index":1264,"title":{},"body":{"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["eee",{"_index":316,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["eihab",{"_index":1390,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["element.key.length",{"_index":722,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["element.typ",{"_index":723,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["element.valu",{"_index":727,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["ellipsi",{"_index":354,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["empti",{"_index":623,"title":{},"body":{"injectables/ExternalService.html":{}}}],["en",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageComponent.html":{}}}],["enabl",{"_index":1031,"title":{},"body":{"components/GridsterComponent.html":{}}}],["engineapiurl",{"_index":496,"title":{},"body":{"classes/EnvService.html":{}}}],["engineresturl",{"_index":497,"title":{},"body":{"classes/EnvService.html":{}}}],["english",{"_index":1107,"title":{},"body":{"components/LanguageComponent.html":{}}}],["entrycompon",{"_index":1201,"title":{},"body":{"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["env",{"_index":417,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["env.j",{"_index":504,"title":{},"body":{"classes/EnvService.html":{},"miscellaneous/variables.html":{}}}],["env[key",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":1517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envservic",{"_index":418,"title":{"classes/EnvService.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envservicefactori",{"_index":1499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envserviceprovid",{"_index":472,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1313,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["error",{"_index":595,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.hasownproperty('messag",{"_index":626,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.messag",{"_index":628,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.error.typ",{"_index":630,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.messag",{"_index":620,"title":{},"body":{"injectables/ExternalService.html":{}}}],["error.statu",{"_index":625,"title":{},"body":{"injectables/ExternalService.html":{}}}],["event",{"_index":43,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["event.data.password",{"_index":282,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["event.data.usernam",{"_index":281,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["event.detail.valu",{"_index":707,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["event.hasownproperty('typ",{"_index":1300,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["event.stoppropag",{"_index":846,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["event.typ",{"_index":1301,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["event.url.includes('new",{"_index":1250,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["eventemitt",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"directives/OnCreateDirective.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{}}}],["eventservic",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/UserOptionsComponent.html":{}}}],["eventsservic",{"_index":129,"title":{"injectables/EventsService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["executionvariables.filter((vari",{"_index":1352,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["executionvariables[this.form.resourcenam",{"_index":1331,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["executionvariables[this.form.resourcename].valu",{"_index":1332,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["exist",{"_index":1359,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["export",{"_index":55,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"index.html":{}}}],["externalservic",{"_index":453,"title":{"injectables/ExternalService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{},"coverage.html":{},"index.html":{}}}],["extra",{"_index":329,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["f8f8f8",{"_index":1431,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["fail",{"_index":619,"title":{},"body":{"injectables/ExternalService.html":{}}}],["fals",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/FilterService.html":{},"modules/FormModule.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":1069,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fff",{"_index":1055,"title":{},"body":{"components/GridsterComponent.html":{}}}],["field",{"_index":922,"title":{},"body":{"modules/FormModule.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["filter",{"_index":78,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["filter.count",{"_index":848,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filter.id",{"_index":813,"title":{},"body":{"injectables/FilterService.html":{}}}],["filter.nam",{"_index":735,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["filterannounc",{"_index":509,"title":{},"body":{"injectables/EventsService.html":{}}}],["filterid",{"_index":775,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["filtermodalcompon",{"_index":77,"title":{"components/FilterModalComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filteropt",{"_index":821,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filteroptions(ev",{"_index":827,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filteroptionscompon",{"_index":80,"title":{"components/FilterOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters.length",{"_index":863,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["filterservic",{"_index":777,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FilterService.html":{},"components/GridsterComponent.html":{},"coverage.html":{}}}],["filterslist",{"_index":779,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtersmenucompon",{"_index":82,"title":{"components/FiltersMenuComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtersourc",{"_index":510,"title":{},"body":{"injectables/EventsService.html":{}}}],["filterstorag",{"_index":948,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fix",{"_index":1085,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fixdom",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["fixdom(dir",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["fixpanelsdirect",{"_index":951,"title":{},"body":{"components/GridsterComponent.html":{}}}],["fixpanelsdirection(dir",{"_index":957,"title":{},"body":{"components/GridsterComponent.html":{}}}],["float",{"_index":312,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["font",{"_index":332,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["forecast_contain",{"_index":880,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["form",{"_index":247,"title":{},"body":{"components/AuthIndexComponent.html":{},"modules/FormModule.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["form'},{'nam",{"_index":85,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["form.compon",{"_index":1468,"title":{},"body":{"modules/TasksModule.html":{}}}],["form.component.html",{"_index":1146,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.scss",{"_index":1145,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.t",{"_index":1144,"title":{},"body":{"components/ProcessFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":1150,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:14",{"_index":1157,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:15",{"_index":1158,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:16",{"_index":1155,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:17",{"_index":1156,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:19",{"_index":1153,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form.component.ts:32",{"_index":1151,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["form/form.modul",{"_index":1477,"title":{},"body":{"modules/TasksModule.html":{}}}],["form/process",{"_index":1143,"title":{},"body":{"components/ProcessFormComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["formcompon",{"_index":84,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["formio",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"dependencies.html":{}}}],["formio'},{'nam",{"_index":72,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["formio/auth",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{}}}],["formio/resourc",{"_index":912,"title":{},"body":{"modules/FormModule.html":{}}}],["formioappconfig",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formioappconfigfactori",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioappconfigprovid",{"_index":917,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioappurl",{"_index":498,"title":{},"body":{"classes/EnvService.html":{}}}],["formioauth",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["formioauthconfig",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formioauthconfigfactori",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioauthconfigprovid",{"_index":916,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formioauthservic",{"_index":915,"title":{},"body":{"modules/FormModule.html":{}}}],["formioj",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["formiomodul",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{}}}],["formioresourc",{"_index":909,"title":{},"body":{"modules/FormModule.html":{},"index.html":{}}}],["formioresourceconfig",{"_index":911,"title":{},"body":{"modules/FormModule.html":{}}}],["formkey",{"_index":1287,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["formmodul",{"_index":904,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["formsmodul",{"_index":1211,"title":{},"body":{"modules/SharedModule.html":{}}}],["full",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["fullscreen",{"_index":974,"title":{},"body":{"components/GridsterComponent.html":{}}}],["function",{"_index":477,"title":{"miscellaneous/functions.html":{}},"body":{"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfiltercount",{"_index":822,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["getfiltercount(filt",{"_index":829,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["getfromlocalstorag",{"_index":781,"title":{},"body":{"injectables/FilterService.html":{}}}],["getprior",{"_index":1367,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getpriority(prior",{"_index":1378,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getstatu",{"_index":1368,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getstatus(prior",{"_index":1380,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["getus",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["girdster",{"_index":964,"title":{},"body":{"components/GridsterComponent.html":{}}}],["girdster.options.api.res",{"_index":986,"title":{},"body":{"components/GridsterComponent.html":{}}}],["global",{"_index":1296,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["graph",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["grayscal",{"_index":1060,"title":{},"body":{"components/GridsterComponent.html":{}}}],["grey",{"_index":1439,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["grid",{"_index":871,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TasksComponent.html":{}}}],["grid'},{'nam",{"_index":87,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["grid.compon",{"_index":1474,"title":{},"body":{"modules/TasksModule.html":{}}}],["grid.component.html",{"_index":926,"title":{},"body":{"components/GridComponent.html":{}}}],["grid.component.scss",{"_index":925,"title":{},"body":{"components/GridComponent.html":{}}}],["grid.component.t",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["grid/task",{"_index":1473,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{}}}],["gridcompon",{"_index":86,"title":{"components/GridComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["griditem",{"_index":789,"title":{},"body":{"injectables/FilterService.html":{}}}],["gridster",{"_index":945,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster'},{'nam",{"_index":89,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["gridster.component.html",{"_index":947,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster.component.scss",{"_index":946,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster.mobil",{"_index":1084,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridster2",{"_index":983,"title":{},"body":{"components/GridsterComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["gridstercompon",{"_index":88,"title":{"components/GridsterComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["gridsterconfig",{"_index":969,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridstermodul",{"_index":1460,"title":{},"body":{"modules/TasksModule.html":{}}}],["gridtyp",{"_index":982,"title":{},"body":{"components/GridsterComponent.html":{}}}],["gridtype.fit",{"_index":1009,"title":{},"body":{"components/GridsterComponent.html":{}}}],["group",{"_index":737,"title":{},"body":{"components/FilterModalComponent.html":{},"components/TaskItemComponent.html":{}}}],["group.nam",{"_index":867,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["guard",{"_index":215,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["guards/auth.guard",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["h2",{"_index":1428,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["h3",{"_index":324,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["handl",{"_index":1035,"title":{},"body":{"components/GridsterComponent.html":{}}}],["handleerror",{"_index":582,"title":{},"body":{"injectables/ExternalService.html":{}}}],["handleerror(oper",{"_index":590,"title":{},"body":{"injectables/ExternalService.html":{}}}],["header",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FiltersMenuComponent.html":{},"components/HeaderComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["header'},{'nam",{"_index":91,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["header.component.html",{"_index":1093,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1092,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":90,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["height",{"_index":338,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["height:100vh",{"_index":870,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["height:45px",{"_index":1256,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["here",{"_index":502,"title":{},"body":{"classes/EnvService.html":{},"miscellaneous/variables.html":{}}}],["heroservic",{"_index":598,"title":{},"body":{"injectables/ExternalService.html":{}}}],["hidden",{"_index":341,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["histori",{"_index":859,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["host:hover,:host:focu",{"_index":1254,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["http",{"_index":586,"title":{},"body":{"injectables/ExternalService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":455,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["httpclientmodul",{"_index":456,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":431,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httphandler",{"_index":422,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httpinterceptor",{"_index":432,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["httprequest",{"_index":421,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["icon",{"_index":1432,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["id",{"_index":750,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"classes/ProcessDefinition.html":{},"classes/Task.html":{},"components/UserOptionsComponent.html":{}}}],["identifi",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["identity.group",{"_index":288,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["ignorecont",{"_index":1032,"title":{},"body":{"components/GridsterComponent.html":{}}}],["imad",{"_index":1391,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["implement",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":47,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["incorrect",{"_index":301,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.compon",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{}}}],["index.component.html",{"_index":241,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.scss",{"_index":240,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.t",{"_index":238,"title":{},"body":{"components/AuthIndexComponent.html":{},"coverage.html":{}}}],["index.component.ts:10",{"_index":243,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:13",{"_index":245,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:14",{"_index":246,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index.component.ts:17",{"_index":244,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["index/auth",{"_index":237,"title":{},"body":{"components/AuthIndexComponent.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["infrastructur",{"_index":610,"title":{},"body":{"injectables/ExternalService.html":{}}}],["inherit",{"_index":1070,"title":{},"body":{"components/GridsterComponent.html":{}}}],["initcallback",{"_index":1005,"title":{},"body":{"components/GridsterComponent.html":{}}}],["initi",{"_index":356,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["inject",{"_index":143,"title":{"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"coverage.html":{},"index.html":{}}}],["inject(local_storag",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LanguageComponent.html":{}}}],["inner",{"_index":359,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["input",{"_index":318,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/HeaderComponent.html":{},"directives/OnCreateDirective.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["insert",{"_index":806,"title":{},"body":{"injectables/FilterService.html":{}}}],["instanceof",{"_index":1001,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["instead",{"_index":613,"title":{},"body":{"injectables/ExternalService.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":415,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["intercept(request",{"_index":420,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["interceptor",{"_index":410,"title":{"interceptors/BasicAuthInterceptor.html":{}},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["interfac",{"_index":1297,"title":{"interfaces/Window.html":{}},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["io",{"_index":488,"title":{},"body":{"modules/CoreModule.html":{}}}],["ion",{"_index":325,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["ionic",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":49,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["ionic/ng",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["ionic/schemat",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["ionicmodul",{"_index":463,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["ionicmodule.forroot",{"_index":482,"title":{},"body":{"modules/CoreModule.html":{}}}],["ionicroutestrategi",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["isfilteropen",{"_index":782,"title":{},"body":{"injectables/FilterService.html":{}}}],["isfilteropen(filt",{"_index":791,"title":{},"body":{"injectables/FilterService.html":{}}}],["isloggednin",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["ital",{"_index":1440,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item",{"_index":538,"title":{},"body":{"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["item'},{'nam",{"_index":110,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["item.$.id",{"_index":1345,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["item.compon",{"_index":1475,"title":{},"body":{"modules/TasksModule.html":{}}}],["item.component.html",{"_index":1365,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.scss",{"_index":1364,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.t",{"_index":1363,"title":{},"body":{"components/TaskItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:112",{"_index":1382,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:14",{"_index":1373,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:15",{"_index":1374,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:16",{"_index":1388,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:18",{"_index":1392,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:22",{"_index":1372,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:27",{"_index":1385,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:31",{"_index":1384,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:36",{"_index":1383,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:52",{"_index":1376,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:55",{"_index":1377,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:72",{"_index":1379,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.component.ts:93",{"_index":1381,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["item.id",{"_index":720,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{}}}],["item.key",{"_index":706,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item.typ",{"_index":711,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item/task",{"_index":1362,"title":{},"body":{"components/TaskItemComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["item1.key",{"_index":709,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item1.typ",{"_index":710,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item1.valu",{"_index":712,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["item:hov",{"_index":355,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessListComponent.html":{},"components/TasksComponent.html":{}}}],["itemchang",{"_index":511,"title":{},"body":{"injectables/EventsService.html":{},"components/GridsterComponent.html":{}}}],["itemchange(item",{"_index":959,"title":{},"body":{"components/GridsterComponent.html":{}}}],["itemcompon",{"_index":543,"title":{},"body":{"injectables/EventsService.html":{},"components/GridsterComponent.html":{}}}],["itemresizecallback",{"_index":1007,"title":{},"body":{"components/GridsterComponent.html":{}}}],["itemsourc",{"_index":512,"title":{},"body":{"injectables/EventsService.html":{}}}],["job",{"_index":615,"title":{},"body":{"injectables/ExternalService.html":{}}}],["jqueri",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":481,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ExternalService.html":{}}}],["json.parse(event.component.properties['vari",{"_index":1307,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["keep",{"_index":621,"title":{},"body":{"injectables/ExternalService.html":{}}}],["keepfixedheightinmobil",{"_index":1016,"title":{},"body":{"components/GridsterComponent.html":{}}}],["keepfixedwidthinmobil",{"_index":1017,"title":{},"body":{"components/GridsterComponent.html":{}}}],["key",{"_index":655,"title":{},"body":{"components/FilterModalComponent.html":{},"components/LanguageComponent.html":{},"classes/ProcessDefinition.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["keyresourcearray",{"_index":1323,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["keyresourcearray[0",{"_index":1326,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["keyresourcearray[1",{"_index":1328,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["lang",{"_index":1105,"title":{},"body":{"components/LanguageComponent.html":{}}}],["languag",{"_index":95,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["language'},{'nam",{"_index":93,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["language.component.html",{"_index":1099,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.component.scss",{"_index":1098,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.lang",{"_index":1113,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language/language.compon",{"_index":1124,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["languagecompon",{"_index":92,"title":{"components/LanguageComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["languages(ev",{"_index":1120,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["languageswitchcompon",{"_index":94,"title":{"components/LanguageSwitchComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["last",{"_index":893,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["left:0px",{"_index":1088,"title":{},"body":{"components/GridsterComponent.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"index.html":{}}}],["length",{"_index":1248,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["light",{"_index":892,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["line",{"_index":1247,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["line:max",{"_index":1246,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["link",{"_index":1446,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["list",{"_index":898,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/ProcessListComponent.html":{},"components/TasksComponent.html":{}}}],["list'},{'nam",{"_index":100,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["list.compon",{"_index":54,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{},"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1178,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.scss",{"_index":1177,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.t",{"_index":1176,"title":{},"body":{"components/ProcessListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":1180,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:15",{"_index":1185,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:16",{"_index":1188,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:17",{"_index":1186,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:18",{"_index":1187,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:20",{"_index":1183,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list.component.ts:26",{"_index":1181,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["list/process",{"_index":53,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{},"components/ProcessListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["load",{"_index":1269,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["loadchildren",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":468,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["loading.pres",{"_index":1394,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["loadingcontrol",{"_index":1275,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["local",{"_index":801,"title":{},"body":{"injectables/FilterService.html":{}}}],["local_filt",{"_index":798,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/variables.html":{}}}],["local_storag",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["log",{"_index":583,"title":{},"body":{"injectables/ExternalService.html":{}}}],["log(messag",{"_index":596,"title":{},"body":{"injectables/ExternalService.html":{}}}],["loggedinus",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":239,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{}}}],["login'},{'nam",{"_index":74,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["login.compon",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":258,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.scss",{"_index":257,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.t",{"_index":256,"title":{},"body":{"components/AuthLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:11",{"_index":278,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:12",{"_index":266,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:14",{"_index":271,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:15",{"_index":270,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:16",{"_index":274,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:18",{"_index":268,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login.component.ts:33",{"_index":269,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["login/auth",{"_index":255,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["loginerror",{"_index":261,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["logout",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/UserOptionsComponent.html":{}}}],["margin",{"_index":342,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["margin:50px",{"_index":251,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["matautocompletemodul",{"_index":1458,"title":{},"body":{"modules/TasksModule.html":{}}}],["match",{"_index":119,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodul",{"_index":457,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["matinputmodul",{"_index":1459,"title":{},"body":{"modules/TasksModule.html":{}}}],["matnativedatemodul",{"_index":458,"title":{},"body":{"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["max",{"_index":253,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["maxcol",{"_index":1020,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemarea",{"_index":1027,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemcol",{"_index":1023,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxitemrow",{"_index":1025,"title":{},"body":{"components/GridsterComponent.html":{}}}],["maxrow",{"_index":1022,"title":{},"body":{"components/GridsterComponent.html":{}}}],["md",{"_index":310,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["md.split",{"_index":900,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["md::after",{"_index":327,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["media",{"_index":888,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TasksComponent.html":{}}}],["media(max",{"_index":1056,"title":{},"body":{"components/GridsterComponent.html":{}}}],["menu",{"_index":817,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu'},{'nam",{"_index":83,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["menu.compon",{"_index":1465,"title":{},"body":{"modules/TasksModule.html":{}}}],["menu.component.html",{"_index":819,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.scss",{"_index":818,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.t",{"_index":816,"title":{},"body":{"components/FiltersMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:22",{"_index":839,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":826,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":841,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":838,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":842,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:30",{"_index":840,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":837,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":836,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":828,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:57",{"_index":832,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:66",{"_index":830,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:71",{"_index":834,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":831,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["menu/filt",{"_index":815,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["menuchangeannounc",{"_index":513,"title":{},"body":{"injectables/EventsService.html":{}}}],["menusourc",{"_index":514,"title":{},"body":{"injectables/EventsService.html":{}}}],["menutyp",{"_index":485,"title":{},"body":{"modules/CoreModule.html":{}}}],["merg",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messag",{"_index":571,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ExternalService.html":{}}}],["messageservic",{"_index":599,"title":{},"body":{"injectables/ExternalService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["method",{"_index":27,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{}}}],["min",{"_index":663,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["minitemarea",{"_index":1029,"title":{},"body":{"components/GridsterComponent.html":{}}}],["minitemcol",{"_index":1024,"title":{},"body":{"components/GridsterComponent.html":{}}}],["minitemrow",{"_index":1026,"title":{},"body":{"components/GridsterComponent.html":{}}}],["miscellan",{"_index":1567,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":725,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["mobilebreakpoint",{"_index":1018,"title":{},"body":{"components/GridsterComponent.html":{}}}],["modal",{"_index":636,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["modal'},{'nam",{"_index":79,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["modal.compon",{"_index":764,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{}}}],["modal.component.html",{"_index":638,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.scss",{"_index":637,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.t",{"_index":635,"title":{},"body":{"components/FilterModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:109",{"_index":650,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:14",{"_index":673,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:28",{"_index":676,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:29",{"_index":682,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:30",{"_index":684,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:31",{"_index":681,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:43",{"_index":648,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:44",{"_index":674,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:45",{"_index":675,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:49",{"_index":649,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:73",{"_index":654,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.component.ts:86",{"_index":652,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["modal.pres",{"_index":776,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["modal/filt",{"_index":634,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["modalcontrol",{"_index":647,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["mode",{"_index":483,"title":{},"body":{"modules/CoreModule.html":{}}}],["modul",{"_index":172,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":686,"title":{},"body":{"components/FilterModalComponent.html":{},"dependencies.html":{}}}],["more",{"_index":335,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["move",{"_index":1034,"title":{},"body":{"components/GridsterComponent.html":{}}}],["moz",{"_index":346,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["ms",{"_index":347,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["myrout",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["n",{"_index":1039,"title":{},"body":{"components/GridsterComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["namelik",{"_index":657,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["native/cor",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/statu",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["navigationend",{"_index":979,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["navparam",{"_index":641,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["ne",{"_index":1042,"title":{},"body":{"components/GridsterComponent.html":{}}}],["need",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"directives/OnCreateDirective.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new/:processdefinitionid",{"_index":1479,"title":{},"body":{"modules/TasksModule.html":{}}}],["next",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/TaskDetailsComponent.html":{}}}],["next.handle(request",{"_index":447,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["ngmodul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["ngondestroy",{"_index":1272,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["ngoninit",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["ngx",{"_index":50,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["none",{"_index":321,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["noopanimationsmodul",{"_index":460,"title":{},"body":{"modules/CoreModule.html":{}}}],["normal",{"_index":1412,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["note",{"_index":331,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["notif",{"_index":98,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["notificationsbuttoncompon",{"_index":97,"title":{"components/NotificationsButtonComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["nowrap",{"_index":352,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["null",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskItemComponent.html":{}}}],["number",{"_index":661,"title":{},"body":{"components/FilterModalComponent.html":{},"components/SortOptionsComponent.html":{}}}],["nw",{"_index":1044,"title":{},"body":{"components/GridsterComponent.html":{}}}],["o",{"_index":348,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["object",{"_index":275,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"miscellaneous/variables.html":{}}}],["object.key",{"_index":1291,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["object.password",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.token",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["objectkey",{"_index":1270,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["observ",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{}}}],["of(result",{"_index":631,"title":{},"body":{"injectables/ExternalService.html":{}}}],["oncreatedirect",{"_index":115,"title":{"directives/OnCreateDirective.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["oncustomev",{"_index":1273,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["oncustomevent(ev",{"_index":1280,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["ondestroy",{"_index":1266,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["oninit",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["oninit(girdst",{"_index":962,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onlogin",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["onlogout",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["onres",{"_index":953,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onresize(item",{"_index":965,"title":{},"body":{"components/GridsterComponent.html":{}}}],["onsameurlnavig",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsubmit",{"_index":1148,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["onsubmit(submiss",{"_index":1152,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["opac",{"_index":1195,"title":{},"body":{"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{}}}],["open",{"_index":975,"title":{},"body":{"components/GridsterComponent.html":{}}}],["openassigne",{"_index":1369,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["openfilt",{"_index":820,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["openfilters.length",{"_index":857,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["oper",{"_index":593,"title":{},"body":{"injectables/ExternalService.html":{}}}],["option",{"_index":40,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["options'},{'nam",{"_index":81,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.compon",{"_index":845,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":749,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.scss",{"_index":748,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.t",{"_index":747,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["options.component.ts:12",{"_index":1221,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":754,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:14",{"_index":763,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":762,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:16",{"_index":759,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:17",{"_index":761,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:18",{"_index":760,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:19",{"_index":1481,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["options.component.ts:20",{"_index":1216,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:21",{"_index":1220,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:22",{"_index":755,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["options.component.ts:24",{"_index":1219,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:25",{"_index":756,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:26",{"_index":1482,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["options.component.ts:30",{"_index":1217,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["options.component.ts:31",{"_index":757,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options.component.ts:42",{"_index":758,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["options/filt",{"_index":746,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["options/sort",{"_index":1214,"title":{},"body":{"components/SortOptionsComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["options/us",{"_index":844,"title":{},"body":{"components/FiltersMenuComponent.html":{},"modules/SharedModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["orqueri",{"_index":642,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["osx",{"_index":1058,"title":{},"body":{"components/GridsterComponent.html":{}}}],["out",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["outermarginbottom",{"_index":1014,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermarginleft",{"_index":1015,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermarginright",{"_index":1013,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outermargintop",{"_index":1012,"title":{},"body":{"components/GridsterComponent.html":{}}}],["outlin",{"_index":1448,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["output",{"_index":1132,"title":{},"body":{"directives/OnCreateDirective.html":{},"components/TaskItemComponent.html":{}}}],["overflow",{"_index":340,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["overlay",{"_index":486,"title":{},"body":{"modules/CoreModule.html":{}}}],["overridden",{"_index":503,"title":{},"body":{"classes/EnvService.html":{}}}],["overview",{"_index":1569,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrit",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["owner",{"_index":678,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["p",{"_index":349,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["packag",{"_index":1521,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":304,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["pane",{"_index":890,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["panel",{"_index":949,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["param",{"_index":588,"title":{},"body":{"injectables/ExternalService.html":{}}}],["paramet",{"_index":36,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":921,"title":{},"body":{"modules/FormModule.html":{}}}],["parsestr",{"_index":1340,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["parsestring(xml.bpmn20xml",{"_index":1342,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["password",{"_index":277,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["path",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["pathmatch",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ph",{"_index":1438,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["picker",{"_index":1430,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["pleas",{"_index":1360,"title":{},"body":{"components/TaskEditComponent.html":{}}}],["pointer",{"_index":1194,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["popov",{"_index":58,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["popover.pres",{"_index":61,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["popovercontrol",{"_index":33,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["popoverctrl",{"_index":25,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["posit",{"_index":941,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["presentfilt",{"_index":823,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["presentload",{"_index":1274,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["primari",{"_index":1410,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["prioriti",{"_index":660,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskItemComponent.html":{}}}],["prioritymax",{"_index":664,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["prioritymin",{"_index":662,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["privat",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["process",{"_index":29,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["process(ev",{"_index":41,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/GridComponent.html":{}}}],["processdefinit",{"_index":1137,"title":{"classes/ProcessDefinition.html":{}},"body":{"classes/ProcessDefinition.html":{},"components/ProcessListComponent.html":{},"coverage.html":{}}}],["processdefinition.nam",{"_index":1192,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["processdefinitionid",{"_index":1184,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["processformcompon",{"_index":99,"title":{"components/ProcessFormComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["processlistcompon",{"_index":52,"title":{"components/ProcessListComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["product",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiledata",{"_index":291,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["promis",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["provid",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["push",{"_index":804,"title":{},"body":{"injectables/FilterService.html":{}}}],["pushitem",{"_index":1046,"title":{},"body":{"components/GridsterComponent.html":{}}}],["pushresizeitem",{"_index":1049,"title":{},"body":{"components/GridsterComponent.html":{}}}],["queri",{"_index":679,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["radiu",{"_index":307,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["read",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonli",{"_index":1288,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["redirectto",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refreshfiltersannounc",{"_index":515,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshfilterssourc",{"_index":516,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshform",{"_index":1236,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["rejectedmng",{"_index":1401,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rel",{"_index":942,"title":{},"body":{"components/GridComponent.html":{},"components/GridsterComponent.html":{}}}],["reload",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remot",{"_index":609,"title":{},"body":{"injectables/ExternalService.html":{}}}],["req",{"_index":426,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["req.url.includes(urls[i",{"_index":449,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["request",{"_index":10,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["request.clon",{"_index":445,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["require('xml2js').parsestr",{"_index":1341,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["reset",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["resiz",{"_index":1036,"title":{},"body":{"components/GridsterComponent.html":{}}}],["resizeannounc",{"_index":517,"title":{},"body":{"injectables/EventsService.html":{}}}],["resizesourc",{"_index":518,"title":{},"body":{"injectables/EventsService.html":{}}}],["resourc",{"_index":923,"title":{},"body":{"modules/FormModule.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["resource.length",{"_index":1354,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["resource[0].valu",{"_index":1355,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["resourceid",{"_index":1286,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["resourcenam",{"_index":1285,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["resourcetyp",{"_index":677,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["responsetyp",{"_index":605,"title":{},"body":{"injectables/ExternalService.html":{}}}],["rest.servic",{"_index":280,"title":{},"body":{"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["rest.service.t",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["result",{"_index":118,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result['bpmn:definitions']['bpmn:process'][0]['bpmn:usertask'].filter(item",{"_index":1344,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["result['messag",{"_index":627,"title":{},"body":{"injectables/ExternalService.html":{}}}],["result['statu",{"_index":624,"title":{},"body":{"injectables/ExternalService.html":{}}}],["result['typ",{"_index":629,"title":{},"body":{"injectables/ExternalService.html":{}}}],["return",{"_index":44,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["returnobj",{"_index":792,"title":{},"body":{"injectables/FilterService.html":{}}}],["rgb",{"_index":1426,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rgb),0.15",{"_index":1447,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["rgba(0",{"_index":1072,"title":{},"body":{"components/GridsterComponent.html":{}}}],["rgba(var",{"_index":1424,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["right",{"_index":313,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["root",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"injectables/ExternalService.html":{},"injectables/FilterService.html":{}}}],["root'},{'nam",{"_index":70,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["round",{"_index":303,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["rout",{"_index":201,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"modules/TasksModule.html":{},"interfaces/Window.html":{},"index.html":{},"routes.html":{}}}],["router",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/GridsterComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["routereusestrategi",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["routermodul",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{}}}],["routermodule.forchild(rout",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["routermodule.forroot(rout",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.modul",{"_index":471,"title":{},"body":{"modules/CoreModule.html":{}}}],["routing.module.t",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":972,"title":{},"body":{"components/GridsterComponent.html":{}}}],["rtl",{"_index":990,"title":{},"body":{"components/GridsterComponent.html":{}}}],["run",{"_index":622,"title":{},"body":{"injectables/ExternalService.html":{}}}],["rxj",{"_index":434,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"injectables/EventsService.html":{},"dependencies.html":{}}}],["rxjs/observ",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ExternalService.html":{}}}],["rxjs/observable/of",{"_index":600,"title":{},"body":{"injectables/ExternalService.html":{}}}],["rxjs/oper",{"_index":603,"title":{},"body":{"injectables/ExternalService.html":{}}}],["s",{"_index":1037,"title":{},"body":{"components/GridsterComponent.html":{}}}],["save",{"_index":745,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["savefilt",{"_index":644,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["screen",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["scroll",{"_index":876,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["scrolltonewitem",{"_index":1053,"title":{},"body":{"components/GridsterComponent.html":{}}}],["se",{"_index":1041,"title":{},"body":{"components/GridsterComponent.html":{}}}],["searchbar",{"_index":317,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["section",{"_index":739,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["select",{"_index":309,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["send",{"_index":608,"title":{},"body":{"injectables/ExternalService.html":{}}}],["servic",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"dependencies.html":{}}}],["servicerequest",{"_index":920,"title":{},"body":{"modules/FormModule.html":{}}}],["services/auth.servic",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{}}}],["services/camunda",{"_index":475,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/env.servic",{"_index":435,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["services/env.service.provid",{"_index":473,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/events.servic",{"_index":474,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/external.servic",{"_index":476,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":741,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["sethead",{"_index":446,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["setlanguag",{"_index":1100,"title":{},"body":{"components/LanguageComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["setlanguage(lang",{"_index":1103,"title":{},"body":{"components/LanguageComponent.html":{}}}],["setsort",{"_index":1215,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["setsorting(dir",{"_index":1218,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["settimeout",{"_index":1395,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["setus",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(object",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["shade",{"_index":874,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["shadow",{"_index":320,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["shared/components/us",{"_index":843,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["shared/shared.modul",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/TasksModule.html":{}}}],["sharedmodul",{"_index":366,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["showbackdrop",{"_index":771,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["side.collaps",{"_index":902,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["simplechang",{"_index":1135,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["size",{"_index":333,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["smooth",{"_index":1059,"title":{},"body":{"components/GridsterComponent.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["sort",{"_index":102,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/EventsService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["sorting.direct",{"_index":1224,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["sorting.nam",{"_index":1226,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["sortingannounc",{"_index":519,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortingsourc",{"_index":520,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortoptionscompon",{"_index":101,"title":{"components/SortOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"modules/CoreModule.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["space",{"_index":351,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["spinner",{"_index":1260,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["splashscreen",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["split",{"_index":899,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["src/.../auth.service.t",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.module.t",{"_index":1568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../env.service.provider.t",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.service.t",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/auth",{"_index":236,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"coverage.html":{}}}],["src/app/core/cor",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/core/core.module.t",{"_index":454,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/directives/on",{"_index":1130,"title":{},"body":{"directives/OnCreateDirective.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.t",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:12",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:8",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interceptors/bas",{"_index":412,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["src/app/core/schemas/processdefinition.t",{"_index":1138,"title":{},"body":{"classes/ProcessDefinition.html":{},"coverage.html":{}}}],["src/app/core/schemas/processdefinition.ts:2",{"_index":1139,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/processdefinition.ts:3",{"_index":1141,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/processdefinition.ts:4",{"_index":1140,"title":{},"body":{"classes/ProcessDefinition.html":{}}}],["src/app/core/schemas/task.t",{"_index":1227,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/core/schemas/task.ts:2",{"_index":1228,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/schemas/task.ts:3",{"_index":1230,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/schemas/task.ts:4",{"_index":1229,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/services/auth.service.t",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:13",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:18",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:21",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:24",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/camunda",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["src/app/core/services/env.service.provider.t",{"_index":1498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/env.service.t",{"_index":495,"title":{},"body":{"classes/EnvService.html":{},"coverage.html":{}}}],["src/app/core/services/env.service.ts:7",{"_index":501,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/env.service.ts:8",{"_index":500,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/env.service.ts:9",{"_index":499,"title":{},"body":{"classes/EnvService.html":{}}}],["src/app/core/services/events.service.t",{"_index":506,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/app/core/services/events.service.ts:10",{"_index":565,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:11",{"_index":553,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:12",{"_index":562,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:13",{"_index":550,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:14",{"_index":556,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:15",{"_index":568,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:16",{"_index":559,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:18",{"_index":564,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:19",{"_index":552,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:20",{"_index":561,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:21",{"_index":548,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:22",{"_index":555,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:23",{"_index":567,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:24",{"_index":558,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:28",{"_index":534,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:31",{"_index":544,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:34",{"_index":532,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:37",{"_index":529,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:40",{"_index":537,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:43",{"_index":546,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/events.service.ts:46",{"_index":540,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/core/services/external.service.t",{"_index":580,"title":{},"body":{"injectables/ExternalService.html":{},"coverage.html":{}}}],["src/app/core/services/external.service.ts:12",{"_index":585,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:19",{"_index":589,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:24",{"_index":592,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/external.service.ts:46",{"_index":597,"title":{},"body":{"injectables/ExternalService.html":{}}}],["src/app/core/services/filter.service.t",{"_index":778,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/filter.service.ts:12",{"_index":786,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:14",{"_index":795,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:22",{"_index":797,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:26",{"_index":788,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:35",{"_index":793,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter.service.ts:50",{"_index":790,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/form/components/form/form.component.t",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["src/app/form/components/formio/formio.component.t",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["src/app/form/form.module.t",{"_index":910,"title":{},"body":{"modules/FormModule.html":{}}}],["src/app/shared/components/header/header.component.t",{"_index":1091,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:10",{"_index":1095,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:11",{"_index":1096,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/languag",{"_index":1114,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/language/language.component.t",{"_index":1097,"title":{},"body":{"components/LanguageComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/language/language.component.ts:12",{"_index":1108,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:15",{"_index":1101,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:16",{"_index":1109,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:19",{"_index":1104,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/language/language.component.ts:25",{"_index":1102,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/shared/components/notif",{"_index":1126,"title":{},"body":{"components/NotificationsButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/us",{"_index":1480,"title":{},"body":{"components/UserOptionsComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1200,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tasks/components/add",{"_index":9,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/filt",{"_index":633,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/grid/grid.component.t",{"_index":924,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:12",{"_index":928,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:13",{"_index":931,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:14",{"_index":933,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:15",{"_index":932,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:19",{"_index":930,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/grid/grid.component.ts:26",{"_index":929,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.t",{"_index":944,"title":{},"body":{"components/GridsterComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:15",{"_index":970,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:16",{"_index":976,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:21",{"_index":960,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:23",{"_index":966,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:25",{"_index":963,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:29",{"_index":955,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:31",{"_index":967,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:32",{"_index":968,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:35",{"_index":978,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:36",{"_index":977,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:41",{"_index":956,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:47",{"_index":958,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/gridster/gridster.component.ts:58",{"_index":961,"title":{},"body":{"components/GridsterComponent.html":{}}}],["src/app/tasks/components/process",{"_index":1142,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/sort",{"_index":1213,"title":{},"body":{"components/SortOptionsComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/task",{"_index":1231,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.t",{"_index":1449,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.ts:12",{"_index":1452,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.module.t",{"_index":1457,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startform",{"_index":1147,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["startform.key",{"_index":1171,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["startform.key.split",{"_index":1174,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["startprocess",{"_index":1179,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["startprocess(processdefinitionid",{"_index":1182,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["startrequest:servicerequest",{"_index":1172,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["state",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statement",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":952,"title":{},"body":{"components/GridsterComponent.html":{}}}],["statusbar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["step",{"_index":1065,"title":{},"body":{"components/GridsterComponent.html":{}}}],["storag",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["storage_key",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageservic",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{}}}],["storageservicemodul",{"_index":469,"title":{},"body":{"modules/CoreModule.html":{}}}],["storeonlocalstorag",{"_index":783,"title":{},"body":{"injectables/FilterService.html":{}}}],["storeonlocalstorage(griditem",{"_index":794,"title":{},"body":{"injectables/FilterService.html":{}}}],["stream",{"_index":570,"title":{},"body":{"injectables/EventsService.html":{},"dependencies.html":{}}}],["string",{"_index":425,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"classes/Task.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["subject",{"_index":569,"title":{},"body":{"injectables/EventsService.html":{}}}],["submiss",{"_index":1154,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{}}}],["submission._fvid",{"_index":1168,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["submission._id",{"_index":1164,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["submit",{"_index":263,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["subscrib",{"_index":1165,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["subscribe((filt",{"_index":854,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["subscribe(data",{"_index":1397,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["subscribe(filt",{"_index":862,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["subscribe(inst",{"_index":1161,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["success",{"_index":1425,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["support",{"_index":1573,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1574,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":1043,"title":{},"body":{"components/GridsterComponent.html":{}}}],["swap",{"_index":1045,"title":{},"body":{"components/GridsterComponent.html":{}}}],["switch",{"_index":713,"title":{},"body":{"components/FilterModalComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["switch'},{'nam",{"_index":96,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["switch.compon",{"_index":1207,"title":{},"body":{"modules/SharedModule.html":{}}}],["switch.component.html",{"_index":1118,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.scss",{"_index":1117,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.t",{"_index":1116,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"coverage.html":{}}}],["switch.component.ts:11",{"_index":1119,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:13",{"_index":1123,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:14",{"_index":1122,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch.component.ts:18",{"_index":1121,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["switch/languag",{"_index":1115,"title":{},"body":{"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["t",{"_index":591,"title":{},"body":{"injectables/ExternalService.html":{}}}],["tabl",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":602,"title":{},"body":{"injectables/ExternalService.html":{}}}],["task",{"_index":104,"title":{"classes/Task.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["task.assigne",{"_index":1419,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.creat",{"_index":1415,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.descript",{"_index":1414,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.du",{"_index":1416,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["task.nam",{"_index":1413,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["taskdefinit",{"_index":1343,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["taskdefinition[0].$['camunda:formkey",{"_index":1349,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["taskdetailscompon",{"_index":103,"title":{"components/TaskDetailsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskeditcompon",{"_index":106,"title":{"components/TaskEditComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"index.html":{}}}],["taskgridcompon",{"_index":108,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskgroup",{"_index":643,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["taskid",{"_index":1309,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["taskitemcompon",{"_index":109,"title":{"components/TaskItemComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["tasks'},{'nam",{"_index":112,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["tasks.compon",{"_index":1476,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.component.html",{"_index":1451,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1450,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.length",{"_index":1336,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["tasks/tasks.module#tasksmodul",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tasks[0",{"_index":1337,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["taskscompon",{"_index":111,"title":{"components/TasksComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["tasksmodul",{"_index":1453,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"index.html":{},"modules.html":{}}}],["temp",{"_index":696,"title":{},"body":{"components/FilterModalComponent.html":{},"injectables/FilterService.html":{}}}],["temp.length",{"_index":814,"title":{},"body":{"injectables/FilterService.html":{}}}],["temp['valu",{"_index":697,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["tempor",{"_index":1400,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["text",{"_index":353,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["this.allcriterias.filter(item",{"_index":705,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.allcriterias.foreach(el",{"_index":694,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.archivesoruce.asobserv",{"_index":547,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.archivesoruce.next(arch",{"_index":576,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.auth.getus",{"_index":442,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.auth.getuser().usernam",{"_index":688,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["this.auth.isloggednin",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.logout",{"_index":1483,"title":{},"body":{"components/UserOptionsComponent.html":{}}}],["this.auth.onlogin.subscrib",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.onlogout.subscrib",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authserivce.setuser(this.us",{"_index":300,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.authserivce.setuser(us",{"_index":292,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.createfilter(filter).subscribe((data",{"_index":864,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.createfilter(this.filter).subscrib",{"_index":734,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.camundaservice.deletefilter(this.id).subscrib",{"_index":768,"title":{},"body":{"components/FilterOptionsComponent.html":{}}}],["this.camundaservice.getexecutionvariables(this.task.executionid).subscribe(executionvari",{"_index":1329,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.getfilt",{"_index":853,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.getfilter(this.navparams.data.filterid).subscribe(filt",{"_index":690,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.camundaservice.getfiltercount(filter.id).subscribe(data",{"_index":847,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.camundaservice.gethistorytask(this.route.snapshot.params.taskid).subscribe(task",{"_index":1335,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.getidentity(this.user.username).subscribe((ident",{"_index":296,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.getidentity(user.username).subscribe((ident",{"_index":286,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.getprocessdefinitions().subscribe((processdefinit",{"_index":1190,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["this.camundaservice.getprocessdefinitionxml(this.task.processdefinitionid).subscribe(xml",{"_index":1338,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.gettask(this.route.snapshot.params.taskid).subscribe((task",{"_index":1320,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.getuserprofile(this.user.username).subscribe((profiledata",{"_index":298,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.getuserprofile(user.username).subscribe((profiledata",{"_index":289,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.getvariableinstancebyexecutionid(this.task.executionid).subscribe(executionvari",{"_index":1351,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.postassigntask(this.task.id",{"_index":1303,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.postcompletetask(this.task.id",{"_index":1305,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["this.camundaservice.postuserlogin(this.user).subscribe((authobj",{"_index":294,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.postuserlogin(user).subscribe((authobj",{"_index":283,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.camundaservice.processdefinitionsubmitform(this.route.snapshot.params['processdefinitionid",{"_index":1160,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.processinstancestartform(this.route.snapshot.params['processdefinitionid']).subscribe(startform",{"_index":1170,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.updateexecutionvariables(instance.id",{"_index":1162,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.camundaservice.updatefilter(this.filter['id",{"_index":730,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.changedopt",{"_index":995,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.clos",{"_index":769,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/SortOptionsComponent.html":{}}}],["this.criterias.filter(item1",{"_index":708,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.criterias.foreach(el",{"_index":721,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.criterias.push(temp",{"_index":698,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.destoy.emit",{"_index":1402,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.dismissload",{"_index":1333,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.env.engineapiurl",{"_index":429,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.env.engineresturl",{"_index":430,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.event.announcefilt",{"_index":851,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.event.announcefiltersrefresh",{"_index":732,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/ProcessFormComponent.html":{},"components/TaskItemComponent.html":{}}}],["this.event.announceitem(item",{"_index":1398,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.event.itemchange$.subscribe(data",{"_index":1252,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.event.refreshfiltersannounced$.subscrib",{"_index":852,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.events.announcefiltersrefresh",{"_index":1311,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.events.announceitem",{"_index":1308,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.eventsservice.announcesorting(sort",{"_index":1225,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["this.filt",{"_index":691,"title":{},"body":{"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["this.filter).subscrib",{"_index":731,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.hasownproperty('id",{"_index":729,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.own",{"_index":687,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query.orqueri",{"_index":693,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query['orqueri",{"_index":728,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filter.query[element.key",{"_index":695,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.filters.filter((item",{"_index":856,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.filters.length",{"_index":855,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.filtersource.asobserv",{"_index":551,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.filtersource.next(filt",{"_index":575,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.fixdom(data",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fixdom(data.translations.dir",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fixpanelsdirection(data",{"_index":997,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.fixpanelsdirection(lang.translations.dir",{"_index":999,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.form.formkey",{"_index":1325,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.form.readonli",{"_index":1350,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.form.resourceid",{"_index":1330,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.form.resourcenam",{"_index":1327,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.getus",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.request(method",{"_index":604,"title":{},"body":{"injectables/ExternalService.html":{}}}],["this.id",{"_index":765,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.input.nativeelement.focu",{"_index":1396,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.isfilteropen(griditem",{"_index":809,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.itemsource.asobserv",{"_index":554,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.itemsource.next(item",{"_index":577,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.load",{"_index":1315,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.loading.dismiss",{"_index":1318,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.loading.pres",{"_index":1317,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.loadingcontroller.cr",{"_index":1316,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["this.loadingcontroller.dismiss",{"_index":1339,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.log(`${oper",{"_index":618,"title":{},"body":{"injectables/ExternalService.html":{}}}],["this.loginerror",{"_index":295,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.menusource.asobserv",{"_index":557,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.menusource.next(chang",{"_index":579,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.modal.dismiss",{"_index":733,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.modalcontroller.cr",{"_index":770,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{}}}],["this.navparams.data.filterid",{"_index":689,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.navparams.data.id",{"_index":766,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.oncreatedirective.emit('dummi",{"_index":1136,"title":{},"body":{"directives/OnCreateDirective.html":{}}}],["this.oninit",{"_index":1006,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.onlogin.emit(object",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onlogout.emit",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onres",{"_index":1008,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.openfilt",{"_index":850,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.opt",{"_index":988,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.options.api.optionschang",{"_index":989,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.orqueri",{"_index":692,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.hasownproperty('assigne",{"_index":702,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.length",{"_index":699,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.orqueries.push",{"_index":715,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.panels.details.col",{"_index":992,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.details.fullscreen",{"_index":1249,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.panels.details.open",{"_index":1004,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["this.panels.details.x",{"_index":993,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.tasks.col",{"_index":994,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.panels.tasks.x",{"_index":991,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.popover.dismiss",{"_index":1112,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.popoverctrl.cr",{"_index":60,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/LanguageSwitchComponent.html":{}}}],["this.popoverctrl.dismiss",{"_index":767,"title":{},"body":{"components/FilterOptionsComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/UserOptionsComponent.html":{}}}],["this.presentloading().then",{"_index":1319,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.processdefinit",{"_index":1191,"title":{},"body":{"components/ProcessListComponent.html":{}}}],["this.refreshfilterssource.asobserv",{"_index":560,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.refreshfilterssource.next(data",{"_index":573,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.refreshform.subscrib",{"_index":1251,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.resizesource.asobserv",{"_index":563,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.resizesource.next(item",{"_index":574,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.route.firstchild",{"_index":1002,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.route.firstchild.snapshot.params['taskid",{"_index":1003,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":1000,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['auth/login",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['task",{"_index":1169,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.router.navigate([`/tasks/new/${processdefinitionid",{"_index":1175,"title":{},"body":{"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{}}}],["this.service.onloginsubmit(ev",{"_index":293,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.sortings[this.sort",{"_index":1223,"title":{},"body":{"components/SortOptionsComponent.html":{}}}],["this.sortingsource.asobserv",{"_index":566,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.sortingsource.next(sort",{"_index":578,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.startform",{"_index":1173,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.startform[0",{"_index":1167,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.startform[1",{"_index":1163,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["this.storage.get('loggedinus",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.get(storage_key",{"_index":803,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.storage.remove('loggedinus",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set('languag",{"_index":1111,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.storage.set('loggedinus",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set(storage_key",{"_index":808,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.task",{"_index":1253,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.task.assigne",{"_index":1302,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["this.task.complet",{"_index":1399,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["this.task.executionid",{"_index":1321,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.task.formkey",{"_index":1348,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.task.formkey.split",{"_index":1324,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.task.id",{"_index":1310,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.task.taskdefinitionkey",{"_index":1346,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["this.taskgroup",{"_index":700,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["this.togglefilt",{"_index":860,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.togglefilter(openfilters[0",{"_index":858,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.togglefilter(this.filters[0",{"_index":861,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["this.translate.get('dir').subscribe((data",{"_index":996,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.translate.onlangchange.subscribe((data",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.onlangchange.subscribe(lang",{"_index":998,"title":{},"body":{"components/GridsterComponent.html":{}}}],["this.translate.setdefaultlang('en",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":1110,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.use(this.storage.get('languag",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["this.urlmatches(this.url",{"_index":444,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["this.user['group",{"_index":297,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["this.user['profil",{"_index":299,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["timer",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["titl",{"_index":1094,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["todo",{"_index":607,"title":{},"body":{"injectables/ExternalService.html":{}}}],["togglefilt",{"_index":824,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["togglefilter(item",{"_index":833,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["togglefullscreen",{"_index":1237,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["toolbar",{"_index":302,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksComponent.html":{}}}],["toolkit",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":322,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["top:0px",{"_index":1090,"title":{},"body":{"components/GridsterComponent.html":{}}}],["top:calc(100",{"_index":1086,"title":{},"body":{"components/GridsterComponent.html":{}}}],["transform",{"_index":616,"title":{},"body":{"injectables/ExternalService.html":{},"components/GridsterComponent.html":{}}}],["transit",{"_index":344,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["transition:pad",{"_index":1443,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["translat",{"_index":26,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["translate.currentlang",{"_index":1125,"title":{},"body":{"components/LanguageSwitchComponent.html":{}}}],["translate/cor",{"_index":51,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"modules/CoreModule.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"modules/SharedModule.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{}}}],["translate/http",{"_index":467,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["translate3d(0px",{"_index":1080,"title":{},"body":{"components/GridsterComponent.html":{}}}],["translatehttpload",{"_index":466,"title":{},"body":{"modules/CoreModule.html":{}}}],["translatehttploader(http",{"_index":479,"title":{},"body":{"modules/CoreModule.html":{}}}],["translateload",{"_index":464,"title":{},"body":{"modules/CoreModule.html":{}}}],["translatemodul",{"_index":465,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":491,"title":{},"body":{"modules/CoreModule.html":{}}}],["translateservic",{"_index":32,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/TaskEditComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["transpar",{"_index":1064,"title":{},"body":{"components/GridsterComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["tri",{"_index":1299,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["true",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthLoginComponent.html":{},"interceptors/BasicAuthInterceptor.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1245,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"directives/OnCreateDirective.html":{},"classes/ProcessDefinition.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"classes/Task.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":1322,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["updat",{"_index":807,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateallstorag",{"_index":784,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateallstorage(griditem",{"_index":796,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatequeri",{"_index":645,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatequery(ev",{"_index":651,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatetyp",{"_index":646,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["updatetype(ev",{"_index":653,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["url",{"_index":414,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/ExternalService.html":{}}}],["urlmatch",{"_index":416,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["urlmatches(url",{"_index":424,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["urls.length",{"_index":448,"title":{},"body":{"interceptors/BasicAuthInterceptor.html":{}}}],["us",{"_index":742,"title":{},"body":{"components/FilterModalComponent.html":{}}}],["useclass",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["usefactori",{"_index":492,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":114,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"modules/FormModule.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["user.nam",{"_index":1417,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["user['group",{"_index":287,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["user['profil",{"_index":290,"title":{},"body":{"components/AuthLoginComponent.html":{}}}],["userid",{"_index":1304,"title":{},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{}}}],["usernam",{"_index":276,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/TaskItemComponent.html":{}}}],["useropt",{"_index":825,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["useroptions(ev",{"_index":835,"title":{},"body":{"components/FiltersMenuComponent.html":{}}}],["useroptionscompon",{"_index":113,"title":{"components/UserOptionsComponent.html":{}},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"modules/SharedModule.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["usevalu",{"_index":919,"title":{},"body":{"modules/FormModule.html":{}}}],["v_",{"_index":1166,"title":{},"body":{"components/ProcessFormComponent.html":{}}}],["valu",{"_index":273,"title":{},"body":{"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"interceptors/BasicAuthInterceptor.html":{},"classes/EnvService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AddRequestButtonComponent.html":{},"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageComponent.html":{},"components/LanguageSwitchComponent.html":{},"components/NotificationsButtonComponent.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{},"components/UserOptionsComponent.html":{}}}],["variabl",{"_index":1306,"title":{"miscellaneous/variables.html":{}},"body":{"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variable.nam",{"_index":1353,"title":{},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{}}}],["vertic",{"_index":1434,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["viewchild",{"_index":1393,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["viewchild('trigg",{"_index":1387,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["visibl",{"_index":1089,"title":{},"body":{"components/GridsterComponent.html":{}}}],["visible>.split",{"_index":901,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["void",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ExternalService.html":{},"components/FilterModalComponent.html":{},"components/FilterOptionsComponent.html":{},"injectables/FilterService.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/LanguageComponent.html":{},"directives/OnCreateDirective.html":{},"components/ProcessFormComponent.html":{},"components/ProcessListComponent.html":{},"components/SortOptionsComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskEditComponent.html":{},"components/TaskItemComponent.html":{},"components/UserOptionsComponent.html":{},"interfaces/Window.html":{}}}],["w",{"_index":1040,"title":{},"body":{"components/GridsterComponent.html":{}}}],["warn",{"_index":1408,"title":{},"body":{"components/TaskItemComponent.html":{}}}],["webkit",{"_index":343,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["webstorag",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/FilterService.html":{},"components/LanguageComponent.html":{},"dependencies.html":{}}}],["weight",{"_index":886,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["white",{"_index":350,"title":{},"body":{"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["width",{"_index":249,"title":{},"body":{"components/AuthIndexComponent.html":{},"components/AuthLoginComponent.html":{},"components/FiltersMenuComponent.html":{},"components/GridComponent.html":{},"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{},"components/TasksComponent.html":{}}}],["width:100",{"_index":254,"title":{},"body":{"components/AuthIndexComponent.html":{}}}],["width:1550px",{"_index":935,"title":{},"body":{"components/GridComponent.html":{}}}],["width:641px",{"_index":1057,"title":{},"body":{"components/GridsterComponent.html":{}}}],["width:740px",{"_index":936,"title":{},"body":{"components/GridComponent.html":{}}}],["window",{"_index":1298,"title":{"interfaces/Window.html":{}},"body":{"components/TaskEditComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.location.href",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["window.settimeout(funct",{"_index":985,"title":{},"body":{"components/GridsterComponent.html":{}}}],["window['__env'][key",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1083,"title":{},"body":{"components/GridsterComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TaskItemComponent.html":{}}}],["word",{"_index":883,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["wrap",{"_index":884,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/TasksComponent.html":{}}}],["x",{"_index":881,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TasksComponent.html":{}}}],["y",{"_index":882,"title":{},"body":{"components/FiltersMenuComponent.html":{},"components/GridsterComponent.html":{},"components/TasksComponent.html":{}}}],["ye",{"_index":594,"title":{},"body":{"injectables/ExternalService.html":{}}}],["zone.j",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/SharedModule.html":{},"components/TaskDetailsComponent.html":{},"modules/TasksModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddRequestButtonComponent.html":{"url":"components/AddRequestButtonComponent.html","title":"component - AddRequestButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddRequestButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/add-request-button/add-request-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-request-button\n            \n\n            \n                styleUrls\n                ./add-request-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-request-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/add-request-button/add-request-button.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProcessListComponent } from '../process-list/process-list.component';\n\n@Component({\n    selector: 'app-add-request-button',\n    templateUrl: './add-request-button.component.html',\n    styleUrls: ['./add-request-button.component.scss']\n})\nexport class AddRequestButtonComponent {\n    constructor(\n        public translate: TranslateService,\n        public popoverCtrl: PopoverController\n    ) {\n\n    }\n    async process(event) {\n        const popover = await this.popoverCtrl.create({\n            component: ProcessListComponent,\n            event: event\n        });\n        return await popover.present();\n    }\n}\n\n    \n\n    \n        {{'Add\n    Request' | translate}}\n    \n\n    \n\n    \n                \n                    ./add-request-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'Add    Request\\' | translate}}    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddRequestButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fixDom\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventsService, auth: AuthService, router: Router, translate: TranslateService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixDom\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixDom(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\nimport { AuthService } from './core/services/auth.service';\nimport { EventsService } from './core/services/events.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public eventService: EventsService,\n    public auth: AuthService,\n    private router: Router,\n    public translate: TranslateService,\n    @Inject(LOCAL_STORAGE) private storage: StorageService) {\n\n    this.translate.setDefaultLang('en');\n    this.translate.use(this.storage.get('language') || 'en');\n    this.auth.onLogin.subscribe(() => {\n      window.location.href = '/tasks';\n\n    });\n    this.auth.onLogout.subscribe(() => {\n      this.router.navigate(['/auth/login']);\n    });\n  }\n\n  fixDom(dir) {\n    const columns = document.getElementsByClassName('formio-component-columns');\n    const choices = document.getElementsByClassName('choices');\n    const headers = document.getElementsByClassName('header');\n    for (let i = 0; i  {\n        choices[i].setAttribute('dir', dir);\n      }, 500);\n    }\n    for (let i = 0; i  {\n      this.fixDom(data);\n    });\n    this.translate.onLangChange.subscribe((data) => {\n      this.fixDom(data.translations.dir);\n    });\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\n\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'tasks',\n    pathMatch: 'full'\n  },\n  { path: 'tasks', loadChildren: '../tasks/tasks.module#TasksModule', canActivate: [AuthGuard] },\n  {\n    path: 'auth',\n    loadChildren: '../auth/auth.module#AuthModule'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/guards/auth.guard.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../services/auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService,\n    private router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    if (this.auth.isLoggednIn()) {\n      return true;\n    } else {\n      this.router.navigate(['auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthIndexComponent.html":{"url":"components/AuthIndexComponent.html","title":"component - AuthIndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthIndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/auth-index/auth-index.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index-login\n            \n\n            \n                styleUrls\n                ./auth-index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/auth-index/auth-index.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-index/auth-index.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-index-login',\n  templateUrl: './auth-index.component.html',\n  styleUrls: ['./auth-index.component.scss'],\n})\nexport class AuthIndexComponent  implements OnInit {\n\n  constructor(\n    public popoverCtrl: PopoverController,\n     public translate: TranslateService) {\n  }\n\n  ngOnInit() {\n\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./auth-index.component.scss\n                \n                .form-container{\n  width: 500px; \n  margin:50px auto;\n  max-width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthIndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLoginComponent.html":{"url":"components/AuthLoginComponent.html","title":"component - AuthLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/auth-login/auth-login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-login\n            \n\n            \n                styleUrls\n                ./auth-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSerivce\n                            \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                loginError\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeSubmit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(camundaService: CamundaRestService, authSerivce: AuthService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/auth-login/auth-login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSerivce\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beforeSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeforeSubmit(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authSerivce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authSerivce:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginError:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { username: '', password: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/components/auth-login/auth-login.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\n@Component({\n    selector: 'app-auth-login',\n    templateUrl: './auth-login.component.html',\n    styleUrls: ['./auth-login.component.scss'],\n})\nexport class AuthLoginComponent {\n    user = { username: '', password: '' };\n    loginError = false;\n    constructor(\n        public camundaService: CamundaRestService,\n        public authSerivce: AuthService,\n        public translate: TranslateService) {\n    }\n    beforeSubmit(event) {\n        /* const user = { username: event.data.username, password: event.data.password };\n            this.camundaService.postUserLogin(user).subscribe((authObj) => {\n                if (authObj.status !== 401) {\n                    this.camundaService.getIdentity(user.username).subscribe((identity) => {\n                        user['groups'] = identity.groups;\n                        this.camundaService.getUserProfile(user.username).subscribe((profileData) => {\n                            user['profile'] = profileData;\n                            this.authSerivce.setUser(user);\n                        });\n                    });\n                }\n            }); */\n        // this.service.onLoginSubmit(event);\n    }\n    submit() {\n        this.camundaService.postUserLogin(this.user).subscribe((authObj) => {\n            if (authObj.status !== 401) {\n                this.loginError = false;\n                this.camundaService.getIdentity(this.user.username).subscribe((identity) => {\n                    this.user['groups'] = identity.groups;\n                    this.camundaService.getUserProfile(this.user.username).subscribe((profileData) => {\n                        this.user['profile'] = profileData;\n                        this.authSerivce.setUser(this.user);\n\n                    });\n                });\n            } else {\n                this.loginError = true;\n            }\n        });\n    }\n}\n\n    \n\n    \n         -->\n\n  \n    {{'Username or password is incorrect.' | translate}}\n  \n\n\n  \n\n\n  \n\n\n{{'Login' | translate}}\n\n\n    \n\n    \n                \n                    ./auth-login.component.scss\n                \n                .toolbar-round {\n    padding: 10px;\n    border-radius: 20px;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->      {{\\'Username or password is incorrect.\\' | translate}}      {{\\'Login\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthIndexComponent\n\nAuthIndexComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthIndexComponent->AuthModule\n\n\n\n\n\nAuthLoginComponent\n\nAuthLoginComponent\n\nAuthModule -->\n\nAuthLoginComponent->AuthModule\n\n\n\n\n\nFormioAuth\n\nFormioAuth\n\nAuthModule -->\n\nFormioAuth->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthIndexComponent\n                        \n                        \n                            AuthLoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormioAuth\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule, Routes } from '@angular/router';\nimport { IonicRouteStrategy } from '@ionic/angular';\nimport { FormioModule } from 'angular-formio';\nimport { FormioAuth } from 'angular-formio/auth';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthIndexComponent } from './components/auth-index/auth-index.component';\nimport { AuthLoginComponent } from './components/auth-login/auth-login.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthIndexComponent,\n    children: [\n      { path: 'login', component: AuthLoginComponent }\n    ]\n  }\n];\n@NgModule({\n  imports: [\n    FormioModule,\n    FormioAuth,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [AuthLoginComponent, AuthIndexComponent],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onLogin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isLoggednIn\n                            \n                            \n                                logout\n                            \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(myRoute: Router, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        myRoute\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggednIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggednIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onLogin:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onLogout:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\nconst STORAGE_KEY = 'LoggedInUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  onLogin: EventEmitter = new EventEmitter();\n  onLogout: EventEmitter = new EventEmitter();\n  constructor(private myRoute: Router, @Inject(LOCAL_STORAGE) private storage: StorageService) { }\n  setUser(object) {\n    object.token = btoa(object.username + ':' + object.password);\n    this.storage.set('LoggedInUser', object);\n    this.onLogin.emit(object);\n  }\n  getUser() {\n    return this.storage.get('LoggedInUser');\n  }\n  isLoggednIn() {\n    return this.getUser() !== null;\n  }\n  logout() {\n    this.storage.remove('LoggedInUser');\n    this.onLogout.emit({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BasicAuthInterceptor.html":{"url":"interceptors/BasicAuthInterceptor.html","title":"interceptor - BasicAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  BasicAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/basic-auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                urls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                urlMatches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, env: EnvService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/basic-auth.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    EnvService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlMatches(urls: string[], req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urls:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [this.env.engineApiUrl, this.env.engineRestUrl]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interceptors/basic-auth.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { EnvService } from '../services/env.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BasicAuthInterceptor implements HttpInterceptor {\n    urls = [this.env.engineApiUrl, this.env.engineRestUrl];\n    constructor(public auth: AuthService, private env: EnvService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add authorization header with basic auth credentials if available\n        const currentUser = this.auth.getUser();\n        if (currentUser && currentUser.token && this.urlMatches(this.urls, request)) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Basic ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n    urlMatches(urls: string[], req: HttpRequest): boolean {\n        for (let i = 0; i !== urls.length; i++) {\n            if (req.url.includes(urls[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nCamundaRestService\n\nCamundaRestService\n\nCoreModule -->\n\nCamundaRestService->CoreModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nCoreModule -->\n\nEventsService->CoreModule\n\n\n\n\n\nExternalService\n\nExternalService\n\nCoreModule -->\n\nExternalService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CamundaRestService\n                        \n                        \n                            EventsService\n                        \n                        \n                            ExternalService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { AppRoutingModule } from './core-routing.module';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthService } from './services/auth.service';\nimport { EnvServiceProvider } from './services/env.service.provider';\nimport { EventsService } from './services/events.service';\nimport { CamundaRestService } from './services/camunda-rest.service';\nimport { ExternalService } from './services/external.service';\n\n\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  imports: [\n    StorageServiceModule,\n    HttpClientModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    NoopAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      backButtonText: '',\n      menuType: 'overlay',\n      backButtonIcon: 'ios-arrow-back'\n    }),\n    AppRoutingModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n\n  ],\n  providers: [\n    EnvServiceProvider,\n    AuthService,\n    AuthGuard,\n    EventsService,\n    CamundaRestService,\n    ExternalService,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  exports: [\n    IonicModule,\n    RouterModule\n  ],\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvService.html":{"url":"classes/EnvService.html","title":"class - EnvService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/env.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                engineApiUrl\n                            \n                            \n                                    Public\n                                engineRestUrl\n                            \n                            \n                                    Public\n                                formioAppUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/env.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            engineApiUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        engineApiUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            engineRestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        engineRestUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formioAppUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAppUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/env.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EnvService {\n\n    // The values that are defined here are the default values that can\n    // be overridden by env.js\n\n    // API url\n    public engineRestUrl = '';\n    public engineApiUrl = '';\n    public formioAppUrl = '';\n\n\n    constructor() {\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveAnnounced$\n                            \n                            \n                                    Private\n                                archiveSoruce\n                            \n                            \n                                filterAnnounced$\n                            \n                            \n                                    Private\n                                filterSource\n                            \n                            \n                                itemChange$\n                            \n                            \n                                    Private\n                                itemSource\n                            \n                            \n                                menuChangeAnnounced$\n                            \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                refreshFiltersAnnounced$\n                            \n                            \n                                    Private\n                                refreshFiltersSource\n                            \n                            \n                                resizeAnnounced$\n                            \n                            \n                                    Private\n                                resizeSource\n                            \n                            \n                                sortingAnnounced$\n                            \n                            \n                                    Private\n                                sortingSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                announceArchive\n                            \n                            \n                                announceFilter\n                            \n                            \n                                announceFiltersRefresh\n                            \n                            \n                                announceItem\n                            \n                            \n                                announceMenuChange\n                            \n                            \n                                announceResize\n                            \n                            \n                                announceSorting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceArchive\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceArchive(archive)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        archive\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceFilter(filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceFiltersRefresh\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceFiltersRefresh(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceMenuChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceMenuChange(change)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceResize\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceResize(item, itemComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemComponent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            announceSorting\n                            \n                            \n                        \n                    \n                \n                \n                    \nannounceSorting(sorting)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sorting\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        archiveAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.archiveSoruce.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            archiveSoruce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        archiveSoruce:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.filterSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemChange$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemChange$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.itemSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            itemSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuChangeAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuChangeAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.menuSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFiltersAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshFiltersAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.refreshFiltersSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshFiltersSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshFiltersSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resizeAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resizeAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.resizeSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resizeSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resizeSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortingAnnounced$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortingAnnounced$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.sortingSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortingSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortingSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/events.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable()\n\n\nexport class EventsService {\n\n  // Observable string sources\n  private resizeSource = new BehaviorSubject({});\n  private filterSource = new BehaviorSubject({});\n  private refreshFiltersSource = new BehaviorSubject({});\n  private archiveSoruce = new BehaviorSubject({});\n  private itemSource = new BehaviorSubject({});\n  private sortingSource = new BehaviorSubject({});\n  private menuSource = new BehaviorSubject({});\n  // Observable string streams\n  resizeAnnounced$ = this.resizeSource.asObservable();\n  filterAnnounced$ = this.filterSource.asObservable();\n  refreshFiltersAnnounced$ = this.refreshFiltersSource.asObservable();\n  archiveAnnounced$ = this.archiveSoruce.asObservable();\n  itemChange$ = this.itemSource.asObservable();\n  sortingAnnounced$ = this.sortingSource.asObservable();\n  menuChangeAnnounced$ = this.menuSource.asObservable();\n\n  // Service message commands\n\n  announceFiltersRefresh(data: string) {\n    this.refreshFiltersSource.next(data);\n  }\n  announceResize(item, itemComponent) {\n    this.resizeSource.next(item);\n  }\n  announceFilter(filter) {\n    this.filterSource.next(filter);\n  }\n  announceArchive(archive) {\n    this.archiveSoruce.next(archive);\n  }\n  announceItem(item) {\n    this.itemSource.next(item);\n  }\n  announceSorting(sorting) {\n    this.sortingSource.next(sorting);\n  }\n  announceMenuChange(change) {\n    this.menuSource.next(change);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExternalService.html":{"url":"injectables/ExternalService.html","title":"injectable - ExternalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExternalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/external.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apiCall\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/external.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiCall\n                            \n                            \n                        \n                    \n                \n                \n                    \napiCall(method, url, params: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:24\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/external.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Log a HeroService message with the MessageService \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExternalService {\n\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  apiCall(method, url, params = {}) {\n    return this.http.request(method, url, { responseType: 'json', body: params });\n\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      result['status'] = error.status;\n      if (error.error.hasOwnProperty('message')) {\n        result['message'] = error.error.message;\n        result['type'] = error.error.type;\n\n      }\n\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterModalComponent.html":{"url":"components/FilterModalComponent.html","title":"component - FilterModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filter-modal/filter-modal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-modal\n            \n\n            \n                styleUrls\n                ./filter-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allCriterias\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                criterias\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                modal\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                orQueries\n                            \n                            \n                                taskGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveFilter\n                            \n                            \n                                updateQuery\n                            \n                            \n                                updateType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, modal: ModalController, navParams: NavParams, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateQuery(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateType\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateType(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allCriterias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allCriterias:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'active', name: 'Active', type: 'boolean' },\n    { key: 'name', name: 'Name', type: 'string' },\n    { key: 'nameLike', name: 'Name Like', type: 'string' },\n    { key: 'description', name: 'Description', type: 'string' },\n    { key: 'descriptionLike', name: 'Description Like', type: 'string' },\n    { key: 'priority', name: 'Priority', type: 'number' },\n    { key: 'priorityMin', name: 'Priority Min', type: 'number' },\n    { key: 'priorityMax', name: 'Priority Max', type: 'number' },\n    { key: 'createdBefore', name: 'Created Before', type: 'date' },\n    { key: 'createdAfter', name: 'Created After', type: 'date' },\n    { key: 'dueBefore', name: 'Due Before', type: 'date' },\n    { key: 'dueAfter', name: 'Due After', type: 'date' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criterias\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        criterias:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    resourceType: 'Task',\n    name: '',\n    owner: '',\n    query: {\n      orQueries: []\n    },\n    properties: {\n      color: '',\n      description: '',\n      priority: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modal:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orQueries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orQueries:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskGroup:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-modal/filter-modal.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport * as _moment from 'moment';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n@Component({\n  selector: 'app-filter-modal',\n  templateUrl: './filter-modal.component.html',\n  styleUrls: ['./filter-modal.component.scss']\n})\nexport class FilterModalComponent implements OnInit {\n  allCriterias = [\n    { key: 'active', name: 'Active', type: 'boolean' },\n    { key: 'name', name: 'Name', type: 'string' },\n    { key: 'nameLike', name: 'Name Like', type: 'string' },\n    { key: 'description', name: 'Description', type: 'string' },\n    { key: 'descriptionLike', name: 'Description Like', type: 'string' },\n    { key: 'priority', name: 'Priority', type: 'number' },\n    { key: 'priorityMin', name: 'Priority Min', type: 'number' },\n    { key: 'priorityMax', name: 'Priority Max', type: 'number' },\n    { key: 'createdBefore', name: 'Created Before', type: 'date' },\n    { key: 'createdAfter', name: 'Created After', type: 'date' },\n    { key: 'dueBefore', name: 'Due Before', type: 'date' },\n    { key: 'dueAfter', name: 'Due After', type: 'date' },\n  ];\n  criterias = [];\n  orQueries = [];\n  taskGroup = 1;\n  filter = {\n    resourceType: 'Task',\n    name: '',\n    owner: '',\n    query: {\n      orQueries: []\n    },\n    properties: {\n      color: '',\n      description: '',\n      priority: ''\n    }\n  };\n  constructor(public auth: AuthService, public modal: ModalController, public navParams: NavParams,\n    public camundaService: CamundaRestService, public event: EventsService) {\n\n  }\n\n  ngOnInit() {\n    this.filter.owner = this.auth.getUser().username;\n    if (this.navParams.data.filterId) {\n      this.camundaService.getFilter(this.navParams.data.filterId).subscribe(filter => {\n        this.filter = filter;\n        this.orQueries = this.filter.query.orQueries;\n        this.allCriterias.forEach(element => {\n          if (this.filter.query[element.key]) {\n            const temp = element;\n            temp['value'] = this.filter.query[element.key];\n            this.criterias.push(temp);\n          }\n        });\n        if (this.orQueries.length > 1) {\n          this.taskGroup = 3;\n        } else if (this.orQueries.hasOwnProperty('assignee')) {\n          this.taskGroup = 1;\n        } else {\n          this.taskGroup = 2;\n        }\n      });\n    }\n    console.log(this.filter);\n  }\n  updateType(event) {\n    this.allCriterias.filter(item => {\n      if (item.key === event.detail.value) {\n        this.criterias.filter(item1 => {\n          if (item1.key === event.detail.value) {\n            item1.type = item.type;\n            item1.value = item1.type === 'boolean' ? true : '';\n          }\n        });\n      }\n    });\n\n  }\n  updateQuery(event) {\n    switch (event.detail.value) {\n      case '1':\n        this.orQueries = [];\n        this.orQueries.push({\n          assignee: this.auth.getUser().username\n        });\n        break;\n      case '2':\n        this.orQueries = [];\n        this.orQueries.push({\n          candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n        });\n        break;\n      case '3':\n        this.orQueries = [];\n        this.orQueries.push({\n          assignee: this.auth.getUser().username,\n          candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n        });\n        break;\n    }\n  }\n  saveFilter() {\n    this.criterias.forEach(element => {\n      if (element.key.length > 0) {\n        this.filter.query[element.key] =\n          element.type === 'date' ? _moment(element.value).format('YYYY-MM-DDTHH:mm:ss.SSSZZ') : element.value;\n      }\n    });\n    this.filter.query['orQueries'] = this.orQueries;\n    console.log(this.filter);\n    if (this.filter.hasOwnProperty('id')) {\n      this.camundaService.updateFilter(this.filter['id'], this.filter).subscribe(() => {\n        this.event.announceFiltersRefresh('');\n        this.modal.dismiss();\n      });\n    } else {\n      this.camundaService.createFilter(this.filter).subscribe(() => {\n        this.event.announceFiltersRefresh('');\n        this.modal.dismiss();\n      });\n    }\n\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{filter.name ? filter.name : 'Add Filter' | translate}}\n  \n\n\n  \n    \n      \n        \n          {{'Name' | translate}}\n          \n        \n      \n      \n        \n          {{'Priority' | translate}}\n          \n        \n      \n    \n    \n      \n        \n          {{'Description' | translate }}\n          \n        \n      \n    \n    \n      \n        \n          {{'Tasks Collection' | translate }}\n          \n            {{'My Tasks' | translate}}\n            {{'Group Tasks' | translate}}\n            {{'My & Group Tasks' | translate}} \n          \n        \n      \n    \n    \n      \n        \n          {{'Filter Criteria' | translate}}\n          \n            \n              {{'Add Criterion' | translate}}\n              \n            \n          \n        \n\n\n        \n          \n            \n               0\">\n                {{'This section is aimed to set the parameters used to filter the tasks' | translate}}\n              \n            \n          \n          \n            \n              \n                \n              \n            \n            \n              \n                {{'Criterion' | translate}}\n                \n                  {{criterion.name |\n                    translate}}\n                \n              \n            \n            \n              \n                {{'Value' | translate}}\n                \n                \n                \n                \n                \n                \n              \n            \n\n          \n\n\n        \n      \n    \n  \n\n\n  \n    \n      \n        {{'Cancel' | translate}}\n      \n      \n        {{'Save' | translate}}\n      \n\n    \n  \n\n    \n\n    \n                \n                    ./filter-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filter.name ? filter.name : \\'Add Filter\\' | translate}}                                {{\\'Name\\' | translate}}                                                {{\\'Priority\\' | translate}}                                                        {{\\'Description\\' | translate }}                                                        {{\\'Tasks Collection\\' | translate }}                      {{\\'My Tasks\\' | translate}}            {{\\'Group Tasks\\' | translate}}            {{\\'My & Group Tasks\\' | translate}}                                                         {{\\'Filter Criteria\\' | translate}}                                    {{\\'Add Criterion\\' | translate}}                                                                                         0\">                {{\\'This section is aimed to set the parameters used to filter the tasks\\' | translate}}                                                                                                                                                            {{\\'Criterion\\' | translate}}                                  {{criterion.name |                    translate}}                                                                                    {{\\'Value\\' | translate}}                                                                                                                                                                            {{\\'Cancel\\' | translate}}                    {{\\'Save\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterOptionsComponent.html":{"url":"components/FilterOptionsComponent.html","title":"component - FilterOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filter-options/filter-options.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-options\n            \n\n            \n                styleUrls\n                ./filter-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, navParams: NavParams, camundaService: CamundaRestService, modalController: ModalController, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filter-options/filter-options.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        edit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalController:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filter-options/filter-options.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController, NavParams, ModalController } from '@ionic/angular';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\n\n@Component({\n  selector: 'app-filter-options',\n  templateUrl: './filter-options.component.html',\n  styleUrls: ['./filter-options.component.scss']\n})\nexport class FilterOptionsComponent implements OnInit {\n  id = '';\n  constructor(public popoverCtrl: PopoverController,\n    public navParams: NavParams,\n    public camundaService: CamundaRestService,\n    public modalController: ModalController,\n    public event: EventsService) {\n    this.id = this.navParams.data.id;\n\n  }\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n  delete() {\n    this.camundaService.deleteFilter(this.id).subscribe(() => {\n      this.event.announceFiltersRefresh('');\n    });\n    this.close();\n  }\n  async edit() {\n    const modal = await this.modalController.create({\n      component: FilterModalComponent,\n      showBackdrop: true,\n      backdropDismiss: true,\n      animated: true,\n      componentProps: { filterId: this.id }\n    });\n    this.close();\n    return await modal.present();\n  }\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Edit\n  Delete\n\n    \n\n    \n                \n                    ./filter-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit  Delete'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteFromLocalStorage\n                            \n                            \n                                    Public\n                                getFromLocalStorage\n                            \n                            \n                                    Public\n                                isFilterOpen\n                            \n                            \n                                    Public\n                                storeOnLocalStorage\n                            \n                            \n                                    Public\n                                updateAllStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/filter.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteFromLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteFromLocalStorage(gridItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFromLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFromLocalStorage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFilterOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFilterOpen(filter, returnObj)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        returnObj\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storeOnLocalStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storeOnLocalStorage(gridItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateAllStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateAllStorage(gridItems)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridItems\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filtersList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/filter.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\n\nconst STORAGE_KEY = 'local_filters';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FilterService {\n\n  filtersList = [];\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) { }\n  public storeOnLocalStorage(gridItem): void {\n    // get array of filters from local storage\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    // push new task to array\n    currentFilterList.push(gridItem);\n    // insert updated array to local storage\n    this.storage.set(STORAGE_KEY, currentFilterList);\n  }\n  public updateAllStorage(gridItems): void {\n    // get array of filters from local storage\n    this.storage.set(STORAGE_KEY, gridItems);\n  }\n  public deleteFromLocalStorage(gridItem): void {\n    // get array of filters from local storage\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    const temp = this.isFilterOpen(gridItem, true);\n    if (temp) {\n      currentFilterList.splice(currentFilterList.indexOf(temp), 1);\n    } this.storage.set(STORAGE_KEY, currentFilterList);\n    // insert updated array to local storage\n  }\n  public isFilterOpen(filter, returnObj = false) {\n    const currentFilterList = this.storage.get(STORAGE_KEY) || [];\n    if (currentFilterList.tasks.filters) {\n      const temp = currentFilterList.tasks.filters.filter(function (item) {\n        return item.id === filter.id;\n      });\n      if (returnObj) {\n        return temp.length > 0 ? temp : false;\n      } else {\n        return temp.length > 0;\n      }\n    } else {\n      return false;\n    }\n  }\n  public getFromLocalStorage() {\n    return this.storage.get(STORAGE_KEY) || false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersMenuComponent.html":{"url":"components/FiltersMenuComponent.html","title":"component - FiltersMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/filters-menu/filters-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters-menu\n            \n\n            \n                styleUrls\n                ./filters-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                filters\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                openFilter\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                filterOptions\n                            \n                            \n                                getFilterCount\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentFilter\n                            \n                            \n                                toggleFilter\n                            \n                            \n                                    Async\n                                userOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, event: EventsService, camundaService: CamundaRestService, translate: TranslateService, modalController: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            filterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterOptions(event, filterId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filterId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilterCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFilterCount(filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilter(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            userOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userOptions(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filters:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalController:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openFilter:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/filters-menu/filters-menu.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { UserOptionsComponent } from '../../../shared/components/user-options/user-options.component';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\nimport { FilterOptionsComponent } from '../filter-options/filter-options.component';\n\n@Component({\n  selector: 'app-filters-menu',\n  templateUrl: './filters-menu.component.html',\n  styleUrls: ['./filters-menu.component.scss'],\n})\n\n\n\nexport class FiltersMenuComponent implements OnInit {\n\n\n  filters = [];\n  openFilter = '';\n\n  constructor(\n    public popoverCtrl: PopoverController,\n    public event: EventsService,\n    private camundaService: CamundaRestService,\n    public translate: TranslateService,\n    public modalController: ModalController,\n    public auth: AuthService) {\n  }\n\n\n\n\n  async userOptions(event) {\n    event.stopPropagation();\n    const popover = await this.popoverCtrl.create({\n      component: UserOptionsComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n\n  async filterOptions(event, filterId) {\n    event.stopPropagation();\n    const popover = await this.popoverCtrl.create({\n      component: FilterOptionsComponent,\n      event: event,\n      componentProps: { id: filterId }\n    });\n    return await popover.present();\n  }\n\n\n  async presentFilter() {\n    const modal = await this.modalController.create({\n      component: FilterModalComponent,\n      showBackdrop: true,\n      backdropDismiss: true,\n      animated: true\n    });\n    return await modal.present();\n  }\n  getFilterCount(filter) {\n    this.camundaService.getFilterCount(filter.id).subscribe(data => {\n      filter.count = data.count;\n    });\n  }\n  toggleFilter(item) {\n    this.openFilter = item.id;\n    this.event.announceFilter({ item: item });\n  }\n\n  ngOnInit() {\n    this.event.refreshFiltersAnnounced$.subscribe(() => {\n      this.camundaService.getFilters({ owner: this.auth.getUser().username }).subscribe((filters) => {\n        this.filters = filters;\n        if (this.filters.length > 0) {\n          const openFilters = this.filters.filter((item) => item.id === this.openFilter);\n          if (openFilters.length > 0) {\n            this.toggleFilter(openFilters[0]);\n\n          } else if (this.openFilter === 'history') {\n            this.toggleFilter({ id: 'history' });\n          } else {\n            this.toggleFilter(this.filters[0]);\n\n          }\n        }\n      });\n    });\n\n    this.camundaService.getFilters({ owner: this.auth.getUser().username }).subscribe(filters => {\n      this.filters = filters;\n      if (filters.length === 0) {\n        const filter = {\n          resourceType: 'Task',\n          name: 'All Tasks',\n          owner: this.auth.getUser().username,\n          query: {\n            orQueries: [\n              {\n                assignee: this.auth.getUser().username,\n                candidateGroups: Array.prototype.map.call(this.auth.getUser().groups, function (item) { return item.id; })\n              }\n            ]\n          },\n          properties: {\n            color: '',\n            description: '',\n            priority: ''\n          }\n        };\n        this.camundaService.createFilter(filter).subscribe((data) => {\n          this.event.announceFiltersRefresh('');\n        });\n      }\n    });\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{\"Add Filter\" | translate}}\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n    {{auth.getUser()?.profile.firstName}} {{auth.getUser()?.profile.lastName}}\n    {{group.name}} \n  \n  \n\n  \n    \n      \n        \n          \n            {{filter.name}}\n            {{filter.count}}\n          \n        \n\n      \n\n      \n        \n          \n        \n      \n\n    \n    \n      \n        \n          \n            {{'Completed Tasks' | translate}}\n          \n        \n\n      \n    \n\n  \n\n    \n\n    \n                \n                    ./filters-menu.component.scss\n                \n                  ion-content{\n    height:100vh;\n  }\n  .toolbar-round {\n    padding: 0px;\n    border-radius: 20px;\n  }\n\n  app-grid {\n    width: 100%;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n    margin-top: -4px;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  ion-note {\n    font-size: 12px;\n    color: var(--ion-color-dark-shade);\n  }\n\n  .details-item {\n    transition: 0.5s;\n    box-shadow: none;\n    border: 1px solid #eee;\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n  .inner-scroll {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .inner-content {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .forecast_container {\n    overflow-x: scroll !important;\n    overflow-y: hidden;\n    word-wrap: break-word;\n    height: auto;\n    font-size: 0.8em;\n    font-weight: 300;\n  }\n\n  @media (min-width: 1140px) {\n    .tasks-pane {\n      min-height: 100%;\n      transition: 0.5s;\n      width: 400px !important;\n      max-width: 400px !important;\n      border-right: 1px solid var(--ion-color-light-shade);\n      &:last-child:not(.full-pane) {\n        width: calc(100% - 400px) !important;\n        max-width: calc(100% - 400px) !important;\n        border-right: 0px;\n        &.collapse-pane {\n          max-width: 49px !important;\n          min-width: auto !important;\n          ion-grid {\n            display: none !important;\n          }\n          ion-list {\n            display: none !important;\n          }\n        }\n      }\n    }\n    .collapse-pane {\n      max-width: 49px !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n      ion-list {\n        display: none !important;\n      }\n    }\n    .full-pane {\n      max-width: calc(100% - 49px) !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n    }\n  }\n\n  .split-pane-md.split-pane-visible>.split-pane-side.collapse-pane,\n  ion-col.collapse-pane {\n    transition: 0.5s;\n    max-width: 49px !important;\n    min-width: auto !important;\n    ion-grid {\n      display: none !important;\n    }\n  }\n\n  ion-scroll {\n    max-height: 100% !important;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\"Add Filter\" | translate}}                                        {{auth.getUser()?.profile.firstName}} {{auth.getUser()?.profile.lastName}}    {{group.name}}                                               {{filter.name}}            {{filter.count}}                                                                                                          {{\\'Completed Tasks\\' | translate}}                              '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\n\nAppFormioComponent\n\nAppFormioComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nAppFormioComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nAppFormioComponent \n\nAppFormioComponent \n\nAppFormioComponent  -->\n\nFormModule->AppFormioComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nFormioResource\n\nFormioResource\n\nFormModule -->\n\nFormioResource->FormModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFormModule -->\n\nSharedModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppFormioComponent\n                        \n                        \n                            FormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormioResource\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppFormioComponent\n                        \n                        \n                            FormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormioResource, FormioResourceConfig, FormioResources } from 'angular-formio/resource';\nimport { FormComponent } from './components/form/form.component';\nimport { AppFormioComponent } from './components/formio/formio.component';\nimport { FormioAuthService } from 'angular-formio/auth';\nimport { FormioModule } from 'angular-formio';\nimport { formioAuthConfigProvider, FormioAppConfigProvider } from '../core/services/env.service.provider';\nimport { SharedModule } from '../shared/shared.module';\n@NgModule({\n  imports: [SharedModule, FormioModule, FormioResource],\n  declarations: [AppFormioComponent, FormComponent],\n\n  exports: [\n     AppFormioComponent, FormComponent\n  ],\n  providers: [\n\n    FormioResources,\n    FormioAuthService,\n    formioAuthConfigProvider,\n    FormioAppConfigProvider,\n    {\n      provide: FormioResourceConfig,\n      useValue: {\n        name: 'servicerequest',\n        form: 'task',\n        parents: [\n          {\n            field: 'user',\n            resource: 'currentUser',\n            filter: false\n          }\n        ]\n      }\n    }\n  ]\n})\n\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/grid/grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid\n            \n\n            \n                styleUrls\n                ./grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/grid/grid.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/grid/grid.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EventsService } from '../../../core/services/events.service';\nimport { ProcessListComponent } from '../../components/process-list/process-list.component';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements OnInit {\n  constructor(public event: EventsService,\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n  async process(event) {\n    const popover = await this.popoverCtrl.create({\n      component: ProcessListComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n  \n  \n  {{'Tasks' | translate}}\n    \n      \n       -->\n      \n    \n  \n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./grid.component.scss\n                \n                \n@media (max-width:1550px) {\n    .padding {\n      padding: 20px !important;\n    }\n  }\n  \n  @media (max-width:740px) {\n    .padding {\n      padding: 0px !important;\n    }\n  }\n  \n  .padding {\n    padding: 40px 100px 80px 100px;\n    overflow: hidden;\n    display: block;\n    position: relative;\n    width: 100%; \n    height: calc(100% - 60px);\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{\\'Tasks\\' | translate}}                 -->                    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridsterComponent.html":{"url":"components/GridsterComponent.html","title":"component - GridsterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridsterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/gridster/gridster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gridster\n            \n\n            \n                styleUrls\n                ./gridster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gridster.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                filterStorage\n                            \n                            \n                                options\n                            \n                            \n                                panels\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changedOptions\n                            \n                            \n                                fixPanelsDirection\n                            \n                            \n                                    Static\n                                itemChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, filterStorage: FilterService, router: Router, route: ActivatedRoute, translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/gridster/gridster.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterStorage\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changedOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangedOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixPanelsDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixPanelsDirection(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            itemChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        itemChange(item, itemComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemComponent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonInit(girdster)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        girdster\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResize(item, itemComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemComponent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterStorage:     FilterService\n\n                    \n                \n                    \n                        \n                            Type :     FilterService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     GridsterConfig\n\n                    \n                \n                    \n                        \n                            Type :     GridsterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        panels:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    tasks: { x: 0, y: 0, cols: 2, rows: 4, filters: [] },\n    details: { x: 2, y: 0, cols: 4, rows: 4, fullscreen: false, open: false },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/gridster/gridster.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CompactType, DisplayGrid, GridsterConfig, GridType } from 'angular-gridster2';\nimport { EventsService } from '../../../core/services/events.service';\nimport { FilterService } from '../../../core/services/filter.service';\n\n@Component({\n  selector: 'app-gridster',\n  templateUrl: './gridster.component.html',\n  styleUrls: ['./gridster.component.scss'],\n})\nexport class GridsterComponent implements OnInit {\n  options: GridsterConfig;\n  panels = {\n    tasks: { x: 0, y: 0, cols: 2, rows: 4, filters: [] },\n    details: { x: 2, y: 0, cols: 4, rows: 4, fullscreen: false, open: false },\n  };\n\n  static itemChange(item, itemComponent) {\n  }\n  onResize(item, itemComponent) {\n  }\n  onInit(girdster) {\n    window.setTimeout(function () {\n      girdster.options.api.resize();\n    }, 2000);\n  }\n\n  constructor(public event: EventsService,\n    public filterStorage: FilterService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n\n  changedOptions() {\n    if (this.options) {\n      this.options.api.optionsChanged();\n    }\n  }\n\n  fixPanelsDirection(dir) {\n    if (dir === 'rtl') {\n      this.panels.tasks.x = this.panels.details.cols;\n      this.panels.details.x = 0;\n    } else {\n      this.panels.details.x = this.panels.tasks.cols;\n      this.panels.tasks.x = 0;\n    }\n\n    this.changedOptions();\n  }\n  ngOnInit() {\n    this.translate.get('dir').subscribe((data) => {\n      this.fixPanelsDirection(data);\n    });\n    this.translate.onLangChange.subscribe(lang => {\n      this.fixPanelsDirection(lang.translations.dir);\n    });\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (this.route.firstChild && this.route.firstChild.snapshot.params['taskId']) {\n          this.panels.details.open = true;\n        } else {\n          this.panels.details.open = false;\n\n        }\n      }\n    });\n\n    this.options = {\n      initCallback: this.onInit,\n      itemResizeCallback: this.onResize,\n      gridType: GridType.Fit,\n      compactType: CompactType.CompactUpAndLeft,\n      margin: 10,\n      outerMarginTop: 0,\n      outerMarginRight: 0,\n      outerMarginBottom: 0,\n      outerMarginLeft: 0,\n      keepFixedHeightInMobile: false,\n      keepFixedWidthInMobile: false,\n      mobileBreakpoint: 740,\n      maxCols: 6,\n      maxRows: 4,\n      maxItemCols: 4,\n      minItemCols: 2,\n      maxItemRows: 4,\n      minItemRows: 4,\n      maxItemArea: 2500,\n      minItemArea: 1,\n      draggable: {\n        enabled: true,\n        ignoreContent: true,\n        dragHandleClass: 'move-handle'\n      },\n      resizable: {\n        enabled: true,\n        handles: { s: false, e: true, n: false, w: true, se: false, ne: false, sw: false, nw: false }\n      },\n      swap: true,\n      pushItems: true,\n      disablePushOnDrag: false,\n      disablePushOnResize: false,\n      pushResizeItems: true,\n      displayGrid: DisplayGrid.None,\n      disableWindowResize: false,\n      disableWarnings: false,\n      scrollToNewItems: false\n    };\n    this.panels.details.open = false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./gridster.component.scss\n                \n                gridster {\n  background: #fff;\n}\n\n@media(max-width:641px) {\n  gridster-item {\n    width: 100%;\n  }\n}\n\n.grid-col {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n  overflow: hidden;\n  --ion-color-base: var(--ion-item-background, transparent);\n  --ion-color-contrast: var(--ion-text-color-step-150, #262626);\n  border-radius: 2px;\n  width: calc(100% - 0px);\n  font-family: var(--ion-font-family, inherit);\n  font-size: 14px;\n  /* box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); */\n  background: #fff;\n  border: 1px solid #e2e2e2;\n}\n\n.grid-col.fullscreen {\n  transform: translate3d(0px, 0px, 0px) !important;\n  width: 100% !important;\n  margin-right: 0px !important;\n  position: relative !important;\n}\n\n.grid-col:hover,\n.grid-col:focus-within {\n  border: 1px solid #e2e2e2;\n}\n\ngridster.mobile {\n  .details-col {\n    position: fixed;\n    top:calc(100% + 55px);\n    transition: 0.5s;\n    left:0px;\n  }\n  .details-col-visible{\n    top:0px;\n    &.fullscreen{\n      position: fixed !important;\n    }\n  }\n\n  gridster-item {\n    height: calc(100% - 60px) !important;  \n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridsterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n    @Input() title;\n    constructor(public translate: TranslateService) {\n\n    }\n}\n\n    \n\n    \n        \n    \n\n\n{{title | translate}}\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageComponent.html":{"url":"components/LanguageComponent.html","title":"component - LanguageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LanguageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language/language.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language\n            \n\n            \n                styleUrls\n                ./language.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./language.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languages\n                            \n                            \n                                    Public\n                                popover\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popover: PopoverController, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language/language.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popover\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLanguage(lang)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        languages:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'ar', lang: 'عربي' },\n    { key: 'en', lang: 'English' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popover:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language/language.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PopoverController } from '@ionic/angular';\nimport { LOCAL_STORAGE, StorageService } from 'angular-webstorage-service';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.scss']\n})\nexport class LanguageComponent implements OnInit {\n  languages = [\n    { key: 'ar', lang: 'عربي' },\n    { key: 'en', lang: 'English' }\n  ];\n  constructor(public translate: TranslateService, public popover: PopoverController,\n    @Inject(LOCAL_STORAGE) private storage: StorageService) { }\n\n  setLanguage(lang) {\n    this.translate.use(lang);\n    this.storage.set('language', lang);\n    this.popover.dismiss();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\n    \n\n    \n        \n  {{language.lang}}\n\n    \n\n    \n                \n                    ./language.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{language.lang}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitchComponent.html":{"url":"components/LanguageSwitchComponent.html","title":"component - LanguageSwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LanguageSwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switch/language-switch.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switch\n            \n\n            \n                styleUrls\n                ./language-switch.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./language-switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                languages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switch/language-switch.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            languages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languages(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/language-switch/language-switch.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageComponent } from '../language/language.component';\n\n@Component({\n  selector: 'app-language-switch',\n  templateUrl: './language-switch.component.html',\n  styleUrls: ['./language-switch.component.scss']\n})\nexport class LanguageSwitchComponent  {\n  constructor(\n    public translate: TranslateService,\n    public popoverCtrl: PopoverController\n  ) {\n\n  }\n  async languages(event) {\n    const popover = await this.popoverCtrl.create({\n      component: LanguageComponent,\n      event: event\n    });\n    return await popover.present();\n  }\n\n}\n\n    \n\n    \n        \n    {{translate.currentLang}}\n    \n\n    \n\n    \n                \n                    ./language-switch.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{translate.currentLang}}    '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsButtonComponent.html":{"url":"components/NotificationsButtonComponent.html","title":"component - NotificationsButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/notifications-button/notifications-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications-button\n            \n\n            \n                styleUrls\n                ./notifications-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/notifications-button/notifications-button.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-notifications-button',\n    templateUrl: './notifications-button.component.html',\n    styleUrls:  ['./notifications-button.component.scss']\n})\nexport class NotificationsButtonComponent {\n    constructor() {\n\n    }\n\n}\n\n    \n\n    \n        \n        11\n        \n    \n    \n\n    \n                \n                    ./notifications-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        11            '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnCreateDirective.html":{"url":"directives/OnCreateDirective.html","title":"directive - OnCreateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  OnCreateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/on-create.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOnCreate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                OnCreateDirective\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/on-create.directive.ts:11\n                            \n                        \n\n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        OnCreateDirective\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/on-create.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/directives/on-create.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, Input, SimpleChange, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appOnCreate]'\n})\n\n\n\nexport class OnCreateDirective implements OnInit {\n\n  @Output() OnCreateDirective: EventEmitter = new EventEmitter();\n  constructor() { }\n  ngOnInit() {\n    this.OnCreateDirective.emit('dummy');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessDefinition.html":{"url":"classes/ProcessDefinition.html","title":"class - ProcessDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/schemas/ProcessDefinition.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/ProcessDefinition.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessDefinition {\n    id: string;\n    name: string;\n    key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcessFormComponent.html":{"url":"components/ProcessFormComponent.html","title":"component - ProcessFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcessFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/process-form/process-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-process-form\n            \n\n            \n                styleUrls\n                ./process-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./process-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                startForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/process-form/process-form.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(submission)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submission\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startForm:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-form/process-form.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n@Component({\n  selector: 'app-process-form',\n  templateUrl: './process-form.component.html',\n  styleUrls: ['./process-form.component.scss']\n})\nexport class ProcessFormComponent implements OnInit {\n  startForm = {};\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public camundaService: CamundaRestService,\n    public event: EventsService\n  ) { }\n  onSubmit(submission) {\n    console.log(submission);\n    this.camundaService.processDefinitionSubmitForm(this.route.snapshot.params['processDefinitionId'], {}).subscribe(instance => {\n      this.camundaService.updateExecutionVariables(instance.id, this.startForm[1],\n        { value: submission._id, type: 'String' }).subscribe(() => {\n          this.event.announceFiltersRefresh('');\n          this.camundaService.updateExecutionVariables(instance.id, 'v_' + this.startForm[0],\n            { value: submission._id + ':' + submission._fvid, type: 'String' }).subscribe(() => {\n              this.router.navigate(['tasks']);\n            });\n        });\n    });\n  }\n  ngOnInit() {\n    this.camundaService.processInstanceStartForm(this.route.snapshot.params['processDefinitionId']).subscribe(startForm => {\n      // startForm.key = 'startrequest:servicerequest';\n      this.startForm = startForm.key.split(':');\n      // this.router.navigate([`/tasks/new/${processDefinitionId}`]);\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./process-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProcessFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcessListComponent.html":{"url":"components/ProcessListComponent.html","title":"component - ProcessListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcessListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/process-list/process-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-process-list\n            \n\n            \n                styleUrls\n                ./process-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./process-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                camundaService\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                processDefinitions\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                startProcess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(camundaService: CamundaRestService, router: Router, event: EventsService, popoverCtrl: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/process-list/process-list.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startProcess\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartProcess(processDefinitionId)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        processDefinitionId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            camundaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camundaService:     CamundaRestService\n\n                    \n                \n                    \n                        \n                            Type :     CamundaRestService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processDefinitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processDefinitions:     ProcessDefinition[]\n\n                    \n                \n                    \n                        \n                            Type :     ProcessDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/process-list/process-list.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { ProcessDefinition } from '../../../core/schemas/ProcessDefinition';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\n\n@Component({\n  selector: 'app-process-list',\n  templateUrl: './process-list.component.html',\n  styleUrls: ['./process-list.component.scss']\n})\nexport class ProcessListComponent implements OnInit {\n  processDefinitions: ProcessDefinition[] = [];\n  constructor(public camundaService: CamundaRestService,\n    public router: Router,\n    public event: EventsService,\n    public popoverCtrl: PopoverController) { }\n\n  startProcess(processDefinitionId) {\n    this.router.navigate([`/tasks/new/${processDefinitionId}`]);\n    this.popoverCtrl.dismiss();\n\n    /*  */\n  }\n  ngOnInit() {\n    this.camundaService.getProcessDefinitions().subscribe((processDefinitions) => {\n      this.processDefinitions = processDefinitions;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  {{processDefinition.name | translate}}\n\n    \n\n    \n                \n                    ./process-list.component.scss\n                \n                ion-item{\n    cursor: pointer;\n}\nion-item:hover{\n    opacity: 0.8;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{processDefinition.name | translate}}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProcessListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nSharedModule -->\n\nLanguageComponent->SharedModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nSharedModule -->\n\nLanguageSwitchComponent->SharedModule\n\n\n\n\n\nNotificationsButtonComponent\n\nNotificationsButtonComponent\n\nSharedModule -->\n\nNotificationsButtonComponent->SharedModule\n\n\n\n\n\nUserOptionsComponent\n\nUserOptionsComponent\n\nSharedModule -->\n\nUserOptionsComponent->SharedModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nLanguageComponent \n\nLanguageComponent \n\nLanguageComponent  -->\n\nSharedModule->LanguageComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nSharedModule->LanguageSwitchComponent \n\n\n\n\n\nNotificationsButtonComponent \n\nNotificationsButtonComponent \n\nNotificationsButtonComponent  -->\n\nSharedModule->NotificationsButtonComponent \n\n\n\n\n\nUserOptionsComponent \n\nUserOptionsComponent \n\nUserOptionsComponent  -->\n\nSharedModule->UserOptionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            LanguageComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                        \n                            NotificationsButtonComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LanguageComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            LanguageComponent\n                        \n                        \n                            LanguageSwitchComponent\n                        \n                        \n                            NotificationsButtonComponent\n                        \n                        \n                            UserOptionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserOptionsComponent } from './components/user-options/user-options.component';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LanguageSwitchComponent } from './components/language-switch/language-switch.component';\nimport { LanguageComponent } from './components/language/language.component';\nimport { NotificationsButtonComponent } from './components/notifications-button/notifications-button.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [TranslateModule, IonicModule, CommonModule],\n  entryComponents: [LanguageComponent, UserOptionsComponent],\n  declarations: [UserOptionsComponent, HeaderComponent, LanguageSwitchComponent, LanguageComponent, NotificationsButtonComponent],\n\n  exports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    UserOptionsComponent,\n    HeaderComponent,\n    LanguageSwitchComponent,\n    LanguageComponent,\n    NotificationsButtonComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortOptionsComponent.html":{"url":"components/SortOptionsComponent.html","title":"component - SortOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SortOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/sort-options/sort-options.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sort-options\n            \n\n            \n                styleUrls\n                ./sort-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventsService\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                sorting\n                            \n                            \n                                sortings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                setSorting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popoverCtrl: PopoverController, eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/sort-options/sort-options.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSorting\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSorting(dir)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dir\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventsService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sorting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sorting:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortings:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'name', type: 'text', direction: 1 },\n    { name: 'description', type: 'text', direction: 1 },\n    { name: 'assignee', type: 'text', direction: 1 },\n    { name: 'created', type: 'datetime', direction: 1 },\n    { name: 'due', type: 'datetime', direction: 1 },\n    { name: 'priority', type: 'number', direction: 1 }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/sort-options/sort-options.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { EventsService } from '../../../core/services/events.service';\n\n@Component({\n  selector: 'app-sort-options',\n  templateUrl: './sort-options.component.html',\n  styleUrls: ['./sort-options.component.scss']\n})\n\nexport class SortOptionsComponent {\n  sorting = 0;\n  sortings = [\n    { name: 'name', type: 'text', direction: 1 },\n    { name: 'description', type: 'text', direction: 1 },\n    { name: 'assignee', type: 'text', direction: 1 },\n    { name: 'created', type: 'datetime', direction: 1 },\n    { name: 'due', type: 'datetime', direction: 1 },\n    { name: 'priority', type: 'number', direction: 1 }\n  ];\n  constructor(public popoverCtrl: PopoverController, public eventsService: EventsService) {\n\n  }\n  setSorting(dir) {\n    const sorting = this.sortings[this.sorting];\n    sorting.direction = dir;\n    this.eventsService.announceSorting(sorting);\n    this.close();\n  }\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n    \n        {{'Sort By' | translate }}\n        \n            {{sorting.name}}\n            \n        \n    \n    \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./sort-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'Sort By\\' | translate }}                    {{sorting.name}}                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'SortOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/schemas/Task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                key\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/schemas/Task.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Task {\n    id: string;\n    name: string;\n    key: string;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailsComponent.html":{"url":"components/TaskDetailsComponent.html","title":"component - TaskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-details/task-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-details\n            \n\n            \n                styleUrls\n                ./task-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                event\n                            \n                            \n                                refreshForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                panels\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(event: EventsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-details/task-details.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        panels\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFullScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFullScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshForm:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-details/task-details.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { EventsService } from '../../../core/services/events.service';\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit {\n  @Input() panels;\n\n  refreshForm = new EventEmitter();\n  // tslint:disable-next-line:max-line-length\n  task;\n  constructor(\n    public event: EventsService,\n     public router: Router) { }\n  toggleFullScreen() {\n    this.panels.details.fullscreen = !this.panels.details.fullscreen;\n  }\n  ngOnInit() {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (event.url.includes('new')) {\n          this.panels.details.fullscreen = true;\n          this.panels.details.open = true;\n        } else {\n          this.panels.details.fullscreen = false;\n\n        }\n      }\n    });\n    this.refreshForm.subscribe();\n    this.event.itemChange$.subscribe(data => {\n      this.task = data;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n  \n\n\n    \n      \n        \n          \n        \n      \n    \n\n\n    \n\n    \n                \n                    ./task-details.component.scss\n                \n                :host:hover,:host:focus-within {\n    ion-header {\n      ion-toolbar {\n        --opacity: 1;\n      }\n  \n      opacity: 1;\n    }\n  }\n  \n  \n  \n  ion-header {\n    opacity: 0.5;\n    transition: 0.3s;\n    ion-searchbar{\n      height:45px;\n    }\n    ion-toolbar {\n      --opacity: 0;\n      --min-height: 53px;\n  \n      ion-button {\n        --height: 23px;\n      }\n  \n      ion-title {\n        padding: 0 0px;\n        font-size: 16px;\n      }\n    }\n  }\n  \n  ion-spinner{\n    margin: 20% auto;\n    width: 100px;\n    display: block;\n    zoom: 2;\n  }\n  ion-content{\n    height: calc(100% - 50px);\n  }\n  .notifications {\n    min-width: 22px;\n}\n  .toolbar-container {}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditComponent.html":{"url":"components/TaskEditComponent.html","title":"component - TaskEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-edit/task-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-edit\n            \n\n            \n                styleUrls\n                ./task-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                events\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                objectKeys\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                task\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                dismissLoading\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCustomEvent\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(events: EventsService, route: ActivatedRoute, router: Router, camundaService: CamundaRestService, loadingController: LoadingController, auth: AuthService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-edit/task-edit.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            dismissLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCustomEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCustomEvent(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit(submission)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submission\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    resourceName: '',\n    resourceId: '',\n    formKey: '',\n    readOnly: false\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        objectKeys:     \n\n                    \n                \n                    \n                        \n                            Default value : Object.keys\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        task:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-edit/task-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { AuthService } from '../../../core/services/auth.service';\n\n\ndeclare global {\n  interface Window { setLanguage: any; }\n}\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.scss'],\n\n})\nexport class TaskEditComponent implements OnInit, OnDestroy {\n  task: any = {};\n  loading: any;\n  form = {\n    resourceName: '',\n    resourceId: '',\n    formKey: '',\n    readOnly: false\n  };\n  objectKeys = Object.keys;\n  constructor(\n    public events: EventsService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private camundaService: CamundaRestService,\n    private loadingController: LoadingController,\n    private auth: AuthService,\n    public translate: TranslateService,\n  ) {\n    //\n\n  }\n\n\n  onCustomEvent(event) {\n    try {\n      if (event.hasOwnProperty('type')) {\n        switch (event.type) {\n          case 'complete':\n            if (this.task.assignee !== this.auth.getUser().username) {\n              this.task.assignee = this.auth.getUser().username;\n              this.camundaService.postAssignTask(this.task.id, { userId: this.task.assignee }).subscribe(() => {\n                this.camundaService.postCompleteTask(this.task.id,\n                  { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                    this.events.announceItem({ taskId: this.task.id, complete: true });\n                    this.events.announceFiltersRefresh('');\n                    this.router.navigate(['tasks']);\n                  });\n              });\n            } else {\n              this.camundaService.postCompleteTask(this.task.id,\n                { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                  this.events.announceItem({ taskId: this.task.id, complete: true });\n                  this.events.announceFiltersRefresh('');\n                  this.router.navigate(['tasks']);\n                });\n            }\n\n            break;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onSubmit(submission) {\n  }\n  ngOnDestroy(): void {\n  }\n  async presentLoading() {\n    this.loading = await this.loadingController.create({});\n    return await this.loading.present();\n  }\n  async dismissLoading() {\n    return await this.loading.dismiss();\n  }\n\n\n\n  ngOnInit() {\n    this.presentLoading().then(() => {\n      this.camundaService.getTask(this.route.snapshot.params.taskId).subscribe((task) => {\n\n\n        this.task = task;\n        if (this.task.executionId && this.task.executionId !== 'undefined') {\n          const keyResourceArray = this.task.formKey.split(':');\n          this.form.formKey = keyResourceArray[0];\n          this.form.resourceName = keyResourceArray[1];\n          this.camundaService.getExecutionVariables(this.task.executionId).subscribe(executionVariables => {\n            this.form.resourceId = executionVariables[this.form.resourceName] ? executionVariables[this.form.resourceName].value : '';\n            this.dismissLoading();\n            console.log(this.form);\n          });\n\n        } else {\n          this.camundaService.getHistoryTask(this.route.snapshot.params.taskId).subscribe(tasks => {\n            if (tasks.length > 0) {\n              this.task = tasks[0];\n\n              this.camundaService.getProcessDefinitionXML(this.task.processDefinitionId).subscribe(xml => {\n                // this.loadingController.dismiss();\n                const parseString = require('xml2js').parseString;\n                parseString(xml.bpmn20Xml, (err, result) => {\n                  const taskDefinition = result['bpmn:definitions']['bpmn:process'][0]['bpmn:userTask'].filter(item => {\n                    return item.$.id === this.task.taskDefinitionKey;\n                  });\n                  console.log(taskDefinition[0].$['camunda:formKey']);\n                  this.task.formKey = taskDefinition[0].$['camunda:formKey'];\n                  const keyResourceArray = this.task.formKey.split(':');\n                  this.form.formKey = keyResourceArray[0];\n                  this.form.resourceName = keyResourceArray[1];\n                  this.form.readOnly = true;\n                  this.camundaService.getVariableInstanceByExecutionId(this.task.executionId).subscribe(executionVariables => {\n                    const resource = executionVariables.filter((variable) => {\n                      return variable.name === this.form.resourceName;\n                    });\n                    this.form.resourceId = (resource && resource.length > 0) ?\n                      resource[0].value : '';\n                    console.log(resource);\n                    console.log(this.form.resourceName);\n                    this.dismissLoading();\n\n                  });\n                });\n              });\n\n\n\n            } else {\n              alert('this task does not exist!');\n              this.dismissLoading();\n            }\n          });\n        }\n      },\n        (err) => {\n\n        });\n\n\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    Please Choose a Task\n\n  \n\n\n    \n\n    \n                \n                    ./task-edit.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Please Choose a Task  '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskItemComponent.html":{"url":"components/TaskItemComponent.html","title":"component - TaskItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/task-item/task-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-item\n            \n\n            \n                styleUrls\n                ./task-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                input\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseItem\n                            \n                            \n                                complete\n                            \n                            \n                                getPriority\n                            \n                            \n                                getStatus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAssignee\n                            \n                            \n                                    Async\n                                presentLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                destoy\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingController: LoadingController, router: Router, auth: AuthService, camundaService: CamundaRestService, event: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/task-item/task-item.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camundaService\n                                                  \n                                                        \n                                                                    CamundaRestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        event\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        destoy\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chooseItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nchooseItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            complete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriority\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriority(priority)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        priority\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus(priority)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        priority\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAssignee\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenAssignee()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            presentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        presentLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('trigger')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'ahmad', username: 'ahmad' },\n    { name: 'eihab', username: 'eihab' },\n    { name: 'imad', username: 'imad' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks/components/task-item/task-item.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.scss']\n})\nexport class TaskItemComponent implements OnInit {\n  @Input() task;\n  @Output() destoy = new EventEmitter();\n  @ViewChild('trigger') input;\n\n  users: any = [\n    { name: 'ahmad', username: 'ahmad' },\n    { name: 'eihab', username: 'eihab' },\n    { name: 'imad', username: 'imad' }\n  ];\n\n  constructor(\n    private loadingController: LoadingController,\n    private router: Router,\n    public auth: AuthService,\n    private camundaService: CamundaRestService,\n    private event: EventsService) { }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({});\n    return await loading.present();\n  }\n\n  openAssignee() {\n    setTimeout(() => {\n      if (this.task.assignee) {\n        this.input.nativeElement.focus();\n        this.task.assignee = null;\n      } else {\n        this.task.assignee = this.auth.getUser().username;\n      }\n      this.camundaService.postAssignTask(this.task.id, { userId: this.task.assignee }).subscribe(data => {\n        // this.event.announceFiltersRefresh('');\n      });\n\n\n    }, 100);\n\n  }\n  chooseItem(item) {\n    this.event.announceItem(item);\n  }\n  complete() {\n    // this.task.complete = true;\n    this.camundaService.postCompleteTask(this.task.id,\n      {\n        variables:\n        {\n          temporal: { value: true },\n          rejectedMng: { value: false },\n        }\n      }\n    ).subscribe(data => {\n      this.task.complete = true;\n      setTimeout(() => {\n        this.destoy.emit();\n      }, 200);\n    });\n  }\n  getPriority(priority) {\n    let value = '';\n    switch (true) {\n      case priority >= 75:\n        value = 'app-bg-danger';\n        break;\n      case priority >= 50:\n        value = 'app-bg-warning';\n        break;\n      case priority >= 25:\n        value = 'app-bg-primary';\n        break;\n      case priority = 75:\n        value = 'Critical';\n        break;\n      case priority >= 50:\n        value = 'Important';\n        break;\n      case priority >= 25:\n        value = 'Normal';\n        break;\n      case priority \n    \n\n    \n          \n    \n      \n        {{task.name}}\n        \n      \n      \n        {{task.description}}\n      \n      \n        \n          {{task.created | date}}\n        \n        \n          {{task.due ? (task.due\n          | date ): 'Due' | translate}}\n        \n        \n        \n        \n        \n      \n\n    \n    \n      \n      \n        {{user.name}}\n      \n      \n        \n        {{'Claim' | translate}}\n        {{task.assignee}}\n      \n      \n        {{'Add Group' | translate}}\n      \n\n      \n        {{'Complete' | translate}}\n       -->\n\n    \n  \n\n    \n\n    \n                \n                    ./task-item.component.scss\n                \n                \n\nion-card.card {\n  margin: 5px;\n  border-radius: 2px;\n  width: calc(100% - 10px);\n  box-shadow: 0px 1px 0px 0px #eee;\n  border-top: 0px;\n  border-right: 0px;\n  border-bottom: 1px #dcdcdc solid !important;\n  transition: 0.4s;\n  max-height: 550px;\n\n  &.complete {\n    max-height: 0px;\n    background-color: rgba(var(--ion-color-success-rgb), 0.50);\n  }\n\n  h2 {\n    font-size: 1.1rem;\n    font-weight: normal;\n  }\n\n  p {\n    padding: 10px 0px;\n    opacity: 0.8;\n  }\n}\n\n.date-picker-badge {\n  font-weight: 100;\n  padding: 5px;\n  margin-right: 5px;\n  font-size: 12px;\n  background: #f8f8f8;\n  border: 1px solid #eee;\n\n  &.due {\n    float: right;\n  }\n\n  ion-icon {\n    font-size: 17px;\n    vertical-align: top;\n    margin: -3px 3px;\n  }\n}\n\n[contentEditable=true]:empty:not(:focus):before {\n  content: attr(data-ph);\n  color: grey;\n  font-style: italic;\n}\n\n.more-details {\n  white-space: initial;\n  padding: 0px;\n  height: auto;\n  max-height: 34px;\n\n  &.task-options {\n    max-height: 0px;\n    padding: 0px;\n  }\n\n  overflow: hidden;\n  margin: 10px 0px;\n  -webkit-transition: max-height 1.2s;\n  -moz-transition: max-height 1.2s;\n  -ms-transition: max-height 1.2s;\n  -o-transition: max-height 1.2s;\n  transition: max-height 1.2s;\n  -webkit-transition: padding 0.2s;\n  -moz-transition:padding 0.2s;\n  -ms-transition: padding 0.2s;\n  -o-transition: padding 0.2s;\n  transition: padding 0.2s;\n\n  p {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n    display: block;\n    overflow: hidden;\n  }\n}\n\nion-card:hover .more-details,\nion-card:focus-within .more-details {\n  p {\n    white-space: normal;\n    text-overflow: initial;\n  }\n\n  max-height: 300px;\n\n  &.task-options {\n    padding: 10px;\n  }\n}\n.router-link-active {\n  background: rgba(var(--ion-color-primary-rgb),0.15);\n}\nion-card:focus {\n  outline: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{task.name}}                            {{task.description}}                              {{task.created | date}}                          {{task.due ? (task.due          | date ): \\'Due\\' | translate}}                                                                          {{user.name}}                            {{\\'Claim\\' | translate}}        {{task.assignee}}                    {{\\'Add Group\\' | translate}}                    {{\\'Complete\\' | translate}}       -->      '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\n\n\n\nexport class TasksComponent {\n\n  constructor() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                  ion-content{\n    height:100vh;\n  }\n  .toolbar-round {\n    padding: 0px;\n    border-radius: 20px;\n  }\n\n  app-grid {\n    width: 100%;\n  }\n\n  .select-md {\n    width: 100%;\n    max-width: 100%;\n    float: right;\n    border: 1px solid #eee;\n  }\n\n  .searchbar-input {\n    box-shadow: none !important;\n    border: 1px solid #eee !important;\n    margin-top: -4px;\n  }\n\n  .filter {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  h3 ion-badge {\n    float: right;\n  }\n\n  .header-md::after {\n    display: none;\n  }\n\n  .header-md {\n    border-bottom: 1px solid #eee;\n  }\n\n  .extra-pad {\n    padding: 13px;\n    .note {\n      font-size: 12px;\n    }\n  }\n\n  ion-note {\n    font-size: 12px;\n    color: var(--ion-color-dark-shade);\n  }\n\n  .details-item {\n    transition: 0.5s;\n    box-shadow: none;\n    border: 1px solid #eee;\n  }\n\n  .more-details {\n    padding: 0px;\n    height: auto;\n    max-height: 18px;\n    overflow: hidden;\n    margin: 10px 0px;\n    -webkit-transition: max-height 1s;\n    -moz-transition: max-height 1s;\n    -ms-transition: max-height 1s;\n    -o-transition: max-height 1s;\n    transition: max-height 1s;\n    p {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .item:hover .more-details {\n    p {\n      white-space: initial;\n      text-overflow: ellipsis;\n    }\n    max-height: 300px;\n  }\n\n  .actions-toolbar {\n    .button-inner div {\n      font-size: 12px;\n    }\n  }\n\n  .inner-scroll {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .inner-content {\n    height: calc(100vh - 120px);\n    max-height: 100vh;\n  }\n\n  .forecast_container {\n    overflow-x: scroll !important;\n    overflow-y: hidden;\n    word-wrap: break-word;\n    height: auto;\n    font-size: 0.8em;\n    font-weight: 300;\n  }\n\n  @media (min-width: 1140px) {\n    .tasks-pane {\n      min-height: 100%;\n      transition: 0.5s;\n      width: 400px !important;\n      max-width: 400px !important;\n      border-right: 1px solid var(--ion-color-light-shade);\n      &:last-child:not(.full-pane) {\n        width: calc(100% - 400px) !important;\n        max-width: calc(100% - 400px) !important;\n        border-right: 0px;\n        &.collapse-pane {\n          max-width: 49px !important;\n          min-width: auto !important;\n          ion-grid {\n            display: none !important;\n          }\n          ion-list {\n            display: none !important;\n          }\n        }\n      }\n    }\n    .collapse-pane {\n      max-width: 49px !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n      ion-list {\n        display: none !important;\n      }\n    }\n    .full-pane {\n      max-width: calc(100% - 49px) !important;\n      min-width: auto !important;\n      ion-grid {\n        display: none !important;\n      }\n    }\n  }\n\n  .split-pane-md.split-pane-visible>.split-pane-side.collapse-pane,\n  ion-col.collapse-pane {\n    transition: 0.5s;\n    max-width: 49px !important;\n    min-width: auto !important;\n    ion-grid {\n      display: none !important;\n    }\n  }\n\n  ion-scroll {\n    max-height: 100% !important;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAddRequestButtonComponent\n\nAddRequestButtonComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nAddRequestButtonComponent->TasksModule\n\n\n\n\n\nFilterModalComponent\n\nFilterModalComponent\n\nTasksModule -->\n\nFilterModalComponent->TasksModule\n\n\n\n\n\nFilterOptionsComponent\n\nFilterOptionsComponent\n\nTasksModule -->\n\nFilterOptionsComponent->TasksModule\n\n\n\n\n\nFiltersMenuComponent\n\nFiltersMenuComponent\n\nTasksModule -->\n\nFiltersMenuComponent->TasksModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nTasksModule -->\n\nGridComponent->TasksModule\n\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\nTasksModule -->\n\nGridsterComponent->TasksModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTasksModule -->\n\nOnCreateDirective->TasksModule\n\n\n\n\n\nProcessFormComponent\n\nProcessFormComponent\n\nTasksModule -->\n\nProcessFormComponent->TasksModule\n\n\n\n\n\nProcessListComponent\n\nProcessListComponent\n\nTasksModule -->\n\nProcessListComponent->TasksModule\n\n\n\n\n\nSortOptionsComponent\n\nSortOptionsComponent\n\nTasksModule -->\n\nSortOptionsComponent->TasksModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nTasksModule -->\n\nTaskDetailsComponent->TasksModule\n\n\n\n\n\nTaskEditComponent\n\nTaskEditComponent\n\nTasksModule -->\n\nTaskEditComponent->TasksModule\n\n\n\n\n\nTaskGridComponent\n\nTaskGridComponent\n\nTasksModule -->\n\nTaskGridComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nTasksModule -->\n\nFormModule->TasksModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTasksModule -->\n\nSharedModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddRequestButtonComponent\n                        \n                        \n                            FilterModalComponent\n                        \n                        \n                            FilterOptionsComponent\n                        \n                        \n                            FiltersMenuComponent\n                        \n                        \n                            GridComponent\n                        \n                        \n                            GridsterComponent\n                        \n                        \n                            OnCreateDirective\n                        \n                        \n                            ProcessFormComponent\n                        \n                        \n                            ProcessListComponent\n                        \n                        \n                            SortOptionsComponent\n                        \n                        \n                            TaskDetailsComponent\n                        \n                        \n                            TaskEditComponent\n                        \n                        \n                            TaskGridComponent\n                        \n                        \n                            TaskItemComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FilterModalComponent\n                        \n                        \n                            FilterOptionsComponent\n                        \n                        \n                            ProcessListComponent\n                        \n                        \n                            SortOptionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule, MatDatepickerModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GridsterModule } from 'angular-gridster2';\nimport { OnCreateDirective } from '../core/directives/on-create.directive';\nimport { SharedModule } from '../shared/shared.module';\nimport { AddRequestButtonComponent } from './components/add-request-button/add-request-button.component';\nimport { FilterModalComponent } from './components/filter-modal/filter-modal.component';\nimport { FilterOptionsComponent } from './components/filter-options/filter-options.component';\nimport { FiltersMenuComponent } from './components/filters-menu/filters-menu.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { GridsterComponent } from './components/gridster/gridster.component';\nimport { ProcessFormComponent } from './components/process-form/process-form.component';\nimport { ProcessListComponent } from './components/process-list/process-list.component';\nimport { SortOptionsComponent } from './components/sort-options/sort-options.component';\nimport { TaskDetailsComponent } from './components/task-details/task-details.component';\nimport { TaskEditComponent } from './components/task-edit/task-edit.component';\nimport { TaskGridComponent } from './components/task-grid/task-grid.component';\nimport { TaskItemComponent } from './components/task-item/task-item.component';\nimport { TasksComponent } from './tasks.component';\nimport { FormModule } from '../form/form.module';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasksComponent,\n    children: [\n      { path: 'edit/:taskId', component: TaskEditComponent },\n      { path: 'new/:processDefinitionId', component: ProcessFormComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    GridsterModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule, MatInputModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    FormModule\n  ],\n  entryComponents: [FilterOptionsComponent, ProcessListComponent, FilterModalComponent, SortOptionsComponent],\n  declarations: [\n    ProcessFormComponent,\n    FilterOptionsComponent,\n    ProcessListComponent,\n    FilterModalComponent,\n    TaskEditComponent,\n    TasksComponent,\n    OnCreateDirective,\n    GridsterComponent,\n    GridComponent,\n    FiltersMenuComponent,\n    TaskGridComponent,\n    TaskItemComponent,\n    TaskDetailsComponent,\n    SortOptionsComponent,\n    AddRequestButtonComponent],\n\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserOptionsComponent.html":{"url":"components/UserOptionsComponent.html","title":"component - UserOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-options/user-options.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-options\n            \n\n            \n                styleUrls\n                ./user-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                eventService\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                popoverCtrl\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventService: EventsService, translate: TranslateService, auth: AuthService, popoverCtrl: PopoverController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-options/user-options.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventService:     EventsService\n\n                    \n                \n                    \n                        \n                            Type :     EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popoverCtrl:     PopoverController\n\n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translate:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/user-options/user-options.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavParams, PopoverController } from '@ionic/angular';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-options',\n  templateUrl: './user-options.component.html',\n  styleUrls: ['./user-options.component.scss']\n})\nexport class UserOptionsComponent implements OnInit {\n  id = '';\n  constructor(public eventService: EventsService, public translate: TranslateService,\n    public auth: AuthService, public popoverCtrl: PopoverController, public navParams: NavParams) {\n    this.id = this.navParams.data.id;\n\n  }\n  close() {\n    this.popoverCtrl.dismiss();\n  }\n  logout() {\n    this.auth.logout();\n    this.popoverCtrl.dismiss();\n  }\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{'Account' | translate }} -->\n  {{'Logout' | translate }}\n\n    \n\n    \n                \n                    ./user-options.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'Account\\' | translate }} -->  {{\\'Logout\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddRequestButtonComponent', 'selector': 'app-add-request-button'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppFormioComponent', 'selector': 'app-formio'},{'name': 'AuthIndexComponent', 'selector': 'app-index-login'},{'name': 'AuthLoginComponent', 'selector': 'app-auth-login'},{'name': 'FilterModalComponent', 'selector': 'app-filter-modal'},{'name': 'FilterOptionsComponent', 'selector': 'app-filter-options'},{'name': 'FiltersMenuComponent', 'selector': 'app-filters-menu'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridsterComponent', 'selector': 'app-gridster'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'LanguageSwitchComponent', 'selector': 'app-language-switch'},{'name': 'NotificationsButtonComponent', 'selector': 'app-notifications-button'},{'name': 'ProcessFormComponent', 'selector': 'app-process-form'},{'name': 'ProcessListComponent', 'selector': 'app-process-list'},{'name': 'SortOptionsComponent', 'selector': 'app-sort-options'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TaskEditComponent', 'selector': 'app-task-edit'},{'name': 'TaskGridComponent', 'selector': 'app-task-grid'},{'name': 'TaskItemComponent', 'selector': 'app-task-item'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UserOptionsComponent', 'selector': 'app-user-options'}];\n    var DIRECTIVES = [{'name': 'OnCreateDirective', 'selector': '[appOnCreate]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/components/task-edit/task-edit.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        setLanguage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        setLanguage\n                                    \n                                \n                                \n                                    \n                                        setLanguage:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CamundaRestService } from '../../../core/services/camunda-rest.service';\nimport { EventsService } from '../../../core/services/events.service';\nimport { AuthService } from '../../../core/services/auth.service';\n\n\ndeclare global {\n  interface Window { setLanguage: any; }\n}\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.scss'],\n\n})\nexport class TaskEditComponent implements OnInit, OnDestroy {\n  task: any = {};\n  loading: any;\n  form = {\n    resourceName: '',\n    resourceId: '',\n    formKey: '',\n    readOnly: false\n  };\n  objectKeys = Object.keys;\n  constructor(\n    public events: EventsService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private camundaService: CamundaRestService,\n    private loadingController: LoadingController,\n    private auth: AuthService,\n    public translate: TranslateService,\n  ) {\n    //\n\n  }\n\n\n  onCustomEvent(event) {\n    try {\n      if (event.hasOwnProperty('type')) {\n        switch (event.type) {\n          case 'complete':\n            if (this.task.assignee !== this.auth.getUser().username) {\n              this.task.assignee = this.auth.getUser().username;\n              this.camundaService.postAssignTask(this.task.id, { userId: this.task.assignee }).subscribe(() => {\n                this.camundaService.postCompleteTask(this.task.id,\n                  { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                    this.events.announceItem({ taskId: this.task.id, complete: true });\n                    this.events.announceFiltersRefresh('');\n                    this.router.navigate(['tasks']);\n                  });\n              });\n            } else {\n              this.camundaService.postCompleteTask(this.task.id,\n                { variables: (JSON.parse(event.component.properties['variables']) || {}) }).subscribe(() => {\n                  this.events.announceItem({ taskId: this.task.id, complete: true });\n                  this.events.announceFiltersRefresh('');\n                  this.router.navigate(['tasks']);\n                });\n            }\n\n            break;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  onSubmit(submission) {\n  }\n  ngOnDestroy(): void {\n  }\n  async presentLoading() {\n    this.loading = await this.loadingController.create({});\n    return await this.loading.present();\n  }\n  async dismissLoading() {\n    return await this.loading.dismiss();\n  }\n\n\n\n  ngOnInit() {\n    this.presentLoading().then(() => {\n      this.camundaService.getTask(this.route.snapshot.params.taskId).subscribe((task) => {\n\n\n        this.task = task;\n        if (this.task.executionId && this.task.executionId !== 'undefined') {\n          const keyResourceArray = this.task.formKey.split(':');\n          this.form.formKey = keyResourceArray[0];\n          this.form.resourceName = keyResourceArray[1];\n          this.camundaService.getExecutionVariables(this.task.executionId).subscribe(executionVariables => {\n            this.form.resourceId = executionVariables[this.form.resourceName] ? executionVariables[this.form.resourceName].value : '';\n            this.dismissLoading();\n            console.log(this.form);\n          });\n\n        } else {\n          this.camundaService.getHistoryTask(this.route.snapshot.params.taskId).subscribe(tasks => {\n            if (tasks.length > 0) {\n              this.task = tasks[0];\n\n              this.camundaService.getProcessDefinitionXML(this.task.processDefinitionId).subscribe(xml => {\n                // this.loadingController.dismiss();\n                const parseString = require('xml2js').parseString;\n                parseString(xml.bpmn20Xml, (err, result) => {\n                  const taskDefinition = result['bpmn:definitions']['bpmn:process'][0]['bpmn:userTask'].filter(item => {\n                    return item.$.id === this.task.taskDefinitionKey;\n                  });\n                  console.log(taskDefinition[0].$['camunda:formKey']);\n                  this.task.formKey = taskDefinition[0].$['camunda:formKey'];\n                  const keyResourceArray = this.task.formKey.split(':');\n                  this.form.formKey = keyResourceArray[0];\n                  this.form.resourceName = keyResourceArray[1];\n                  this.form.readOnly = true;\n                  this.camundaService.getVariableInstanceByExecutionId(this.task.executionId).subscribe(executionVariables => {\n                    const resource = executionVariables.filter((variable) => {\n                      return variable.name === this.form.resourceName;\n                    });\n                    this.form.resourceId = (resource && resource.length > 0) ?\n                      resource[0].value : '';\n                    console.log(resource);\n                    console.log(this.form.resourceName);\n                    this.dismissLoading();\n\n                  });\n                });\n              });\n\n\n\n            } else {\n              alert('this task does not exist!');\n              this.dismissLoading();\n            }\n          });\n        }\n      },\n        (err) => {\n\n        });\n\n\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/components/auth-index/auth-index.component.ts\n            \n            \n                component\n            \n            \n                AuthIndexComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/auth-login/auth-login.component.ts\n            \n            \n                component\n            \n            \n                AuthLoginComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/directives/on-create.directive.ts\n            \n            \n                directive\n            \n            \n                OnCreateDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/schemas/ProcessDefinition.ts\n            \n            \n                class\n            \n            \n                ProcessDefinition\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/schemas/Task.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            \n                variable\n            \n            \n                STORAGE_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/camunda-rest.service.ts\n            \n            \n                injectable\n            \n            \n                CamundaRestService\n            \n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                EnvServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                EnvServiceProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                FormioAppConfigFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                FormioAppConfigProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                formioAuthConfigFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.provider.ts\n            \n            \n                variable\n            \n            \n                formioAuthConfigProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/env.service.ts\n            \n            \n                class\n            \n            \n                EnvService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/events.service.ts\n            \n            \n                injectable\n            \n            \n                EventsService\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/core/services/external.service.ts\n            \n            \n                injectable\n            \n            \n                ExternalService\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/services/filter.service.ts\n            \n            \n                injectable\n            \n            \n                FilterService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/filter.service.ts\n            \n            \n                variable\n            \n            \n                STORAGE_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/form/components/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/app/form/components/formio/formio.component.ts\n            \n            \n                component\n            \n            \n                AppFormioComponent\n            \n            \n                0 %\n                (0/52)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switch/language-switch.component.ts\n            \n            \n                component\n            \n            \n                LanguageSwitchComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/language/language.component.ts\n            \n            \n                component\n            \n            \n                LanguageComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/notifications-button/notifications-button.component.ts\n            \n            \n                component\n            \n            \n                NotificationsButtonComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-options/user-options.component.ts\n            \n            \n                component\n            \n            \n                UserOptionsComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tasks/components/add-request-button/add-request-button.component.ts\n            \n            \n                component\n            \n            \n                AddRequestButtonComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filter-modal/filter-modal.component.ts\n            \n            \n                component\n            \n            \n                FilterModalComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filter-options/filter-options.component.ts\n            \n            \n                component\n            \n            \n                FilterOptionsComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tasks/components/filters-menu/filters-menu.component.ts\n            \n            \n                component\n            \n            \n                FiltersMenuComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/tasks/components/grid/grid.component.ts\n            \n            \n                component\n            \n            \n                GridComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/tasks/components/gridster/gridster.component.ts\n            \n            \n                component\n            \n            \n                GridsterComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tasks/components/process-form/process-form.component.ts\n            \n            \n                component\n            \n            \n                ProcessFormComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/components/process-list/process-list.component.ts\n            \n            \n                component\n            \n            \n                ProcessListComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/components/sort-options/sort-options.component.ts\n            \n            \n                component\n            \n            \n                SortOptionsComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-details/task-details.component.ts\n            \n            \n                component\n            \n            \n                TaskDetailsComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-edit/task-edit.component.ts\n            \n            \n                component\n            \n            \n                TaskEditComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-edit/task-edit.component.ts\n            \n            \n                interface\n            \n            \n                Window\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-grid/task-grid.component.ts\n            \n            \n                component\n            \n            \n                TaskGridComponent\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/tasks/components/task-item/task-item.component.ts\n            \n            \n                component\n            \n            \n                TaskItemComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.component.ts\n            \n            \n                component\n            \n            \n                TasksComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.7\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ~6.1.1\n        \n            @angular/core : ~6.1.1\n        \n            @angular/forms : ~6.1.1\n        \n            @angular/http : ~6.1.1\n        \n            @angular/material : ^6.4.7\n        \n            @angular/material-moment-adapter : ^6.4.7\n        \n            @angular/platform-browser : ~6.1.1\n        \n            @angular/platform-browser-dynamic : ~6.1.1\n        \n            @angular/router : ~6.1.1\n        \n            @ionic-native/core : ^5.0.0-beta.14\n        \n            @ionic-native/splash-screen : 5.0.0-beta.14\n        \n            @ionic-native/status-bar : 5.0.0-beta.14\n        \n            @ionic/angular : ^4.0.0-beta.12\n        \n            @ionic/ng-toolkit : ^1.0.0\n        \n            @ionic/schematics-angular : ^1.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            angular-formio : ^3.5.0\n        \n            angular-gridster2 : ^6.0.5\n        \n            angular-webstorage-service : ^1.0.2\n        \n            bootstrap : ^4.1.3\n        \n            bootswatch : ^4.1.3\n        \n            buffer : ^5.2.1\n        \n            core-js : ^2.5.3\n        \n            events : ^3.0.0\n        \n            formio-export : ^0.3.0\n        \n            formiojs : ^3.9.4\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            rxjs : 6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            stream : 0.0.2\n        \n            timers : ^0.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../core.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthIndexComponent\n\nAuthIndexComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthIndexComponent->AuthModule\n\n\n\n\n\nAuthLoginComponent\n\nAuthLoginComponent\n\nAuthModule -->\n\nAuthLoginComponent->AuthModule\n\n\n\n\n\nFormioAuth\n\nFormioAuth\n\nAuthModule -->\n\nFormioAuth->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nSharedModule->FormModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nLanguageComponent \n\nLanguageComponent \n\nLanguageComponent  -->\n\nSharedModule->LanguageComponent \n\n\n\n\n\nLanguageSwitchComponent \n\nLanguageSwitchComponent \n\nLanguageSwitchComponent  -->\n\nSharedModule->LanguageSwitchComponent \n\n\n\n\n\nNotificationsButtonComponent \n\nNotificationsButtonComponent \n\nNotificationsButtonComponent  -->\n\nSharedModule->NotificationsButtonComponent \n\n\n\n\n\nUserOptionsComponent \n\nUserOptionsComponent \n\nUserOptionsComponent  -->\n\nSharedModule->UserOptionsComponent \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nSharedModule->TasksModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nCamundaRestService\n\nCamundaRestService\n\nCoreModule -->\n\nCamundaRestService->CoreModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nCoreModule -->\n\nEventsService->CoreModule\n\n\n\n\n\nExternalService\n\nExternalService\n\nCoreModule -->\n\nExternalService->CoreModule\n\n\n\n\n\nAppFormioComponent\n\nAppFormioComponent\n\nFormModule -->\n\nAppFormioComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nAppFormioComponent \n\nAppFormioComponent \n\nAppFormioComponent  -->\n\nFormModule->AppFormioComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\nTasksModule -->\n\nFormModule->TasksModule\n\n\n\n\n\nFormioResource\n\nFormioResource\n\nFormModule -->\n\nFormioResource->FormModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nSharedModule -->\n\nLanguageComponent->SharedModule\n\n\n\n\n\nLanguageSwitchComponent\n\nLanguageSwitchComponent\n\nSharedModule -->\n\nLanguageSwitchComponent->SharedModule\n\n\n\n\n\nNotificationsButtonComponent\n\nNotificationsButtonComponent\n\nSharedModule -->\n\nNotificationsButtonComponent->SharedModule\n\n\n\n\n\nUserOptionsComponent\n\nUserOptionsComponent\n\nSharedModule -->\n\nUserOptionsComponent->SharedModule\n\n\n\n\n\nAddRequestButtonComponent\n\nAddRequestButtonComponent\n\nTasksModule -->\n\nAddRequestButtonComponent->TasksModule\n\n\n\n\n\nFilterModalComponent\n\nFilterModalComponent\n\nTasksModule -->\n\nFilterModalComponent->TasksModule\n\n\n\n\n\nFilterOptionsComponent\n\nFilterOptionsComponent\n\nTasksModule -->\n\nFilterOptionsComponent->TasksModule\n\n\n\n\n\nFiltersMenuComponent\n\nFiltersMenuComponent\n\nTasksModule -->\n\nFiltersMenuComponent->TasksModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nTasksModule -->\n\nGridComponent->TasksModule\n\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\nTasksModule -->\n\nGridsterComponent->TasksModule\n\n\n\n\n\nOnCreateDirective\n\nOnCreateDirective\n\nTasksModule -->\n\nOnCreateDirective->TasksModule\n\n\n\n\n\nProcessFormComponent\n\nProcessFormComponent\n\nTasksModule -->\n\nProcessFormComponent->TasksModule\n\n\n\n\n\nProcessListComponent\n\nProcessListComponent\n\nTasksModule -->\n\nProcessListComponent->TasksModule\n\n\n\n\n\nSortOptionsComponent\n\nSortOptionsComponent\n\nTasksModule -->\n\nSortOptionsComponent->TasksModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nTasksModule -->\n\nTaskDetailsComponent->TasksModule\n\n\n\n\n\nTaskEditComponent\n\nTaskEditComponent\n\nTasksModule -->\n\nTaskEditComponent->TasksModule\n\n\n\n\n\nTaskGridComponent\n\nTaskGridComponent\n\nTasksModule -->\n\nTaskGridComponent->TasksModule\n\n\n\n\n\nTaskItemComponent\n\nTaskItemComponent\n\nTasksModule -->\n\nTaskItemComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EnvServiceFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            EnvServiceProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            FormioAppConfigFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            FormioAppConfigProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            formioAuthConfigFactory   (src/.../env.service.provider.ts)\n                        \n                        \n                            formioAuthConfigProvider   (src/.../env.service.provider.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            STORAGE_KEY   (src/.../filter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/env.service.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EnvServiceFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const env = new EnvService();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (browserWindowEnv.hasOwnProperty(key)) {\n            env[key] = window['__env'][key];\n        }\n    }\n\n    return env;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EnvServiceProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: EnvService,\n    useFactory: EnvServiceFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FormioAppConfigFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FormioAppConfigFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const appConfig = new FormioAppConfig();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (appConfig.hasOwnProperty(key)) {\n            appConfig[key] = window['__env'][key];\n        }\n    }\n\n    return appConfig;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FormioAppConfigProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FormioAppConfigProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: FormioAppConfig,\n    useFactory: FormioAppConfigFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formioAuthConfigFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAuthConfigFactory:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    // Create env\n    const authConfig = new FormioAuthConfig();\n\n    // Read environment variables from browser window\n    const browserWindow = window || {};\n    const browserWindowEnv = browserWindow['__env'] || {};\n\n    // Assign environment variables from browser window to env\n    // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n    // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n    for (const key in browserWindowEnv) {\n        if (authConfig.hasOwnProperty(key)) {\n            authConfig[key] = window['__env'][key];\n        }\n    }\n\n    return authConfig;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formioAuthConfigProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formioAuthConfigProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: FormioAuthConfig,\n    useFactory: formioAuthConfigFactory,\n    deps: [],\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LoggedInUser'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/filter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STORAGE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'local_filters'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
